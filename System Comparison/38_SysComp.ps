%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: 38_SysComp.dvi
%%CreationDate: Mon Dec  3 23:56:34 2018
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold URWPalladioL-Ital
%%+ NimbusSanL-Bold NimbusSanL-Regu
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter 38_SysComp.dvi -o
%+ 38_SysComp.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.12.03:2356
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: URWPalladioL-Ital
%!PS-AdobeFont-1.0: URWPalladioL-Ital 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Italic) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -9.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Ital def
/PaintType 0 def
/WMode 0 def
/FontBBox {-170 -305 1010 941} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB5F973DECC54C8130ABE
C8E23C8067FC409DBA23A469DC7C6C4F7EEDC3DA588EE3C5B2829D3E1492978B
F91C30C1912183DB62BA489418A68C3BD44566603673FAFE6C3DD78FDFC1F6A0
840DFA44EAD8A5653DDF2FE86B8BDF672707D2AAC76CE376C2C9E56EB95F30CD
75B1E312BE777EAD75EFA21114335130DDC559ACC1A14454397984D624EEB43A
C7BD688E270025A34A912884DF387744462E4F666099415F25F86999B31B0588
576296579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FC
F88AA072958C75F616D971AFB3D9116E041EE7B66C39DA4481A97509DE7AC156
CB43C5A85501E66164E5FC61F9C64EE138CA0D9A0808BE0443CF3FBAD13C63EE
E7E39F1D385A453E8095DB2FF5914A611E11BBDDB04D6FC55D51B08358EF7253
9B8E1FE26561CD5CA9661C91D264B3810A37BE373BF66FCB021E4407375ECAF6
BEDC1561D701A5885F4216EC592958C80DB9B8365D66A8E075A88782C4BC6161
F6B5246F49B14E4E086FD10E01EDEA5D95A0F67D9F6D16C093CC98116B652B60
04B7FBD451E536399DE7A8D8B8E0740228524FA5CF81735BBC72B976F955FB3F
85B91278057DC1FA6B42FF84B9F267188631A0EB7B4456653620151073F4275C
9B80D71B4DA3EF23BA2811F90A844D2D4A18C2D3E7C75DC2351F250E946C49EE
1D67BA5377ABAE009B18599825EAA89BAB6B56BC1177B32B4863A004CC7448B0
27D9F6030ABABDDED61E95CF4D02EA9170BBCF04E982FB170EFF61B5F0A3E39A
E4596CB6B478F6EA85D464460C3E3C301813928D1A4140ED2931D06F55DA1B92
575627B7363A7B2F52C2EBCB003F3168ACEADBC274B460104B32A37A35E08E61
6B4C58ED4BC82DA01AE19F2AFD0CA670D4CD12464788C7AF3C22AAE6B2B67FBD
72227163E56D6B000CA09205E5D9A38451EE561182C9DD5B1A5F87F2FDA046C4
AD12C31467458A4D197286E0E5D73D649B0D3AAF01749ADCFC567DAE21DCA903
9DA02B9128F9FC47121777114AD0F0B9810DB9B0A0DF61A899BA3D051FD8C0A7
379BD912296E6FBFB3CAD4DA410E69C542CAA884199C66B2C9EE870CF8E26454
58F781186D6D2E9649D38BB4BD30A885FD5F1BCBAEF1CF5A47C770E62C69C1B1
BA780A1BC0E605A1D0942D462E923C2158D476D0FE07A6624FEBC23E7E46655B
E5952539F63EC09704F9815DB6DB1EB3C7EEEDB1C1BC8E20988FBC4C1C654982
A0F73BA0CF85D4C002C6E37F6C59FAF7FFBCC77283645E83C542A8A954DE6F91
4663BAB0C9AF290315BD56EA91D69662F84C91484F5D92B15219551572A4E746
F1B43B3B4C2D26211FA9171ABEEA37D715E75909817B8C763107C608F93D0795
19A10F8055E43C98F96CB526238D2B7B6AB1161E8FF899BD979A8457FE542CD3
33477F40853D7957E904AC7C2AD962C28C42F61379D428F189AC243CF795016B
733C8A6228CD23F28461F0E811F04F8876DFBBDAF12DEE4D80AA64DCE8DC395B
DF4A995BFA6638DED0E5E8A0D0F33022188CA9EA8614DDA4D011E383B876F0E7
8623F9D64467F110E9E422402E174C0FEF0F7CCB94004DA5B914E044534DA5A8
56B4A806FB8CFDC77DA03B4BD6210B8B429C2E01EDDD8E74C25BE31A296BD9F6
9A15FC31DECB376B138292F2F3BD650E492ECA67D539F5618E255704748C0625
FAB1DEA0D55F11A0674E11C30C0E964B04D2E9AF70AD7F40F2E194844E76B625
836C94F281B695D282665B4A9A9E06210DC568582584C21E0F14B834CE2DCFC3
9617FE918475FBD0EC66FC2DC0504D46B1A4D467D56929A551B8800C7A6C788A
20487BEA282BBB6AB6F629D9424C1E354BC3C2D960005D56FCA67A643142F580
4346C1264135E15756B43D90E252FEC1DFF99CF458230A1642F9D6F432581CC3
2E2D7F259F03A09D5B3A8E7D70F350CE4F9E010A7A2D9DF35CA51BFD38956234
C19F727385EAAF8F1ABF62A78E43E18E94C63683A1F5C6E905B47A86A564DBA2
0586A16717173A5C458B83DDE63F567D82EC21184CACB3C53D9E93A5B8CFE102
660F62837784235DF844DCC37DFD64729852A1066352EB3A95E1D26ACE85EC96
2BDF7F4F94A3631D168974251EEDA8600201AFCE3FB331F3B29979ED65F8A446
990DB005B6F68416E6727551DB888567C1C1717D850B5672DFFE46D7A42ADD74
914BA114981044632694A865679F9FF9D1B29CA0D8B5B21099C32FDB45A9651E
1E6EB746068AD04E223E4A3A89FBE9D0436D097DF59AF09EC7D79DEBA34C4381
E7A53DA75F8D7AE874B6A3578A16E44B8EAA549AECD647E9B00CF506897121E4
5FE516CF73B32B25E17B86F99CE584DC3836AF8F93CF65587493196EAB89BBF4
3D6F9A2218226C4426CFAA97F77E117B60C9957D578933BC830963974BC8F5CA
52EFB064F387259191A318D55DD4AA77B010044CEE316E2F0AE4F6A8895A73DD
46A2C464936AEA10913B3403C21385932BC9F78CD0476CEECDDFFEC83F65B0E6
BF7A6278CA1FD4197CCF3D6FC82B9A27D6695A95B4313C5B5F842BD5D99C18BF
9637B1AB186D814E3DD858507B68A127CBB230C055867C8047C8CDA468D2910F
2DA27128A9F1422900880DCD0CBC96A89C19811204F7AB8D3D585BE3FCBA89F8
F31D1417A69D15E20BDE6D478989FAD982FADEFD56C948BF65B6AF676C830CD8
AA3638224737AEAEEFE9239F6FFD51A675783F09A19EC360350BE7BCD855F488
9ABBCCFA8360502234C208871104F03616C2AD984C8D98DF7279A53E3B13724D
0B4E03A2B82CED5C9DB7FFD1B56F24D078745B5E1A335D60A083294DB24CAAAD
A4D96867FFE7CF729677802341E00211AA07CB2D2B705EE2637D89D2BDAE12A9
12171FFC355965BDD45A6D7854B54D737C6DF3962B95B4B4D186076AB0A6B273
ADBFA7CB2C670B71BDEDA9725503C98440DE5E44CB77F8765090E7AAE59D8021
306860DE172F913FFC5C91A4FCB9BCD2AD486957A4EB6ECE8C5B4270F6A9C900
EB10377462B01F2452CDF2CD3FF25A8634D0B9F4544287039E26671852632CAB
1F578ECC6D4B03D1A7F23812F1D65D56DC1C512A23036E171E30EB2F32A0F421
F3AEFCF83F599CEB641548209C3F021857F89239940E562697D2D6A1E2E752FB
936DB90E2514985922BF5C7BF37D8B83ADDB08C0253E2F8B884A0769EC45FE8D
28590266CC641CC84C262B56A310A4368B3B6347E865635D12C72B9C61CFE774
96A555AD5AAD308CD97CA63ACF564797F850EF6DA9ABC92C2CC6DAC817EEAFC6
E54D3A47EA4515043C418049903E3F36885AD45509FC3E6856408CA16AD3B419
4DCB51B7B18762EFE6A4271F2B6B4130E3E7E7FE9B2134E3EFCDBD9B7AD0797D
1C23EE03062009AEF3A9915064E7EE6935B27778B36D8E4B420102166269AB6A
4CC7B226BB34CDAEF7E741785098AFDF331B6F27C60AD6CEBF349112D99018C9
2CB5D36C2AC208970FA6BFA065033DE81E82F1D6FF615AD5DB02E437063B5006
3F6703DC62618131D4F8D3A3B878FD789A90517DBC4E8B26AAA496D3CF024E0F
3AF41B4F66FB99632270738A855FD03E250EAE085CDFBA0CBE7087E7976CF9F2
758AC01C1C98B56824656E6BAB79428A2F2461962C15D4A148CE4E2B76E83104
F4BBDBCE713D5BBC589D0245D994C854FED715E9BF747F7C74602C2C37C9881C
BC986541A190B709C9C52280E6B1A5E2B1A7D6173E97F518A1334DBCC6D541B6
79F20F073C1E1AC0B4CA651BE8D67702F5D568D3A18E99D9A1C6699AEC7858E4
E3296F3CD37D4FA3444D994649C023B60E5899FE119A161757E0897191175D69
849E9A398B9D4D831DD9E50B3B76A4E3783BC400877559655F235BD056D0ABA3
15EA207D85667825E5DDCBCE0E191A7607BE4648844C99130FA462E978EF1895
EDC4B79EA6F9721D4BB059E6D1F946A8D7B67621A90A478ED052DDF6025324B8
18204ADDB3967A7580AED8771C6EE2F76972ACF7A798D8CB77D5E2231591FA92
F9C2189254186EF35D59BB9749B13797FEC28280406EE67D495FC8B320C7AA4A
441D0407AC2A0DD8A81D671D4C8681A546C84C7FAE7BF19B537D58E8BDB214D6
91A349DBE7D46757E245A9345C105ECA327C02D54061E6748577D4CE57E0F82D
A37E9CE833DBD61E6FAE0BC99A4DD54A91599BDD46153916EE182541E164314A
D82B36F64F6BD09BD3BC62ABE56006C945FD8F9FB2F95BBE52CD3A4EC342533B
0C05CE02C2A1ECF1E769950BA812DB7CAC9A5B6A9DE6829BFEA5DF01D3B35B36
E8A5AAA2CEDFA0BD41F34BAEA4D87FC5875FCA202BD3C9840E08AACCB93FE1BD
1C0ADD4A1694517F78471A03080804B26D06B51FDFD86A224E4BC7F13C2374D3
031F41A0204F28E22A607D461239233BB15E4BD3F31FC63F51CA71E624E78506
BC4E33B387EAB2FC77D39362BF4040D483CE441DEA9F9C67AEE34B27CD0233E6
2D381D981A61DF789B6DE26237341703F19E5B87FCE43A53D3FF056B2815AEF3
FF77045B8FCF2917E860A5399E2AB8705C835C93BE5FA7CB5C316641561094B7
D2DB2C726BE0FBB33DEBE710223A126AD84F84BBCF93A4D8B6F41340EB97BAA2
AA226F6A599053813981F6CFD7980DF59B56CBDC235633FB7A7109020784972C
1DDB1D2DDF4A54244D0B32FA23DF64D113CCB97938F3E012AFCDD11087D3B1E2
3347A7F2D78950A8F977B456FD59B74C19F6098ABC58E54C053678D7BD5BB0DD
525668A2A524C6D1C18710EFF7829039B5673F1930BEF34159AA59554EE7176F
67E1FCF4213C3338C8AC0F6462576B203097F95D4114BC4165C819CB7D202DA4
F6CB8BE1CC015C99B9D730BE164E8F9DE61A795822A1B3947C8C99DCC370A77E
C7F017A00786AD4B929E3D292F3046370A56F5B8237D96BEB29DF87B26D09878
B02FA53E25BAB980294A9DFF4B82AB6AEB3CC964770171C19CBB5A0B73EFBD94
21178EC8DD9E0CDBA29711B4B01BF4BA107B225A3D5A633470DB3E358660AB2F
D686C8A0DBD6AFA1C36BB5B84898C5BF9CF18E1C30C0DF9B1BE9C5F8BEC226C7
CC5BDEDB11940EC90A4C8E821923D0AB54200A68082FF56FBA802E941AEE6DAA
904261764F2AB2B5D16896F8E199A9F9E8B58E61DC6DB3FD911491706A7B8B13
8F1F254A77EA74C2EBDEE404D9AEE57290E488FA42FF4D4E528B177D74F25639
726EF9867E3CFF30C9D22261A8656B335B9D6907B3F913AA974D6CA8398418F7
64AACA06ABA07EB27853C769A0767BA190538C20710597DC74FA67EB1BE2FA72
669F6E612133A50EDA8B1B6752830458E1B9DC28EDD3BA30018F46460E400E7F
38B995AF7C532F4C20BB08490E8968CD81DF9265541BBA8A523276044FF1DA4E
FC72AC6FBABDBA9EBDF4DEBA252DF473724D981E8611540F47D73B72EEC9C1B3
8F420978B9A0689101E98FD9DAEA9DDD1A039820196C16595542D82CD222CB61
233DA10163AC442A4D1F2D3E3CAA9DF3B58AC330DEC2B7EA311F0823614699F3
C3CF03B55BA3FB4881AD7D1AFD5EBE593D8B911C380E8ECD7979DCA68AAA5C9D
E6B779178033009BB28DFD34EDE9FD481427B6BE903F3E659C6F2D468AD37D84
4B8A607A996AD99460BD02D2C10309652E949BFA3F7099B7ABCB06D1466BDF90
1BFEAF3C04B974638FBAEA86BB4CE4B59F9895ECDA43AD5AECB5E1A837A3ACFB
BA73172220E6F8E29BD50D0443EA1AB3E596E20AD35A39299D8817FDD3AE194D
20963F9543C1FC3D32353CD7684A1C30073E20E048782F415DA1006D4F42F94A
02F0823CA5968AE062DE94B35FF45CD8CA02AE363A07E06DB9C0A4D534E391EA
173B346DDE794F3D6FB9CC5D17CBF0E1965C8B25E073DF981F84D007EED74A49
CB0704134085CD6A12A0DC6877DAF837D23E29C86644CCCBF630B15B36115FBF
DE3D652242997713211561E2A5EF24057DAAC289567D801CFC8D703B121BE600
092E8C6BFA1776FCF12B68B8C91CDCAEDD7955AD63A6A47411A152B0376696BD
ED2A21DE04FEBD2D390FE6D9DC9BCB0E77BD653BF6BD2CDECD136E16134CE26A
4AC6C288C657A9019B335D308E2117D1BCC384ADA369A21282B9A7A19D66F475
E4030FAF968D9A4D7E09E493D087DFEBDFA782D335D71D568870CDB50779B581
6B7E2183178219B5701D131950DBC505A89059A3E69465E58CF73BCE3B23074B
3D3BE38D9FB47A85C47E8D8989F1EB54005C62FD4928E560F529B5A0222C7087
6765E8D4445637ABE6403B77ED3AFB5F2BF0AA18CA337D53E0142A514FECF2FC
72D04C3937646121321AB3C75F93CD8D9565B555F7724D05BDE276AE086CBDFB
C9B183BFFE3238AE826BF3BA2CC4E8FD765953FBAAF7D8B8741F629BE1329D07
D2DA1242B119824B45CBF65FC80408DC41E427AE8EDBD26399B0CC31B593087E
D5FDE15CA698BADC30A87F2AF3BA6B4F4F1665E50B535D74D8DD7A0975DBC27C
1B9FE1BA2988B8F78BE0920FB3CA43A50A9C4759E5C8E1CD90BB4A47D656F5F3
3B05953187136D42BDE644AE07E34BC77B952A60CFB469D236C37BBD245ADF82
8B56BAEEFC0E0DB0CCBAAC72E5937241C4221AFE04852B9606E8E074B6742A18
47C136340CD545E1E60376F60BD85C374F605A05FC7CBFB86718C5FCFEEE1DBB
60E01D4CDDFC2E9BE4709956583F3B9EEF0E7F1FA6F234C5C1E6AB854152E675
C1476AD160D15FFB09B21CFFC872CA0212753643FACFE8DF1F7B0A69C52A8AE6
C6850B71E88A2B049A7DF39912C7815443AF776B8D06259F68B9877CA7D618C9
740E9201850ECF710E29409BCC90E1B54328E6A0C723154715788EF4B6F6C298
A1E4D21FDF8F62B467C4997EC131EC941973E1FE5770ADECFE05C4FB0862A406
960705C7B40E40D4C0196027C17B8EE71D654F0E33C5E5A8054F566438795D65
3EC04001FE646E370390407746B9D96C5F69FA82D22266532F87CC8DBEF7EEBD
525766EC69F347797DF580DA0E0A4F13FBF20B25DFF7861ACD24ACEB6BC06355
4059E8F56AF93A249D45A24617FA66E1795115AEA57B785862408C117DCC0D93
D513EABBCBC7D1E201BCCD97279EE9A30291B4599FB13C4F58DE199400DB4E7D
4AB056669452D995D8DD5BFBE2DB208282ADF04ED5C2264211DAD907074BE3AB
545014305652E8D7EC353E7D815B69D0C5D60B1A78A763258F44CD9D5F5127D9
9FA2132E6C41628AC3150F93D087D80BC5CAC5D0D9E1615B122882B996EEB149
46BD124EE5DCEACF04C66234623409DBC3224E61D53BC4EFCB0E3A2945DA0A20
D840B1BFDD84B0553C350D1CCABC97F3829D487C47D57BF2E9F91E726CCBB0E6
4C7650DF6FD7F3A7C156E1A8E6A0BF1DB857B9CE5969F6562D71015E354C656D
92ADEBF2EF616A7668197F8653C6160A59047780E9E8E15960C7DB7F167D0F07
F6D865E57E50E2C8AAA24295DD3E2C212A9301408F24B5184B263499CAD47A90
7242C9E3586A2D495BD3450BEA26FDC4C2A8D8231330D0EA06BFDB6852A8096D
358CF699160E8A89158D6A6BAB32BEC59D2D3BC178EE591E6E63DA820D474939
6C27ED4A669A01AF1D76C299A0C5DB197099B9D9143132252B28E6687E9236D7
D1148AC9EA99C31E55EF5123584D5A3508FE86CC6FD9A1DBD506BA09F80DFA38
AE1A5A09EC405C9B9770ABF579FC911318FA273A02C5DFAF14A6E9660AA8253D
564A36E96020B3B10AEC09B7B7D697A6CC355BE29D6BD5706D9F0A69A38EBEB8
8A9459F59BD20669FCDE45812CED19CFAC29A42DB79411CF355A9EF3F028A0BA
FF629CFE81D098B81F708BFD8F085EFAA28460323E61C34723FC8529F41DBAA0
DBD813BEBF3CF60F4757F6503E5FC28B8115CAE03B56AE4C8E2478A28257BE44
61BF0D5737FEF579DD917B8937666D1659DDE8EE66FC30D70E339334EAF80833
6F85BBD83005D8EBA6244D7FB96F3E09EB15624684211524AA306A89B60E01C8
D8AA2B2A13F17B8EB838C38C275D92B2E24B4FC8353951C0A335B53F68A8F828
6A901F83221A48FDAF5135B233283FECCCA13A43A6EC347A5A5F332849ECE66F
8102383F02F7401C3481B529E3E5D26AB393CA44B3B19D36FF290BC07C1972CB
D7E1E1AD21C50E736BB7657CF2A0A2988636417C2CE47E768132457FCFB864CB
3552D94FAD94BBE92AE2E0C097E50CB005403CF8BC12AB8BFEBD029DCECF8611
B5345753C41FC93D708FAD2852ECE54269499DC09852701D6E31106BC67B7793
E963616492AFE2C5CA0CCD70767C558E633BBD60B0A8C79CC2FC68AF583ECCBE
6FE0329A031820D4D1DA9D11F02FC1A6025EF3679FD580042BED8BA1274DAB70
CE4427DDA56DBC60C16FEA1B45291E9C53DE5F957B2F2CD39BF76BCED9E3A31F
DE14C73C3EB6B59DD72EBD81EB4A59449E26A694691CD1E265DB2F524FB75899
A55035804CA8B27B2C8A14B0A60EF17F9C22A65DBAB37CED6589D29BAE331A1A
1F99548994A164A7B5A0BA8951EBABBB53F690DAA1B791838D3B6119A17E5C4D
E509FC88219A86B9C7A1A26FB4FF7A64448D805C332D517A54A4C9B4AB45F562
0ECF53AB69C273C741DF1E2FB583C03396920009853401CD8A6300AEC4711CD9
3F8C60FADCCABE57C9BDC8A604E7DCCFDF9DD7073DCD5A95145EE5681648C6F6
7749EDA767303B91946D7BA452AE332C3C9E69D1B3A6E4971E0A22A0FA9505D9
A09C8FD62172610A719CD4E8F54346CB7232023DFC1D7D4C4FAF55E151C39FEF
8B47E0019EAF6CD448C2A52B31C0E509B1B6FB351C385081A9E7C31C7D4BF955
92C3247B8CDF4B9912E3272DE21A6D58C4D4647681274939FA67BA898711ACC1
764D35102099A7F913FE3D9BC71C9BBC517B39CF7FA99FC611547012CFF4ABA7
0FA59A053951889681A769B7E14BB1F3FB8DEDA1B0CF44AD98512108230C10A2
4E0B4D6E72A628BA786BAAFD26C0AE0BAE6BFC5DEAA3E36BB29F2982C71BD7D7
9C3BF1BB30FEA9BFED3E1145BF1027C06AB405E68746B94535F38840BEC013B7
83E6A8779E526DAC09DF616FA010BE479E3A16F913B6BAFAA31FC3613D0573D8
14DBE8F29968CDFDA762A8A88C2E79E7791B226A7AF5CC9B9D0B17C5A20F5D81
7AFCF5D469423B4A314AC2D2DFAC896E2B0FE4E7F1CB1A3569F3F2D23805CB96
20828ECA70E00B476C763AFBE39861599B796390922B7BD16AB9E1B59954F703
8E68BE5B0A63D485FCC987A766693E040605B1FBB9F2241472A5FBB073A99A60
A181673C77357195FE3CE8074676004C2C2D3E3F4BA1AE847322CFB176500BB6
4CE212737384C937FAAF93681506E1DD79F0D640D02777E68D3C050C453484A0
28C5FE35252C2AA117641E79352FFB42D41ACA28B0E3E2BF2F355BA02F0C2DD3
8C831B7D949EA17235FC26296B1F39B41B5C06032255BE8D6280E789E78C6C02
3FAD6E3ED5D14B42D4E107CBEB4E31CB8BABCDAF868B8B4E778A72A55EF1310C
B38FD6661D1D24E9287C8DD1DF00A668A898A51ABE88FE984062435DBD727243
B536901953F00F1D61F2714EE758D280887C288C9A74932CC45D1943332548C4
CC77E7C69E5E5F0F0A9A760C2500E5BCFDBCA449E7FAEB271DFB5FB2895E44DD
B70DF68A5D715FAA8F8B17C4482CAEC3992BEEF1999CEBE73D4934F65C216EB6
C3A6207CF39EA825E6DD128DDC91703D3A1C188354695617AF56DDA1FBC56DBE
817B0053FD9BDD64FB6D29C60B8CBD4F294253CB78FFAD6ED43A301DCA8A4FDF
F9A4FFACB66E2961600A1E2259051E0322DC96B2305515414121476B31B5FD24
665D521712EAF4A5B9209FF30AFB26566F0783FC9B822D193EDAAD1272C699F5
A95634DF05136CA17FB3FA0969F072068B6B7E1AC355CC347BD65122FE341276
BD59A17235FED8AF02E72051E946E0FA73157A7D2B0FFDEFD8C4A1BDED47288E
AC8F6969FA3A7C5537D23558DBEA210651C805DB136CED26650B0789A9BC6073
0C964AFE657C9C5EBDDD9E23685E5A42BD5F4DB66F402460CB24A4AA646F68A7
A83E1088D2A9C9C23B3ACCC616D87F2F09C1D23496F791A86583F7662A7B7B0A
BA31519A5BC17AC88E45CF328D1E8D67636E4668E9AFEF8D73C065E184B2295D
4890AFF284201EEC36C9087E34BBFB659CFC7DB0F6ECA33AE0E5255F812465F3
75227A481C238A0F03D52F2C461470F226C611A6794A0B259C8B8350B9A35A35
92129561E7D04E57CE355BBA9EC53ABECE28CC138CB1029098098748533B7790
43D6DDBCE844447AFA4C746DBA03B23D85CC8B1B663DD48C7110EFB3C2850AAF
5DEBA017C3D63574291D9E1A6E7DE909D61EAE1EE8D5955853259971092397C2
6165198FC68FE96C9DEE4AD0E5242A7732A5C11B956266AFE2DD87214C999E53
C1C65E1A865EB34B053B80D00A2049924999E3D19E816587D025EA6DC0530112
12523A5C86E50974FFB1AC6856294C4ADFC4F456CBC544602F046F62B30E30F2
E76DCB772168CBD792AC78F5CED09CF717D58EAF5124ED6B058CC2FBC944EC1A
38AB702F0743919764DB523056ABBE4406D32AED65E634A638EC7A492DF12329
61B648C869BC8BC01015D9DCB816E1EBCCCB2E090F1B8E8B630066BAA1ACCC81
B4330396929CEB0323ACAA4496B5D367121A59C537A9CAECE14242D824986800
CFC552CA5A520AE8CB9DFD418854EA7AF84AAF69B93E04777E1E7DB9D79E6627
C7DED6BB6FD2BF1952AEEEAB9A58B593BABD9C7B703BD099718C39EFF7EBBED6
B1E29CD877D6B4C238FE91CF21BF71A9FFA43DC0FF80B4A6F5918C0F25299DA1
3DFE68404AADAF53A29E8EDBF84BC2F29B7E454DD57E4502DDF0FCA44BB6C031
C82053E99307015838D27C570948EE001D6A439BCB4BB08804AD2D38A2313040
0198C46463DA19BD085D4658F04D280A06E7682033B437659FDA91CDCB96DED1
EECE3003DB800463BED7E61EF716716BC863EEB29649EF57756FF62AC35618D1
EB0BC4C9D75CC34EB3E574322BB1425685ADF0434DA056AD29F04F9D297BE485
2FF73EA2E5707009A5D9CC801E77392DC78B606407FA073B9DC2B57AB2661618
F2DBADA4DC7FB3450A9EDDD429D74C00FC6044F346E8A62878BBDBC29174F076
C1FAAC875D4B0B8B32A847F37E0C428D6BBE99009C867274C0BF359F4827067C
0C258D32F3A703938403C802212FA6D93033AAD7057C0CFFA16ED65B8A6C330D
F8E47E6B7A3E03F8FD934705542C841542E40AA0CCE2719E0264563DCE66F8B0
9772284803D2B9E664916A709CA7CE07FF1067E3245DC6EADF8201C1C08E2914
F8460BB105D3090E1A4BAF80CE618B24F79B1A9B5D66D149E429F2D6A9F69C65
A4167FCAE244E642F36B7C11CA63546F1CEABEA77B3CB398A3ADA584CDB936C2
CCD40CF07EA3AA4D1FC50F0C6847370B5BC9EA4E2EB3DCF1C5193C8D7C765CA9
88D678E5213C5D2B98068476B55C1042E76DB2524C8F3B8D3031204BC2B86FBB
F3E4604C9580910F6742235EABB8C4486481AD86C0BA09ABC1007A0101A32409
B9EEC4F2B1246C1736D6FCF492BDDDBDEF319E01781E8147B967115CC4F0DCAB
833E16AEC762FF5FB2D95A6D06D0131501010199FD7307D6E22520599B2083B1
4DA7AE4DB01DA06F1F85844E6B1813F9F850C366469FC555695ECEFF2CA58377
73A0AC0E10F53B73BB8C73E2B8C8A30EB5C2B81935587176BFD65DDD92DC6BD2
1C5F191D7F9243AB4F46CBC3FA074E508DB9D125BB2DD110745CA537EA2158BC
53D145E742BD9CCCE7589FC8E610006C5A8AAE73CBFCBD9583BBEFC2E7718186
1FF274A07904877A487B252B5C8AF42334F7397E63B5017C7EBB3D29A3A329CE
1F3DB877071CF2AA5FD14FC18B7CB675BF70AD557AAC8F77F80BF6B024FFC558
66A8979072FED0FA96559CBFF1392B02F8792AAB299D39FA9291E79D5E6B6160
EF8E2579DD03EDE2369026518470BD316D89B6B6643B1F2C7A502C1AA3EDC516
224D3BD43F9833F2971F35BCDAFABEB2D75BF6F9A990170E012D1E144BAD3360
3D6CDF16470B66977A501610A110B39A36565CE6E806E078B4558C7C94F6F95B
4E81B0D0F5DA92FDADFD2B6DAD7FB78C8D4AA1FBAF363B89163850C2E8B3F03C
4DEC1471C1F34A531CFAEFCF250DF79F6B1AC8C94545D0E64C1EF9860D5DA595
C9DE4489C37B2EB8EEF2A8BF1DD136DE26E4A851787CE8FF4D8FA125C02DF695
BA21A165B330AE932A4D7C424AD1E1EF11C0ED95E7DBBBE1139998C77A8FE1E9
639F7377B6F03B4E9A635FCF08D8A441CDF9C9A42C3E1412DC52F37DA953DD1D
C07C6FB5D9A1FE8FD58ED501B1E49807D439E8C5D0FAA7CE013B3968DBEDD618
8B66D1E68D11AA5D47CFB605792F70A199F432C0EC40E749214467AECBD33D4D
56A9EF719DDB0F0C7A767775B9FD20F8EF5EF0FED2A46E12918275E17D900F64
EAB72407B03DB1D677859BE22829180DC4FEE2F64DD9E45BBB76C8EC67F71328
85ED7689F4D0D4F5A7B2EBD3F8FB6205E89A7B698F0252122B33F45E02D31002
972E7895D8AAE708196E122DAA1E98C127199A84F061C2C15BB71CE21A3E9C1D
1AB20BD6C6CAA328BF57F4FE7C60BE8AD8FD28A9EF8EEB25F6A230DC6AB0708E
A9022123F9A99CC73A8823086354F120209525EE410DD0FCFA1ED9AD0AB05C57
6853FED0FD74C459D1F1662445F32FF05EF4832B592CBC9809C6CFD90AFB12DB
06411FBB46BF9A31FC8DA5F4A317E7644446B44BB8012BCCAF8BADC49EA13FB3
DF353F11454B8BC68B6F3A4C92A899FE58B30FAA752F7B3EC507CBDAE7411EF3
61DCC9970506D4A7F6C10C5FB8192BE310ED520FB8164B93E2EB1C89A9D69EA1
C1795A084EB7CEB7B4EBCA6ADE84981AFF09A3C70BD9606E82C0A1D1E80A91B1
95B017A5E76896B530E0992F3E9116A6077D3D6E19A68DC472C3290B25AB6C9F
C2442640DD925123D2D1E8ED86030B6F8C8EF553BDDB66D638A30051FE14DE4D
07BC37B7CEBDEEF87161DE49EBD68C5CB84380ACDDA68AD1C3C6987E869DE8E8
AD38D9632CEC1FD75866E927108D9BECBCC9EB81ED924C017EA0EB1FBE7B70C8
CE8A54FC7792485170342BF3F3D2D2C843185A74905ABE953028BDD204728912
064CF788648D74B078ED080C5872EBA28F6D60ADD0E044474E9A3DBE0891D0F7
9B13B0924E5B6004643B80ABAE1CB6253485603D19A111B693081F4D020FC6E8
6772519638459E213B2A8644DAD971DAF5F6CEC3103B3D14CA282CC0429BFDF5
9A79448D44E92ED9D0CC06061595FB27C9B1715189DD1363603E1FB4CEE4EB22
6DBABD89269EDD6833F4E484C913AF181F1D6DE4E183639460A86A2640628BA4
D6D64177C4FC0E9EA9BA857C26578C0D70D0BC5CE53C15A9024373B3757A0DEA
98CAFC7491019DD405788B91FAD6A3E7B3FE9BB7122969EF56CD9365B3ED23E5
0AA7620330A9F66E9E9FF5470C355ED96F85478BADAD9ED58120D77BC111CE37
64E01314C73D3E4E229B056BDDFB3540448715CC39DABBEC444D8650AD20A77A
B23C0D4BB88BABFDB74F13455EA929FB520738C5B7A9E30E919141CF37FA0EA8
81B42CA3AFCA0088BB227E90541B15DDDFDE6BDF6F25481C94C0C917B4A6292B
96971E35DE1AEB68C0F67032DE090F1E6616D745533001D111C9BB82E2DEF2F1
6D6564726A74CAF08086D05B4D5C88D80B3ACC388D7092AE491244611E569185
8EB2B5E2F8CD8F2137DA04DC828D95E5192EF5C998BF6D37DE09B98DF4129F9E
0B78A3B95F4BC521D089BFAD45EFBF339018ABFE4B14AE88CF0CD0246E250D29
1ADFCF48393E530139BE17DB6A1EDE43613759B68D15964604091A0C1E303470
EE1E8AAD274E14259A48571E255FE95A37D9CEF904EDEC7EBFB0E60995CF6457
CF0B175820BBA48F652EF1C3AFCB19D0A0AA9B58CE598FFB903CEA52BFB61600
DB1851162D33A19AD5F25941F72A96FD5787758D1EC8FEA77EA7A810F4851008
FE54E68296CC52D88DDBF9A752EA88550C3B52F81E88195D8375532486EA3FD2
E3D8B66473C74888BB0C5CE966D6420792F17087834CB6BA824EAFF494AB7820
675260841609CA45D02B4D2B19D6477314944427FC7FC91F7BCA6279CD1734E6
FF73120542EA25681E01597C9A8068828C2FC0F7052ADB2122FB8822F3A8CF41
0007FE6521EFADF8B93F12E38D2D9487818C3A71F3F0142C0D2BA97AAB27F2B5
26EC55D57B5DC09C95C9AE4B4EF735A5414D985B12C542785FE3A19CBF0E048F
FD58759987EDFF2D5190D04F66A9AA7EED0A2C9DC58C0E1C62AF2EFAB5813E8C
5E61AAF61833401353462890AF71B05B84B2E8A8A3BF79D0239E8ED5BAFCF31C
113777EA71DA655F2B2974627C6E27734E24F711FF571E7540CD063210603144
F628F07D4E42EA9B1BDB0C39392E35E65BFA8DE43A964D2311F07753D0CE4ED2
AD6198A473F1FA99323CD68D78DB2A5DFBF469C3D02FFFD3B21DFE7CBA8E1CC2
DA14BF26D15411CD48CCE77D49FFBC068B5210A190D5C8944DC294778FE68559
C980D9BB7DCE03FB8CB1FA26716487991780B031D302451891F8B4294E3DCE91
6DF54D460DE3D2E176B50DB98341C85F3CE1F327A3AC0CBCCF176052EE72A295
9B8C1EF0F36E918D98CE4236B556A5BE7B50430E380091712848DA089E41423A
D8978EB07666B2E68E5977EB3D88103E5A4076F5EE39EDB8512BDE50592DBC60
2AB70B3110098C395570670CC4BB724E562CE367D96B03C0B14F5DFD867ECDCE
A773960F3FC4681906BD573C7A473787910AC263CAC0EAC1CDA748F82B9B5DAB
6124517827491FBBF0363061CA392ABB9E46ED8A27ED6D85F54C29D524819DF6
BCF9D325EF3900857A57EFDD6BABBB2B153976A11DDD81276D70FA12C50AA3FE
CF8A05B094AF75E2869314AA2F33B099180D8189D388506DC7D27EEBDB3572D9
A8269430E407F18E0E322F11492FE2D4693CDDA5926F4D6643907C7C65F72FEF
089A4789357324B3FD9B04D3B5FAD58C121EF9BA4E8199ACE69C5425B0C3490B
489EAE7998EAB74E1FC68F5F346F282DCEB0D5BFA1412852D758C423D376E2C1
61735DF5D85907DFF2849E4CBF9DAFAA31A3BDBCDE97C5E3F5378B6A5D96106B
05FD060206EF36C059A5D950FDC9ABD6241D2D9C1AA703D6C4553F07BEF10B0B
B14CCD5E6DA8F24F1A4ED3030B8255F7C59CBD69BBFDBAAA73D546898122794A
76DFFFABDA1B4BC0BA47B411DF2A9A08C145AF803523346BD5A991D08B3FA649
52C51E0BCBDFA53DFCE348FD9D30DE3914251F0D8BD58651E98A437E0B3C594E
C46CCE75272835BB5823AF9AB4BB367E9753676D74B47C7BED0D9F20225CB708
165656ADAF704725D285503605C0528C92C8225AD84C7E6B46ED465309FBCD5D
50D1585C981C7430956CB430F2E43A9FA6483A5FD23A4327D12507EAC72A7668
ADC4D75AB8ED57EC0874E26BA43EEE451D698BDF3DE1588DCAFF5BF8444CC1E1
EF1C16C9D6C649D00B22385B47D18AF6E9A1CAB183E05EF9F3644BF2530CB119
078ABB9BBEC56F3D1EEFE8ABB3D2BCA2CD5BA3CD63BF413466BFB831C20DA6CC
8D6FE62BE6F81EBF45FDD41114B05B4369FE6EECFC2FD37984B6B44AD59BE051
C0B91D4BB0CF1FC555A19AD469B396D9EC72DE998BD4B0E3F811CA24F7F2A05E
F3D9B62E1603C7E52245AA32855BFAF834395B17DF6719B5D691E2942607C963
8BB2ED72C9A4675027F8F6B730EFCEA25877F79638650253A72E63479DBF6BBD
1B61E20466C14E115BCD846B755A73837FA992DCD19704D5DD18D0F7F0B8EBF1
DA542840854C61388AC8F5A876CF82C186DC12064EAD33EE231D277FD05EAEE8
3D45EA12CB28BC1982D96D2566CD6216D5F74170300F987BB1C96AF16F458083
B6084031B61B1642A6C9B7FD5592725CC26402EF72D58BED8938D5138A83A513
CFD71B4087D8D531BE55381141E576F3A8C8D517A4558729E99C5D9590F58684
F6A7638F44F9362FAA5368EAC516533B1E8311FAC503A05CEB13DD04E5EF0942
0A7FDD326ADAA248FA79EF12ED979A5FD4D3F3AA6AA56B79A8E7EE78A800C766
0FA1B8D6E8F7E42337275CF3C9FF19FC036AEEEEE976AFC6DB9007021CCE33E7
5B7D6553672578FBEE9A10DB3BA9ECBD415AB0793C4A3468B8C443CD3EBC9B69
35B2E7B3842C130EA0C287CA5B674682CE452C2283616D1853B7BA3F3C6B9F33
0322B0607BA58C0C4F28D740EA22E0D1C856FFFA8326E605A0D56CA9AAEAB86E
60AFD2E3975F132FFBF91D99B8BE9BD10E130E859C4FC4CA03DEDA9E3D758923
51F068BE923B07B991B03FC78340D96D96E6DAD0476AD2C8787148FCC9447BD9
9A49C1033BF3AF5145F9C9281B943C9CA6C159D5107967CB8D4DA8A2FBF2ECEF
4429EA78920D6284DDA00B321D4F457E322284380A8C71DF3A98D06956A6D973
BDC2C29E81EB030C6F8E2EE44C5670260ECA29B78712CAD131C30EA8941D1AC1
3A3B31A1E980F2EEF8742AD0AC6BC1D9CB71404FA46BFFD1DA6C292782DA8FCD
3B49FA5276B952DF7BA62CC6B297A616A88B40BAE53A4E67B9B1B6CE2B1FF4F6
C91A6403C3237FC4CDBB045E2743FD952B0D59AC8F2FD87719FED55AE91CAE9E
DD28DA8173F96F68F38934E0A7E3D9D1E0D87E1024C2501E03B3A3A181592DE6
8E603F8A8B1742DEF12D94EB16EF07F371FB7BD70BE6C3E5F97351B8DED3C6B2
AC6D10354BDAECB0ADC76A9863948C23E3718E31C99FD8332114720F9B85666F
A1791DC55E45724A09C01AC717D686C29DA54FE37436BDD070C07F985073F54B
12A448A9D521A1F7083F0714BA73E52B067D28589A4675F7642583488AA25ECB
BD826A2E5A793D770331FBAEDEF46CD8D3B7E53BE5FC403769F39FE4B9073DC8
060D25EDECB08ABAD13CCA299F8BFD1FB85A4029F11785B67805B4BFDEE2E331
0EBFCE9432C97DD0293BD3D4C2A0F677B7E172CE96C5032B4BA33D4AC6FA5C94
3A54EFDFC37E723C84BD9018F7EE09C048D85D63FFE2540F9A34A3F143E06637
900FC499CB922D8A5312F5EB0BFB0394A074B65507EB297395BB96F5F1ED95B3
AA05497689F5FABB9B424501678CDA7F44A4D28F564EC0001C700CA258D4EDA4
A6B4BFE3218CDAC44594CCDDE56AB03B35C60A1941869B65B1597BE4381E54B7
862B37BACE413C0079B6979DBE7B48C75DBE85A899D238EF5760D37B8C7ACF46
DCBEE7F0FB33F4C1AB8EDAEB7C03CD8509D6452C5F38D2B5814FA2618BF1CFBD
7317AC222D65C592BD276509154546ED66E66C4F0C9CF27FA19F0F17B29BFDC6
C0A17245FA87017CCED00861E0C5E523B6EDAFA2B41083A3A21E480CA983B48E
16BA0A8BAE7CB21A0BF3768CE5DFE5FC2485B4094E293A0FAED398FFB2646747
15AB2AC6E920CF7C0DA8A6EDA01C55B4241254861C0D5C8DC03213B45C864055
13A645769B4864C77AD6FE607D9D0DCD072B20716A05DA7230AC9FD29A99035B
FF29D6477B5F220E549DC820593632404829DB723824955ED185A939E7DF46E0
D2BEE366DB90C285EE734B7E1A183B6BE0D302F84F579F9AC20AAD445575D01B
8B33E104BDD6493C0DA5D60149D19B145E84AC15E90D52B3F3F094AC2B6219F4
803C9402A6560EDB1CBAC435DCBB1FCDB48C25163DCCCDB193E6525B4572B16E
B8B5FDB2C9405220646E7E089FBCC49DF66A50F3C62B9E07D5E77AFB9997210B
921AEFD108925DE337E3CB151849742C46D2A6CDCEC1A92C61D7E8CD0C7F470A
72CB4EC05F85ADD32E2D91DD41FC2E70E2F9C861E52872489D0ADC6AFEB31AD1
2AEEDE2190420DF91F64916FF1ABFE2D33945EC77A9B8196DF8337110BBE9F95
79F173C8A3C1EF041939AD212CC9578638505EF1DDCD3EF2555CB6A06C57F186
671280EE70A96CD00E07C4B5C3C92B9C9E487A7D1F28CE391B492AD982A49409
EB2D41EE2ACDC0A0E54F0A02BD9750BB27457FB4CAE1615C8811BE0EA5A89CF4
069CFEDD32C1968CA80152519DDC075B1CE78189E52F6847A64E1F6365CFF384
4FF79F843FE7F900A48CDC2E847A43925A7CCA3F2044FF3715098B1F8C9FCBA3
7F3D5D96EC628AE5A038DCE0E906AD95D70C6D1D4F6705BCCD523E75DBDF2BF3
773324D05D353EF7B423ADC52CEC0A2630A022A73C1BC31F62F2E0974A0CBDA2
4FC8616F479B206F515C79670B2F0F8EC12CA7E7F6BB5171B829F926BD707E66
A98A7F8E9222B8AC752E7479EA212E068527A16CC5C225BE3C2C2186B3DB29F6
653CA2109B41D33D222CA9CAB227D44C4ECA9C9159D49461ACA6D26A4996CC6D
EA0F7E3AF408FD354C39744EE8EE776E918D8B63E3AA9E3AD685A0E366BDA8C7
6851B031D605A58A55BC3E63F09B5BB4CB9C00E02A8A96D2F04E4CB224043E98
FA241C970DCC8F90B3763D6DEE0C02D78C12AF2C8C5D790F74AEE60E142E8257
BA8116AE21CD771E9A46D2F3F980D08B150299527042E72023734FDDD38B0C7E
2C10F2CBCEA1735D11FE0D081216D4F197D8573C6C040B590137CCD8952F02C0
C64AC34F4071241C72930E47D6CECD0E8FDFAB03B1B486733AF15FB0BD5F9150
0AD272AA27B5D56AF777EBD4730EE896E5E5754C266A71DFF6D7A0F69E4B0838
C7B58AF68CFECB96E4A3C56D4C2712CA7B6A04406747C662C2089EDB1596E1FE
B5082D1474B9DEA87A7BD57C2D4C28C28B29438202F95CE418CB14569978F12A
7A3462FAC771CF84A8859F647841C931017CDFFA7E5400ED0310B8A923BF37C6
37CD3329A70E2930392AE74B3B988D6D74B0750089AB154FFC39B550C5F5D8F4
2C3396623D2282F498806E23F8E1712412545C95EE9D699AD0FFCD25F9C4B326
6536930810B979E7B9910870C878660E86CC23776C38617620AA27584D624BE7
945F75C7985EDAB89CE4D39C5B8089E9753FEE37AE9D75A230CD02BE5AD81A15
761F503558607C298D22DC5C619999757E7D059B69293D6CF2BC84DBCBEE744E
1D6979DFABC5F913C6D7946A608EA2655E2EBE7E4DD4A7A8D135F826482BD6CB
F7F4D9CC593222E8BB4B10AD0B8E16D3EC2D86EEB27CE854AB7BEC910069B815
00C59FD2E9C8D018887F340778B59DB3E10AF4A1E219BC278D34D31610EB2791
0B8007F98DFA5691A9A44EC3E895CA3A97A475121D1FA95467B004B6AEFB405D
D089DA399FA1EB4D04C4B67A6CB2E639F9FE80AFFA0936F257AAB5F278982502
FC75CCEBDAB17A8C7C86DB0E50C2DDF8546B09018493624EA71EDF9A9313B63F
3F9EF4187CAC8E59DEFF79A97F215C950E6E96967FA4D99E53BC0FFE00EF34F6
2AC6F2471DE094942A9B370D71D98E1FC8CF631B55FDC4A84B9E04C3E6C4C750
96C1D667B52036F0031DB38A8DF89E9470C8F9E83EDE705132C43B2AE08813C5
F6EB1D08806A26409FDD3819C98C39E9969AE52E65C7E1AF4F396BD7F16B47C3
6A6C3E4F798CABEC88FE2276A03CAE0543053E996B33F119026F8D253412B3A8
8707D680DF8A78969FF3C03E2EB7F2BB6258019FF4987AAEC41A3A64EBED58D8
18F7D86A464C5EB0DFECFF77E8DF17702918BA6DA2EEB7A335F69CD08D77015D
7B1EB68E28244D708E349CB2C67BE2FF4E105A2823F6B6637C49DD5507C02772
A6776DC1EFE564BDB9CB5AB030ABD73EC45CEE45BAA3121D5D3271EE4C95683D
EA4B424FD454E142CDE747418F17AD449B5F8180D6798A2798DE7586D193F9B7
E99D153D31EA1B4D98D5171696B9A82129739D6EC9D065C88DBACB171FE9E144
60FC09804B0E0359168DE498711A983032905BE9ED8D0F033FB41F8BBC22BECC
6092EF292EAC6494D67E292D4986439131D31ACEF149B0A7B73FBF28AED858A5
B09E16AEA7DBDF338749CA14CCFEEE0833677CA6F9A2565C497B97CAF9E9536E
F4130B555709750BDF20CEC7910B601010D1EF38C84A18FA5D5E599CD97CF36E
D4975CB9D23FAAA26FE58CBBFCEF45B8DDB9A8D62EBAA5977507FE5668A86119
AC9DA2D53ADB835F0E4C776C372280D6D5E709BD6F04BABA12637AB2B88971D1
34299DBC4FD42EAABD1A42946206FD6D8456872E9F8C5B15078C58794656E349
390F1628A42E6C3CA82C47A7738471CCF4989697029A1F2A0EAD0345B3E1D4A6
B0C9C4DEC69662446A232DCC38106BC829E7FF1B3D8D65D43B930E62909CED0E
DC54595DE40158C00E28023091DE88A74705C3476651E8600A38B639750FF981
F557EFA203974EAAF443454D4046CB4FC5863EE19265D377467C44FABD2DE64F
8F6E0978A777653B2E06B3D2508379E1B7459EB63FAD59CBA83675D2188B2998
FAE75551D93E28B3A8F22E55C2014841A9D4F04B65D70298BDEC029D990034AD
50426CB43998683126F89F6CE35D9F3922C566DDF07E1B517465B1096C4FB919
75CD2B58865F77B5A7BCCF47E2B58A2FBC297E2BA7D38296BDE705015581BA07
708CA5809BFE02BE8B3108B33F1C5BD410C252E5FBE946E23778024A3CBA3B11
099AD57162A05F1EB48EED37933E7454CFE50C163DD608DDBE8FF1D7EB246571
C50C8576181ED27AE79695FD19B52C4022525157A7D744DB3815DFCCA249B125
E64B1AE8B6B7C1DD33496DFAE32F86B9EC60DC25C4000F5228AB6BB8D3488976
A17CE4CB21A90B3F00D2B9976D6ED3480324F998A474A74A40E24FE474DBB730
9C259934334976DDEB0BD51210491F5BA161BB11ACD5D2BB98B01165AF233661
573F3B656A7855CCB4C9814EFAEDBB293B5B90B9E3D06CDE91DCFC11A672D4CF
776A83FF281D1515477E6D6767BAC59080EFE8641A45EFC535462CE0A53A4F36
19F5A6C592B4DB11322083D2B1D6556FD5F14432B9E1E413E85935D30DF871FE
DE3B8CA0F8BECD5707B05461F08E5571C5DB5A9F3CB8CFE1D02A1DFED8C15D07
66E91F9D0A5D42C10ECC60ABC0A22B0E78DF4DB4D692899305F79BDA26FB8C77
2812D628ECE204774A9BC33B8DA107D9F6E82D873886CCE7C3AEF8BC009C4E7C
7C7BF15BDA0F4DF2E31EBF8D71172996CC2A9097328A833A5544AF282EEC0E7B
5091F4CCABEE774A244E93BB3A9CDB6398E29726FED9312B06640BF52A379088
D714C9E2F1570523B81A3282F36CE8673234F0BDCCCF375613D13262506B580F
491939BB052A6CF39E315C3DB5B4050107608E79AC18B52B224F97C4FE4B473B
1E446B248A6FE29A67DC637CCAFC7B19970C33EFE8108B75316B7A61137D4D4F
841A29560F713E39BC155567370D141AC263A53B3A1CD19CA88D00934967DE01
E5BE82AD8CA212D8150CDDC2D93BEECAF057227EA622227477787443C1086F49
7ECFB1CDB3C0C8D423A3FFA7D631109192ABE3009B814BDC70A21EA07D894B82
B3657FDE7058DD02EC73D097A8EF4A13ECB1BE2D9922A7862CAE469E95D60DB4
91F44A1285479E878FD4E4AEB53E0BD9775EA8AEA45A34CD3D141190604C3E1A
AD5AE4191A54021607324AFD503D5DD9BB4939EA943299C06D0F9B335094BFCC
A55C7F24B5E2519D1D4C631E8A2E391A8E87F2C6E50D2889A966B7EE902A61DA
9C54AC1C55B9BE022FFA3270BB2E6F5E1F4560A4C061423E3BF0D3D682E4F768
E24C11B34D82AE046B99ED33D2505B356951C13DA1B5E65BD02F2AE650522919
4B79CF9970F4990EB875D756B6AD13AB3CCFEC630987F17A3A6AE21E44752F44
F316872310B29833BCEFA376CFA038C3DB87BE39C26F52AE364B79C5D7DF1B84
B24D5297B53D0020B3DCED1F8E520B17DC278D903034122153F2B7E220A91C7D
E1837C638EDC479720B749B9EE52E9000717FCE8FA5721A6A1D1906BF2F03DAA
C7AA52F45D564CE6475777D62B784BE07182A3C9FCC90F0261D1502BD39DAD06
4B94367F74CF7B7BCA46CEFA289DA2612932967D1373D5075754CD0402FDE676
4876BC7F1CC6DAE25FC2E461187216D4EF615DC142B3E2ED0134BB720C6DEDD4
349AB40E8E5B25C7652CC694D30C074739D355CBAFF8D9F365361DD35374BDBC
04833FCCBEA869A5C6AF847079C5F479E02D071A52EE87A4BA627DAF54CBB752
A1283B0F06D8CB777D6BA53FEB0846F964B7B836AFB1CD7E9651B1F55BB0A83F
CAF05E1C674DC718DF6B68323380AA113AF055456C62B9351537552749A78B92
B84C7C7390DACC794D7B995443817622E2E495C48D1FF11D3760D45A37ADDABA
78881101126D56557454F656CD91B5D8B812D98508CDD00E9367F9F4B1DE6527
23AED06EFC19BF589B6B45401FCD57A40C00A51E0691C3161031EAAFA2AF0B50
CF23B9DEA767A86111720EA85FC16E604FC47E2350FD1467364E06F32F1903A9
17C9A8CCEB295B66EA781278F5BCCAF1C9593AB0D63D5E4FD8974F1FDE1DA898
5C5057724643D2B99403C5F37B06F343FAA58D53DF747E02D5EF5AE402DC16A9
169EB8426EDEFF2A460C0B3CC82CF13A7716FEEC9CE380DEEC2CA7B4BB49D02A
12C89B61E4E93F96827CB20275E44289792414B0CAB02E889A67D60D15F1A635
FAB10F5C5D378F8331F64EBAB5CE0272852FD2F3AEB0490080CF174CC9971CD8
21BC4CEC39FE1017693D66FF8AA5127677083E325E40A34EF7CD956BDADEA117
8382A016C9AEC0839319D30EDC6FA67AB258D7DAE6791E37E0FBD1830C6E0359
09C47181A9687DCF17F3769FD10601B4E967D66D928001E8EEABA13DE977FC29
C42916D8935B237905DEBF29A223933AAB9ACA0BF9605CBC714C4CF2FCDA575E
926B66BAE90C53408536AFFF665FFB84822BD6C60607718FF40DB9B346B62199
A1AA255FEF5BE45EEB1C6141203F6014A8A2ECF00ED67E465D1EBD46BEFAE400
803D672DFA2AA9F7250D6B29DC2054C2737D5BB6E3D7D6DA88DD37957CC31C41
590985B70ED729CA7FDC871CBD6B9ECBD1782BA599620A4DFB4F574C7A305828
DCB325088C2E6D78A3B89FCE18FFCA66D4B21A43E451016FB71B5E7A4F58D459
17D12536AC256990A8FFEFF4BC2D688C0771475E4B907EBB80C9B54C49E2ABDD
B167D3640F81685FB5DF3FBC307E4321E8DF3B36DB44DA462715D0964FCF6F4B
C2FC9CF2CACB48DFC7465E0E6F227DAD24829CF69A2FED87B7570D1DF83C27D6
24AFB5DF481990110A3B9321492D6B13FC006E2E07A39F50E13D2863B298D8C5
D8C40F74463A47BC0C13E879A2DCC0DC3009C1ED95A3B29595D61259E15FAEC2
89244AC9C9841C0148368FD53A33C2E761E766309B35E74B030C34152F1B2D9B
5F9C506DE85BE8E9B39393B94B1A67FBC918DAF88BCAC52E6C67FF1AF9B6DF92
031851090D45FDDD72A9FE5169B24BC3DDDC5617847868FF04C5716F79EAC382
840CA9921C3D853911E879AE3D80A5F11C75067A4347991D353C185D7B741672
7DA40B2F97420DFE0F739D20D4BEEFCBAB34DB452A5216620DC048F4670ACB68
C8C4F16B41F5DEC2C3A973100B1B848B48AAC71EB02FAB2445CEF8369A8F484A
72DA834A933FA8A5851566D2D750758D98EF411C0150400C247FF4ED61C8C362
9F200EC29F23EAD50872A065A4C0B4EAAB3B5DDEABC52AF49BD80CDD4B8924E2
9F57E38FAD5DA083A3F9BAF5EF204CD5705C544723C0ACF6F09EA5AFF2652783
E28D8264E4ECE60C0EC8B54B14E592DA2E80BD652035F53395B77F1D6B5A0D04
4E0F4D1627E569D1FF4B6D773B5F4DD9DE7451A62125D62AA13EE951553074FA
C3042598340874C3A92AFA4D3D030C47C84C8EEE58A1F25E5DF846E3EA9884DF
7184B1DAD0A572B934D9F99C980F229AB86F64FF9E8C4A77C773CF443975688A
3FDE2AC4B051BFB3E3F01021B4735EA3F4E0C2EB4A80B694FF4B638789DB12C7
951A97A13387BC6D1C9D046B39245148A9BBF606426919A000ABAC8A55D2BBD8
4C66BA3F89DEA394A4C14A653E5B3E3AEC848C92E43171793CDFBE1DE6E809E2
37E202CDEA5BA5921B1C012DC226BF151649C233FF124ECBB0FAA4C813B70022
76CDD6633B6764799D7B3F4956F2F2585F2408384627F403B90AADEDD6396417
813BFBBC9A1DCE9F7AA36068A979759EC32BDFD2B4169ACB7B7F695F2342D5CB
8698AE6CB5782D2AA767F01C4C05306449A924D60C3281AB38E8DB6EDFD560E8
90B73574F8C58F0516AAC8D36A212E28DD062814E7A7142ED2F5196A7E148DF5
F50E34537B2795ABB3E633F41CDF5A0B9778C10214982AB92D3EC12717BDAEE9
847B055614397D3AA5146FF6E97EDD538B7576B492FE1175622CA48FB46CFD66
7E99FBDC8BA50C67FDA5EA700F81117AD14CF32E3CA37C0A3C31CE9A26690C4A
DE9AD47B21E66D2F9F75FD3009C5F462BBF8FE23FA9D4CE10CC87D5218B71A4E
43360FCDED2D0FD37CAA6D4F47DFFF86D4F8E172D3BA9BBC73A14AB914866A69
E685A9F3E19A0F3F52F467F85377C69565ED090106474A17F5FDAC7BE830DD9A
F05B34A11270EC116DD9C4995105D93176741108496360AACE9A8D4EE57835BA
400759065C9071AE2F2F4BDD08D5322E1349BCA9048045E6B1DEA96DCAEAA09D
0B9B2645319AD1769DA8D2BF7BE097AC43900237C38B32D2789024F9337213FA
739B3BA92426ECC99A2EBDD652EDE1A550234121458A097D86CF8A13134838D7
DB82AB3D425B854844DE8BA64E405E64748703D676E0F2791C89E2BF819DEB8E
04A2EA0661D1D4165CF14C8CEB44385B2FDAE4EE2C035DE0DE2FFEFC428040D2
3154E4023C1D8F2E2D6D8C6AACB49FDA62E03E98AF2C00B84A0F7422B9227C41
FFC3F65CB57339D8AE8B5D00D6740BB9E4583A3759F6F0DA988C6FF0A1A1DDED
FCD7D3AE63FADA8D73E26EA6E6637580BBBCB41982A3428B7DA294D02A677D84
A9B14BAE0F921C81B7BDD5E0E8E0D65E0659F10EF9CA583F447105AA9EF39ACC
B91B8CC78487D844F0D65859810CC6E9BE525C388368F9DBA8FB66E1D9D43831
C58C76AF75A467141DBC65DC3410DE85AA0AEF0D40F502C346ED1DD6B3AA9882
1D2D0F574D490C4084968A01852A88CFBA6EDD0F775E58738591C361816E421D
248F6E7B7F525B55DCB4BE54DB52E0EDA6C85888DC059DBE8162A7B30762D7FB
E39B34C914E899EED9FDFA7ACDB5F6B1C74601390605543A9B2D25CC61A73893
3F7717B22EEDA2525F9480E5358DAF516F282B848B7CAF921D30C1FFBBFD006D
7B59077E1A5A558A0CA0A75FE7212908BA460C11B3DAB4B5883F73A196CCC9C3
0AA94B254A71815E6E9E4DFC7DDDA3F39A8EEB342AC0FCD80DDB714AFAF4D4F6
BA2DB50526FBBC611013AB38B1C20D59F9E48B82D49C09DE02E977E0AAA079A1
CBF3D788168C63F9B51B676F32D2607AFAA1D8770C444E4908751864CB11BA6C
0189C6FB4C415211A17B79EDD726D7780B30F570EF6FACD9DA14D229DBF4B7AB
3E7D8E67E122D1E22B9F6D4FF7CC494E9F710E3969CA87B9A9FD6AB9AE0CCCBA
CE81D3AFBFFF3F2B20CDC990BBAAE6155C0D48B33848B650C15292A65AB7EDF6
D1B101EBA8338FEBD91498B8279165E67B5D4D8BD9C87EB860F8DFC79A4A981D
04B905066CA81CD76D4D0E5117E1FD32681CBEE50326E8F75B4A37A86531A222
4C73E528FFD98E311BF3DB0DD368D43AA18A297DF07979997FAE4C41F8408027
F8516138AC4E0B5CDAFDB3CA3BEEA831B6B7555FF2F2A4F4EE88E67D3018BEA3
738885792BF69D7D4232D42F06B9C4F26D29EC8B58A7E621E1D0C7C5413CF7C3
4B4830FC973AEC3CEA5FE1A7EC0A5A6916EEEFA9CFCC02B0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD4A508CC61D06884D6246FA607802124E77FC07620C1DC238000AD
F6AD8E9D7418065549E5A7DE64405908A078F353F447D44E968A8BA903DBE04F
677479DB92989DFABDF637FF627F4756AFF80F27EA2B9ACD21AA8BE59F75A8EA
AE3BF5ED74076F822C41086CCE1E87A943549450BDB18CEA58D596BDEDB2EA43
8085FC9662B6C313B5CB54A9AD8CCE8BAD25DBCE0ABE023261A1794761FA8430
E43AA6A59BFCDD7DCFEF07F933662CDC5724D3A5C43A25929B54898BA9B58D30
C6F19B4DAE1DDF8E068A8B441C5B5E1FE556DB195D2881FC9AAF598C88CEF222
74222E0FF68051E53B460935C2DF2D8A77807B4DEEAD3FAD1E46371B4494A4EC
B43C272E0A1DC0BFDFA816FBA451DCFC20B89F7603803A12861C0FECBE1F47EF
98C35E5DA9D57564EB8DD80FC43D47B3C5D419327F7870805E30810C134DCE8F
C1F5680ECAB52B7666FE5AD07FBCE7B6C7466C36C1FE04D8866F9251B149042D
71C931DDD8234BFF1BB6BC76E651CA85C0C845ACFDC98ECFD8D07A125E562356
B7D819379BCFBCA830A71389C246F771AF97AD574BFE9944461FCD9408C88D6A
3EB9ACEEE59EFAABD76D5677B231727E89E110AB58F78A4BE43408C7C2F6D446
5B31BDEBFFA59B2A6E9438E4F5075931668B04698B3CBE8F262043BC15C05289
17E8327FB8B6B10274907C8E9A28945C70BE2EC90FDE715D61801FE189AB7A75
30A0C7C921F074C2C63001A415D6978EC80CBBE250BA0562AB6D29135BA477FC
3021B6854484A0592796449AE8F9B27B222100FBD51A9BAE076457A0A9E830C0
658485CA6304D445AA4B08E97B5BD3466C6897065446F7653446FEF499C10BBF
BDCF134E1D1EB8B314610183673444B6645B55EAD0550D79E5E4655E10AE13C4
0486C064E7C7CF994BE8DE8672207703D00D9E6A2484139549A171890B36BD31
0D1A184C084913958D22575E85F99F8590F62933B22EC8CD48D81CC019C9B4E4
1A80822687CF6CE66357C4904B79B704C799AE090C2E12AE0D9889F2FF91CEC6
6A50A934E374045BB4457FA9E5B652C7DD22CD157327FC45056132D2861F781A
F45D555B786B9B2BC563CA35E60B85E210DA5E0740AC1751DE355F94117437A3
4D3F4F85AB32857E14E646AD69AE46D8C62864A6C967A44D7900D44790C42519
C77695497AD2EBD51CB4DAEB0D9834F4CC5F8EEBE00BE39EEC30136B8BBA284A
D932B98721AAC2F00DF496288F46F21FC15112897A82021211D00A7FF64F3150
5A2E1CDB32A589690504D097B10E30E7A4A75691C0BCF4E5B8032D1946A35928
9FE2140F4B10602A684CF11275E537A592BDA358B1A86900F1B8DC287C8B2340
D731E4BB3CC6EC6BFF929EF80FDB8C24F232C6D89B7278B910483A464448C070
9C17105A411052C53817770E78F441E5F78DB3A150F0A442EC30FFFE388E6A96
B840649848D48610D183AD58CFAE137758B183F086935E739FF030719400112E
AA300CB6910A4072C474D5DEC20D551CA856823786EEBBF290D88A354644A4FF
F38C3AD2A480AE36218B4F466B8C7B131B3883E24E8852E88A012D41DB6E1D3A
D6BD20856C95470908FBFB46E47AFE234F39950BC003FDB74489C8B45BF7E1D6
38375F2F1ADC2E07E91763D2F0F99D02647FBF68C82AFBCC7E3A3DED220746FF
2B7076B8337BC6B584B5914801AAC6E8C36EDEB819C7BDC6335716A87C2F39D5
4B03E9A983BF9EFA56EF946D8509F3B7D2D2999D3F3725FACB38C6E0C24DCE9A
0D654066CEA814469DA19702F997DB1854F135C2B69D0BE6D18336AC2CE0BE1E
D7139E62E7910590CDA5DD4588FC950C9A5CACCBE39F1A5B5922B70542CA8BB9
3B63EEB09F28F3966CBC449C788B427E50CA5BDC093DC971B1AE1279F582DD25
8C11C2B23574478290F37CC2C41A88139787246D4C8C41D27CD3F086246728F8
B4B968EBCABB09B17A7E85C7BE858BB0C683D1834FCCA9AD81FA94AB9C5F340C
AA0AC6745916FA18BB8DF0F66B3C1CC771158FAC11D76E7D163A7342A6CDD3C6
662F5AEC5B3E4A69FA7BA6EDD414F99F3459476AE973647334BF7EF2A742DD53
A70656C3E06A7AFE3BCC7EA7E4B18230728FA5537156C1FD8C81C3C8C2305F34
ABF61F1A074A1266D368699A779C424B40BAD55E954F8096414D8305558B5F99
A435D7AA3AD6C77FB5598C222D29454B656262BF46A872C86B8B98E210848F52
4A1A2EC2A5CA7EE3C578535D39CC4C6BC53064CBA51F6A78837E178446A5B0C7
C57D129D64B0DC0FBF1F3A16E5BA4F90BB140462D8955A1E06DCEA921B5088B1
1C34EB94E3C489B22D1ED797CE26E2403B89B3D916D30ED29B3E7301B06BD090
6D7C8F038DBEE3A896992A1CDABBC5D2C87F9C203979697C640416D38AF8998F
EC5B0C5230E17E4CC99545E0775D89C1D1836F6DFD97FBF9633F89417C286FB9
8AB2D2D3A6081AB500436204DE3F6F1EAF14CCB7901A3C1C54A705AE432416BF
4FE23DFDA51D40DD9BF5DDD3CB175F3E1E612CD544ECC7FEEFA841B2274570DC
E510E39D6CC4DB979186221ED7E0B65E32A8EEA6EC7A69671417426CA896BAEE
9F9EC2637429CB45EB3ECFF3EC05B35F6AAE9C67CAAE00C3B09AA29BF8966E11
E954B0AEE88EEF4385445A3E60BB759D894EC7B48A9F798B971EDBEE3650FCC7
C8B259CCBA8205E8F98F00E3D4850BC4A6FCBDD7123B07424671BF00797D681D
595B89297A87323DB82F4366E7F84F745A38C7631BEB3D095F3BDEB0FC0140FE
BE91C45AAB69F13798A4767C68AFFEBD29ED4B6E2AEAD7E6A538D79D6CBC1D6E
24C17BC4090A4CBBEF3B632DD50F52C8AF74E9B3FC245E6888A546966F9D7699
00193133B2F746F8517795ED6B0BE7AA1CD29495FCB31167ED06A5A340040C1C
50BA49524C71DD1D9114BA71BBFF779A727D18EA999ED76E138D519E428C90D3
0E716D592F48C9E47DDC1DB7FAA39EB5F85C96ABC52810FF6AF70D58A4D7D99D
11D1F0FD52825A689E15BA0AC79D3F8FBC31DBEE9CAC7E77D79B27E02132A165
44169E0C4A62F45F86C78A802997AC440DC8D5A6B1DCE8C3EF1B58A487BDB1B3
F7EBB749DC4440CF1B518E22A75CF5E9CB9A4DB1F4E6B4BCDBBFC85A3A92B3FB
7C199618D3B2D90A75AF58CC4CCFE35957B23CFEC70C91E1823C03F800BC86CA
8D726260B51E71CE4F9FA406446C3F30BDB2FCE712EB0B9BEF80D5A156E3EF0E
EA375E66905D49892B70588D73129F8DD1F0FAA258942085749E505F1FAE14DE
1883D530ADE4B196DE9E61C4C8D5FBF4CF991AF88820F123F95B43BDAFC180A6
1CD2FE2A391271413D1ADD6D779B654150041DB744518A0E8A80F687AA6A1FA1
45DFF761EF8B43F852E00722DB3532CD698397EC9FEC7BA6446656F2ADFE1C2A
B7F8582F33B2E19893421464A9501F94ABE2333BAE0E4F838E1342D1C351AB40
3B42027CEA384DF3A16FD969B5FDDF273E44AA0993D5479BF1CFB2FC96B01ED7
C2970B0AEAF74A19162BCECCEC91080AA036BC6CE74FF7CD37E72356EA559BC8
93542982FFDB6CF19FEE4D250CFEF414086CC569FE694A3090465C94CFA5C784
37A7440C8AA88B32FDEA21D73F36605627934E055273B2BFECF4FE50A760887F
52E83F24A890B95FC8BAD5F27D6E47F4FB9602AD6E1158543D00A6C821C8ACE3
01EECF257B1E9BA488552799E40E102D9E5646FEA24C0940D12507B823BA1B8B
C4AF53974D04BDABCC0C2A06849F5B712394804BD4BE709221871A09D6ECAED6
F3C14FB659E8B9BBEF8720614C303738994C150C2AC9AFB1163E58651D2D017D
8BAF922FF16B61334C671073A58AEFFDE86FA40B544AB1EEA5F27B91E98C2998
6B14D002B34AD21D01E1971AD8905004C227EB2475D77D38011585E14870C3C7
0C900B579CDE7D7C306DE84AB81E99DBF54BCF28B63386D2EA922C80E9702C61
E213FC3412FA8677AD4CDBF5D5E8524B0D4C7CBBF2A3552C50A5DE02C35AC220
A89123A74E0B57509BA75FA5613021A298F90AB39C197A0593B73F71DCFCBD2B
771A97BE327B917D1B6296D9453D491902C7EEBCC1ACFA39BCD273B7CADD7262
FA3D6C4CA5F9F22A72FDA487FC97405B9ED8E24200F1F2197F2EED6974E7B8A2
12D08F73B0278617E8DA35579FE7E7B9A29DF29B896AA8798E221313618DE78D
22F02EA81597EA427FED568F0287D043B4DB3C8CC888243B9F7305A874F81669
762B92A37D94A10B417B0B65C693E3FC65EFDB1BFF7763CF1E0CB43E13F1FA2C
B3EE64202C221D79BA01F71E56482BE924C444FEF0F24767A37E04B9A16FCE62
F33F0C59263F225101EB0711F288B2C51C8D0EDED5B42822FAC82C37490A0BEF
5642999E4D1F915D1ED09BB952BA6E68FABCD60608F52EB8B45BC3807D6C1C0F
75E57F66F06D0F94BF6E71CEDF718A506DE1D8C21DA48CA43FB0DF73DE5CB762
C32A349C4174811E9E24F8D944B1C140707E2734854E28C334B1CD93BF182F0D
75285DDA2EE72CC66F826A3A6924B4842F5DF54C9BA5C41117B358E59045747E
0EFF245F7682641E7F09BFCEB2EAC030318EA189CE32C32A66ACDECB128DAF44
2A563EC06644A4F7393C18B2E5AF2CB73F1FA7A9AADAA5CF5592EC91283F9549
F09CFC040831B45FBF8A1AF6AC115B7AAD0F27E911880F27B0FAC18F712403AC
ECAA5A63C6E2043B2EEB4A5EE20A546A99CDA28557AC34E8E9E673D3370769FB
78FB528B745B5178F171A96128E332BADC599B4CC8FEF413DBA605FCE061AD79
9B805D9C534721F4C9E1A4ADDCE036953C7ABE3A5A0BEAEA2CF3515F1C1E6FB8
5A0EDCE49BD38E2858E37BEDCA8C489F9EE00BD55CB7B31CFB6CC1ACB2AFF585
739853945C803FDAF2701DE88CD2453C09987E235D60CADB0700BAAEC1603E3C
A8A10A1DD39AA233EBB7A0BE5C47E19B535F782A7D14216F5E4A4B898478E856
FDE39C8495935984DB05E83E02A80937BF33358AAB8D0D2A4AE1EA695CEEAF70
E3B20CE4DB012E9F2066466E87F3FB543D252534225A580648809B514E60D191
5C995894C52C9CB3D5BB71B130C2A35AD8AD0704657176F17CE49A3A6957A9AA
3829881A778F27C71D37BF15AC54E8C39BF35E974C74DF0455B469309503D39A
45298E3035598F2B29F7BF43A43911F3E42113D5681A04596EB54B4DCE8141FC
B5B9FAF72464FB63A5C42A63D64F3E16A92AFB64C0891B14D9920F486D3C94CF
0C7669ED9E36DD33954846D9D0ACBD50177F5BC191C9077BF8E53EDB89D6070B
27D4919792C0BC103538CD284C9CFEAA2928802611B23B64DBE6B4B81BD89C82
D81A6F3E132606A8524D88E16F3112FA0F007C128202E58A1C945F77AB141695
47EE2D0E54A8D88B3F6E33199BC15C451E1A19099A0FEFF456286F94838CA95F
EDDFFA2FFD0EDCBE4E3B5C8D8DE89E242F9B6312BB5FCA67D1E215EA5CDF7FAF
F4A03B3ADC70E8E030DBAA42CF9D97FB643A70B156B885171AD9B0A46A77545E
769124737C044BBA551388D7D2F852F643A8A9C8FAF925C80301C58EB8FA125B
9C9CA9AC6190357D2163E289D996CFBEBCE833110C18F408B1242EDF8227B38B
16EE57A91EAA19E1D4CFB9A8CC25838F9CF20D5291634BB4E51E65D881D3FD23
483E066B2D0CB2862B29D8E7EDC7FBD12E00326B343F6AC581123D98A400AFC6
3A5D1833A73902E8459483FE5B31E9410E1FB3BF82618732F95D44EB4D596116
9CB33C96B970623B7971497AC7B8E493E6438512E558585171AA0BC6F39CF6B7
252091ED8FCE1AB47EC80423384A047BF32997B6EB21FA6D5B0DCA26D977FB2E
4A9CACFC2D95E34C980B10C45E2BD3C34396A5F0D016B8C50CD21979C66ADCC5
E9B907833E2EBE20810A00D1B8BB573DD0D6DE97CEF92D3565BC93A333CC8401
E19F4BEA4482C08888524A2CB6683C0ACD71100B937B2577896DBFBDA3843891
7588CAB3E59FB22C5B875345D178AC3FF3E73470AF85D8641D23C38A11CB71AD
3E4D82072B02CE4E7EC1FF11CA66D3DDF2BF363DD28D9EE550C085F9D118D88E
3365F7AB7CFEDCEDAECAF1284990FEAFE0A407C7C2B8079B2893B6E6BB280D37
3A56C6FE7504B5105BD2AB87A277B25C461ED0A8BF9124C4CDEBC99973D55751
D97A77A9547C21918D904DF26CA16DF9BAFFA28833F988A66AF56E7FE0437508
12E7A61C73DB3C8C771345EEFB47691CFB53B9CFF553550A45CE61B6D41A48BF
26259AD47E681417AA785DC3DD1E56F0FCB89765D3815BFAB2B94C0150293D8C
7198748B17B23410137585B8EE2BE046FEF515A57D4B87248B27210AF7C057AC
FE7260C023D3EDEB25D0564B1E3D9DF10AFEE39B7BBF6ACC5DFA9253BAC1D050
3E25B51A047381BE6DA0B284B2DFBDBF591AD94CE3DD3470C495420807071BF2
192599F5C1BE52AD977F09922FF466F5918164557DBDF891C85681D27B2BAEE0
D95E11DE572E75440B4FAD19E8A74DCAEF64287F63007EC0F4D759A3EDF9240B
8C62DFD25844AAFAF1BBCE936738F594ECCE839705637FC673BA3BA078F55FC5
D5450A0991E2C870B30F3A59BD3EC4B9E19F4369AD260BABB4AC921A8CAFA412
89633B2310BD77B36A2F13743416690DCE13C7925B7D350B4BE3C67C89E96095
7F68A42ED5D472660A47EF1108B629E81060CE1C5A1957145FE0859E0180BA5A
9BE430C8A0092D2A03D2F13314F3F7DD106ADC465DE7F7BC48263F67A0318D29
E4C9C282B4E68AD79E9C2ECBC0FC0244F18755A380C9A8B4D43A811831F4C174
300B2E3D7CA6E81448619B7C455CB9F3E2251287641B14B2B30AA714BE18BEB5
F3AE215776E1E3126F73F52DEE7038F11BE5EF1B949EF8476E989C1664FAD161
59B8839CAA60AEABE248A8EADA2A5E64763454563A528E1E678031845DC8EA7B
32DCEB16073E5209113BA2D44E5B66CA5D86F0C590D7FB9E51E09C85C5BCDE30
D15CD9A8403E0B42C39D2AE574676AA0592F3F052E71E8E353D744D33D7D6E50
620550430364C88A1DF224DD3EE5110EE40D66EB10A2A8A57A14B7F2D4815E07
33979B9FE7F133EFEA3D477C0433ADAD9AA04C4B6A9E56344507DFC06833D3C6
4B8D2004835FCCA4CE0FD94834479279EE15544D225E21361ECCC811521394C4
8F2DDEE0685B9209A41A96447D4D91887974D0BF0E6B0C5982FD14643D0DBFAF
C39D69295DCB4A603FEF35F2FF4534D849537AC77531C6505C9CA163BF736BCD
119B02A9E2117BCEDEC1EA22CC0D85C23D2B9D8D0304DB9733DE1AD3C802BAF0
32951F69E71558B50DEA43ECEFA53F6F3A64674253522B9A16001173128ED3E3
0007B5E14D50F10655AF129EA1A66E8788A5C054CFBF4886DEAB590B2E6A4EF1
135B2B81A10BCA2788C5EA4AC70A9393E8932041916F649AF3A3099ADCED70B7
671DD1472E5BDC0060280A666488893E1C5D440C1B8B9A80CD836D426124AD68
878E304CC8C811E19BED9148C403C5FD2801A2BA39759FE36B2D8C7ABDB823C4
619F741B8AF1DBF8A86D3EAECC61CEA16994E1BE4897EE51F53D2A54740A49AC
F46389502CBE35A3EFC37F69F27E22B678FDE877BADE791C49E1D35DA515336C
228E866879125C159F7265F927EC8A0FBEE6924E09F3610F32DCD147782194D0
FA7B8DF269D6662C1D183F91D837DAC9C5C6099D60CEC4FBE8F752E76CEE3C5B
8B6C85C1F2A2591F52AE787815CBF0CCD692FA9C577660F42DD489A83EE493A4
76511A807F725F6028A95C12238244825B02D37D37B1C1BD85DFEBCD88DC0519
B97882E8F13AB526D5DB34340CBBE92862923F31CC6A125C8089E9A1B6684650
8EC480AD837EEEC094D235E0AD62CAB0A75F1B5C17EEE5706D2AA32633511391
230E238FBEDA18E91FD90423F8FAE7BD2B63A62F447AD614AC5FABBA8F5F157A
749B49D3A5B45A118D7207AF2C1422B6541B815FA7DD6E3F020F3F5667726ADE
081A08D68948E7C515BD772CF627D4050C7D65FAEF390A988A41FB6F061E4519
DA87ED14EF3E4DD81939D6625C26BBDE0A0D3A2638FE87585DBFAB6C760B1EC0
A5BB79F6CD16E795422D8A7CB174F75146E8206C04B7C52A3ACFA5F9F0EF8549
60CADD717689BF0228B2745910D645972644E9C539D79EF9FB7102F51C8402B2
991B5B1C92E85A8C7AE71EB18551AC09AEC64829BCFF94414038E5CD22BE3C06
7D9BF525124394C0053FD8801FBE52E1B877BC1BD97582F63ED72A56E4CEC34D
583169C4918F791067417FDD31346B27BA7034DA37877C27AB769D8181EC2D28
8635D50357EF007B390B4306B56DB0021606D2B39110AE5BCA227141BBE1D855
C3CF4DE1FE6C7F052DEB37AB594D2A1D7EC8A13FA454AB5D18C5345854701724
9A28B7C05C03097E9CFA275EB02313C73A6CBD484908FF78EC89C3C5BCC02FDC
63940F7AF6A1D65E11DDA40CA0A4929782F3E7FB63F539844E412A15C778F71A
B3705F8B0DC79FDE07EFD3D567DAC691669A4AAC7360F8B87013B37DF424421A
41C395FCDD345D4E041C4AE74B2ECD28BA9E87A408763939586556DC214770C6
1A6384B76390DD9AA792E74D3B96AD2955DD8B1A35CF423DD8F3BECD441A5E7F
4BE8267AB123DD8589476FB3E4CCA0AC1C9FC47EC507F514A2BDFCE4E2CA2C0A
305ACDD18039CB5F51E368E8C74CCAE9366FE6622ECEB154CE444699EBA763F2
FB8C52DA8A80A8CF7BBB5FE887252740D3A0BA4D730FF79C12566570C4D45014
AD2590C9FD48345B646DABF059221CB324620DA695CE8AE77452590F9F8E91E0
FFD05A96DB431EB94FABCF5F1438742A1AECD894AE6A7A25966BED3DEA117D39
C81CEE7CEFE83159B9CDC2DBDEAF1B36C095058DA1F21D32BAEE70088C9E2696
9675F5F3B9C64AD774E776D8633BD1F7D69E3FB79643B330E2801E114CAA902F
20A9EBAA7D01D4CD352C66A17673D57D3887204302AD8035C10AD450BBEE8F89
74065F9DED97AFF68EE2E0A3CAA0A982A5CE8765E2681EE461DB941B09971DA2
F5AB1036A99370C24B1748065A4FA428E8809D05D7750162D4E8D9D9E24E7659
808D69747968A767404D66E233C1DC2AE443B87643A646479980999FC4ACE3D1
675667EB57233D214FA3C5F0785EB23A59620C3281FDED22925148953C021389
5EC068753FE9E1E7E7AFDFF8D5A3AD8AB98E7818771DDBE56F092FF99EC2084B
E43B6D910330F0D1E21CB0556A314CB1C4F0B9B862CE853BEB518DCC6BA7DC0D
8B25B08BA7E99484D9F8B5581986A19901D6212A00E01445C02F1213BD108B19
6C06534B540BF541CB647F18F97A17A7588FD3F352457C85FE66FF764ACD6EFB
F43977C659C1DA21604CFB19A1543AB0AF87EF08AA4329554FDBE037C5657DC6
E5F60574ED2B10C94C98BB63779C8D98DD28DD6AD93B32C4CC0153D5311EC85D
79B10FA06F35A986459EFDD766A93F05EFA90864CA6025F40A93D05ACBC90EAF
9BBBF55EB6084D2416254DA18BD86DBE2BAC49BFBA00A1091F9A2E548B3B3FB6
6F981FF9642CCBB6B2AE19468BE37BAE652CECF293F91EA6B8418C194A584AEE
22404596127028AE6A35BE7B6B8281342554288AA2AE2CC76CFAF704961BD20A
00341CBE43F9DA0FC89C896D999AA621F4EA4BD96218E7BFC9972F8A0AECE6A6
4569F57BF92E2EA358DC7E15D332C06DD54D91599FDD5AC957A439D20BCF4185
2A2C0FD9DDFAB88A3ED0812A4A48B388FCD0D851BB55A87A58A6D25039CE4A15
34233A0FBEC8AE57A7597F604B5C34EE9BE767DEEB2FCE5DF8E873AF625D8D20
939CD51178D097CC4C1611393A1DB88A41FC87E1FCA5C8915EA1B90FEB172536
0319CD3B9C1B65B041A3B79BD8E9680A687C2347C294E1CAC4C0001B0217688E
CE78A971F4AC99701B3B1DECE00BD6616EA0A416EB276B34B8180398EB974F7B
33D2EC6B4303764F845939854BAA1C72B37A2377722ABA752FE2BA1F6ADB2A95
2516D00540A70F9A34807B559E1B3E38F123DBCCE4922C000B05345169CBBC7A
573934AE1CDEF29DE3992E2DD982290CEE373710403FAC98905A89070684FA31
279F24516C36E127A91B447D7A0FD924275FE6158E80AA2EE74A3055FA6A4606
6D4EC8FAF3C0C60C50C3135AA917C2812C5A211E965FB234370EFD8627AF9E8E
38214B13CECCAD91748B22871E42C8EF00F260C8B1F4F29FA94AC02EC527797B
CF0100B8B7EEE03C93B1F0036B3C0B10E7162DEF7D3FBAB026DB32F51F3329EA
18A57CBAF0C71DBF76398E4FC1105D347C0B5612B3E970B57719D4E5C4115085
CF1FEBF82111B1CBD73EB075C2A37ED424EAD77D02D82F8344983E936D7E8429
7C6BC81DFD8FB92B78DD68B5A21E570C8C3872365A932A3B5713613155F9849A
26457C8866F357EFF52AC5C3627A231EDAB2CE032DEC53C70B6F3336BA822845
C373426BE65CD959E960C59C49ADDC24B5EC4CF081C706C8AF4739A2E2EF9F27
A0019AF30A4F7552971DD8F81F3B6D2915E16B5614AABA6CA585804A8A7C158A
C91E377352CD4B970C802740F07F64C880095911D1C789FE93469C707D8180D4
F078B87930A6D5C0E60973931AE8ECD9FA81542BDF2407E3E0FE8D8BFD350651
B8D6917171F75B76060DE2F399E07EBB4E47E0B54084FEEC1C11D89D826CB588
9D4C31446C85E1117E31621112F109EC9DE8207FFDABC084BC5C172795EC29FE
99D86DC88F11FD5C13978295D1646742761EB70076ED419342479AF5CB4307A1
188ACC084E0938D782461CDF084B59B578EB4C925CABEF1216F0AC637F85D3A9
742E3D3F05551912A89D32739D39B3D290378FEF16C413D3F9B76D5A05DB7BC0
17ED410A4593FE835BBBF43C8132C7C8F5C088467812C8104676FFC808BD7B93
603DF6765784A20DFADFEB757B72576F201E10FB60D8FA4E2618BDDB6F482CB2
C82CFF4F9245D8CD10C69FA4C4E5A2A2C775BCD39414F41400C01CB7FB98F8B3
A8D2C6AC693EF1BEE7C1F8B2E7E8FE43EA25BA195D8B820010D5DDA1BA0A3A99
469BCF9EBD0491F68348B9D21D7E2DDE51A0EA5E65E9168EEC51B1828B8CBC44
210281A97825C183D79316770D2A1F06FB82B973E48468BEB7263F1F4511914A
EFE65B5F434DC1634074EBEC25F49A6A9795DE8C3DF484971F00998B70F637FF
CE4700DD19CC92462936DCABA13639366587FEAE1806BE73E7DAD84F9B93702B
E240C22CAFBE44E6F3F2631120B805962D39AE938FC47BFDD538B644942B6B97
1B44DBBB30E1A47A1FDB3AADEB62681174BF023F39456ED011F900FB9F80B092
CDD231EE5DEDFF678043C98D18C45C3B47CE45937ED9341702AD804F1CA3CD22
51BE3DCDE2F8DE080100381F20987A94157FA67466511B42B4345B9A212D856F
F402950F50A983C1DE29F0ACF11517446B9419218E8B60C4067EFE3DCCCE335A
427E58AC64E832FA6BCF90B5E23F43A3011B9706A0FD90A7FED1AEC2F55F33C4
ADC8F1FAA210749C707BD39B489E54475DDCA6061B047A8B74D9C1A3A49E4AE0
56731D9D4661CBB5F388BC62081D6CB7798708FFA708BFE7A41763A97B8040F5
410F40140D3A1995A9F5964556E297B203E9E69D32E31727FF1C46D7836903E1
261D227A4411C04A6C331FBDABA6364BC18FFCA3DC62C64CCEF0B04948C775E3
43C61835C6181A36517CDB9A1FFAB816CE911091C1E8512ADFDA04E087BCA00A
B5B4758AF32EE80A866C91321544D33C5A4B75DA31652BC52055A7A81493F176
B819E1BBAA1632F8ECA26CBA7529A4BAD58B8DAD776AC2A4FFE2D0208EDA33B9
BA6186E87AEF6BAB20E0B181C2E4C11086C6E16BBB2FD0A97EEE66BC28B9DE5E
ACF8CA56276B31ABC3CAE648B69A45784DD4ED2DCD8BFEAB9B506088DB878215
600730B2093B5E70383645D506F44894D7F71ABA8731E336B2DCCF4ABC1B11E1
034657312B01BF62C49158B1E40B96EF61306E960E0ADD8B3773E45D609DBCAE
2B9E169269306B574345C441D92E32AD3131A39A7ED93760FA06946E956AB9DB
5016D241F366B8F0AC38BA742D6932C8E8114040942048C0C4610C9BCFBC589A
197A4731E8DF36C0800ACE2FB5827F840576C00935BA6B52414853C92D5F2143
F44C49221E676C8467BE81D250CAE3FD1923C32789B428D81988E36E3F463DAC
E41D92DCD8A43E34700DB07460A9604BE02A9FC63EB240B4FDE57CED0BE230F1
03242377A8214EC4E839E6026971C7B946DA329C3433A852EB0B3E26207702C1
1CED84112087A63820D02F460E2C2C90034C29EA30ADBE2BB894EA141B961756
BB2381B950A5189DAA120E164891D7EB76083A1965A5E5386D1EFDBCCD1783E6
5A4C99EAF22EE1FA8F60B33EA30E3E0B6651BBB10EE42AE3C45B135633B83F18
E6BD2E0B58339BF9B34FCAAAAF908EBC1BF96D89B4C8CD29325B7FA28609E8CC
7E93285EF032EBA7EFD1ADFEDD6ED758A7FFD5ABC4B518AE1D34288D5409365F
FB6BF997DA12E2B64373F20D95B2C9447821AF2F89C2392BD75AD4FFDB035925
C5DC14AD52423B72DE2B2C9D1B1B0FED729E0DFC799CEF1CB5968B5BC6C000DE
6F9AF49CA0222594D963206BE30023B86A7B4E06E6EDD5319BE4793F64BBB365
6921638C1C635AEF8A1611E7F25EEAEAC3DEF0752DAE64504A8711E8D6E7983A
A1E74A592E75CAFBF329A68091F7D7E6DCA3DC7E3C51297E9A898DCDE5E74465
A61B3899D82319EC8DB0357CFDC94CCC44A38C58A4BE201818837CF03DE00525
2A51FFD03692B957A6C79993409F110795251CEBE01D7F02D90C2C57F068FB69
C7C38A3D146E3FAEDDBABBE0CC1256EC46A4E7754D3BB932EBA0F4EEF05B827E
B69E43D1C17BA3C86CCA27EEA495EEF820A7ABA051E8F014A60FEBE10835D9EA
8B17613C8972A98F61A8EE9809E2CB6E9C7B5D8E16EB4F5B080A6527952D5144
2FDC6A2AE2844BE30C2C4B722383979F8702F23CF4557FE057AB22BBAF941320
E49C411DB8502A88E02794ED1944E579501483B638DCE6889960C1A3A8234456
767A7BCF585AF1E7ED60D5109EA56813F672344978967EF7355C6C0F4C1A478B
084AD8780A6EB3AF8A0B10C1253CBA73D215E10808B836ED248C8F8C807CDAD2
51602FC7669816AD275AE7258124E2D0D7A9290FEC1FF68014DD50FFC2FCDAB7
14EF8384BE33853325028F591326780D365A93E28D89714B02C93F1BC6640FDD
D7F49E99A0F145F01B0C6095B0B4EDE6723FED2675BA9F354AC2089894631768
46C28887F0A6D6A044E859758E0F534C07B82944726BDADE89B4D8E6D4A04A2A
9B9A809F49AD31D7C30E8E3A3FAB15B3DF115FCC303EA62F8BC4CBA1DFC19A67
AE6E26F3407DE39A0968FFC28F3481F239D4DB52E8B228F85BFAE335B6051A11
20116547C4FEA8C1AE3224D9BC25FC3D31202C54D386D3ECD61DD094C564F8C7
7F5881F66F915697207FAE54A179E1C213668A98FB02720B0A85712E5CA7B467
0EFD11F5C5F00FCEA5EF4D5ECD5DE5DBADDAE7385FC005E665000E5AE2CE32B6
DDF757CEB7ABB98A5D4359E63EF8244093B9BED3277F15D4FCF18E62A3489829
8C84706D59474E0130578428AF5EDDE764BBFAE3C0A94E7B30DD69E1B2C3CAD2
20861F905BE2EBCD8E7BA8ADB76F420B58CF25CC9C339C919375C224DC133D74
F88478A3C2EEC6BE6A0A44FF3F2062678C29CF30EEE51C304C4891686BF0093F
35C3169A6CCCC08418B27BDB5F3FE3CD1983BB546F49DDD9BD633EC8F104F9A3
EE048196B47018DEB8C759274D8045ADAECDE181BD43D70A5E5D3332519EE201
6194CCEBEC25616CC076DC7279B83FA125D6DD423540BCF3F8DC223FDFB1654B
21E3895B8A50776DED50AB8AEE1160A8E9447E008ABD6C9C971A749BE93C4577
F5D688319B7D9E02960F7C0D013CCE063154E006EC3DBFD914A36B9733D01594
E6DDDE2D44C7BB4A2FC8C364FF0C09C46ABF1BE8340F74783341DB68CE32AACD
6F9D7753779B8515F39A70F8E71CE392DE93F476678CC0C56BC9B72590868BB8
8388209D41A71E05E4BA8D7FC6B62D9833A20AB7B789DAAEE7419FE45AE3914D
9178C8A6C4D68E47B00E76E958241134700371469A49A90838AA8478D8F94EC0
2FD4E63E575C0941255137FAE1304E477DAD6592CF59F2D0138F2E047569D6A8
CB54658BE45A1D8A6882D991B6E8F505D1265DF455A413130C82CF04C3EF6A68
76378601395EEE1768DE8860A13E194FC9B2DA3BCD7C921123B9F214F826F3C0
172AD6F6D6BD6656A0BCC83ABA7FEA0C04D17403241D44F1015E76D607A5AF2A
131575FD0676CED23C1751E945D9890F48F62D62E6465ADE09402C8FFBF26EB6
FE3663ABFB7F6C8DAC5DA74F99126B53D62AA055681210B796A3533F94357EFB
194D4BE46D007753445B322C7D3AF68FCF93A5429126DE81CD6B0FF6176C13E0
534B375CDE3CA6DD71467C20E8A40101CCC339F93EB8D51E3F38396C6829C8DD
F86A7B6EC1C3314567C88BE2A4333B1E9964BDA8C4687268BCD370455A98A239
D58B788D47EF32CCEA3A27042190D281AF0BC516AE5D6CC4E176544A47869A64
E63954F6CA712FADC6FD33E9B0E6F4977566D227C89956CC34C73A6EC2A27A04
448B7C4E06D5B0F0DEF65E2356BB2744D1E5B390059F800BFD5EDE1C55DBDB97
85489E1FA95AAFF10D47858E781EEEBE7D4541C70551FDC72EDDF852779E6FDE
8ED4C188A20430242505865F9BB9C53823712B2024D9A3FE2AD66CBB0A2A531A
493DF3C8886CABC01F5F358F2B86B9279ECBED731A873F31990CA8FB30A361A7
03A2814A200FFD179872CF7093A64D1206AB59C5FDCEEEAB9CA49F37E0E55E34
B8A03FADD97807E129EAF9B11D3AFC9C942C74B1D27C25684C3B14663A88437B
45B80AD0C444D23C067C14FA4CA777F4E48D1B01066BA36B19BF3B9EA1EDB17F
6DF5286780C3763D9C7C2806CD40EA6BD3CE8D3F778F6BC6D0465B023CD171F5
8F1E998F6F6E1BE2942005B46123D78C296F8AC40E60F1E4907CF76C983E4174
F27F5AC1B25957A0F054AE750CFD0800ED2E296F288C1F2D4F3D690C07508201
AA051B812A53C02606DCF3DCC9B57F4DEDA2D9350B12E3843B5FC1B30F26F28E
96F6A0B334948AA2F90ED6A018E7D5351F45EEF3CF6CF84697FE6D9BDB413D9B
041ECC95DC0202CE2938B40E635AC2EE52D6CFA903ADC997ECD15A231C3BDF1F
8FE1A694B3DE9A4571B755958197A33514AA5C9B2B13DC68CDD7964228ADF9B5
C0B99C914DD5D3BD53AAAB106D768A107FD11D6C03BC83F7C504C73D283DDD92
B043ABAC062B6BA2F9FD890F5030B8B165E060B5F247D475DC1BB0F246FCF1A1
09CC50EDA375E8CA76504E2510BDFC66EE858D35E5A2191397ACC3D6E2AC4D82
E66190E7EF4F5C4B25E18FAF28374474F1D4BE72740068618F784C96F6806D98
16FF23D908C4AF2673B75EF5A16D3EFCE2364475D40A38ED44F23D82467CAF6C
3C4681ABA54CC69766DC494256FD7A7F763341D127CEA81A0C7984F6E99E6CCC
1D40F78A28EC4A1DFB0F9C8875EF5A9BA94C2C9B7168C610BE54B9C538343E23
68691757289FE9C2B1EA8386A9CB5709CEC2CE42C4CC6AA7EE629D85AB564E8D
DB1A0B555FC30C8CC2D6CE9DEA75C4064934FB530BB56CD6BD3006E05681BFA0
BF7EB20316B7FDB904D149467F392F0DA02C341604BF43CC774BD1E6728CB0B5
54648DE5126DFE050330418FA93079D8C83034AA1F5BC1328762B99DC5B4A512
BCBBD6669C851E2A15725F6C5B800AF66B44344F1DF681219626C8FF7C262EDB
90315692D6BE294BCEEA64B7B3BFDC1BCABB121FD57FBC1E6470FBE00FFFF6D3
664C5D0355F8BE90B6168B89E9F85BD1D47602C83B9677F41ADE04A99F0D2AA0
9EF714E4BFE0D7A1352D7D4274677B103477A5EF70946D805BC78580A7EF7997
467C254D74D5092243D006D81C1B72EAC3CC98A973EAB1FB9DCB3F6FFF8EB26E
A5776A594A9275834F2E56C9A5C9BD35B8B288FACF761641C0DC2BD6D790B59A
00348EA1FA8F9014EA3303E51D5405629408224D070207499DF2F43E7D52E442
E951C2C424B7A487A48EA5B567B07AA8D634C702038C7161C6AE6B9AF13A25D1
4ECC5FF4C6D1DFBCF8CEE94B2C53AFC25DF46905F9EB8284105CEC31918A10A1
8981330832F09ECB07AFDE14287A32E1F9046A37CDCD8388537A3CCD3403049E
D2D3A304BE7DF7AF66BB5807FE2889F1E342C213CB237B187A7B54F41B544335
26B5BCF13A9C440562D2CCA1906CA660FDCFB60E1189D7BACF8C6996F4AC21BE
5113A9B8F907995B6FDC3B833876B152EF483E800A39AC561D5ED025A2448EDA
8A35B5564266011D5285EF78B1D0F72CE3FE6E475E5D061105933646FCD69B30
D83843202CF30FD1073DF26F0CA04060CA4C205413CA5F809498AFB74D6AFFF4
C00C1E197DD493C0F66A363375D55ECC5EC98E9401739B34532BA8D313A63AC3
7031CAEE62F3FE0428A7DE4A409970FE78BD3A85079387569582CF2FD76A55E3
7CD7AFFD757BBFC93BE225245015EF3D3DB265F3DD3921FF40006597DBC9882F
FD648F7C1E91033937FC7B22A9F8089DA355061291A5BD188036F0ABBDC5457E
832AD8276281725274B6CF373ABB55D70EA78FD2EFCCFE9CE4278432D6E9D53A
D929119E92D0E49663A5CA73CA34FE91E0CCBAD41162C082C2C9FBA011F02330
3BF8C75362064CBC02FEE034AFF7526998C3B5E8B351BF91F719E5568DA76364
7304EC4F17AAEF29B1E84692F82B754D7E6D0E64A04D044087024C249F029FE1
688B83FE60E3747FE544D61ECF154BE1544997755880F59CF63BFE00B271AD8A
D210C285C6EF48194CD264AE3F34DDDA919B6B19019A4AEF2F108B0842116B87
09245153B61EC328513413CBED6A4896B816AC7005575762C11C08729B7120FE
CB1B62554FBD43ACD3838FA68643D844B4F8588DB38414B88CF2FFECC694D26D
D487629F9564612A9CD7C56A8DD46F3D3002D39B4380916C692EAFDCC27E5A30
7812B4B90EC970CB6C9A8C68ABD77F51B80658397CEC709C444A193D5360D699
1C265977DA3BFB7599B02E5A9229C495099A10A2DA9AB7DB2E4BC3BD2D5BC194
11F5C4C9F9164A7C8A0A5BADB438374EBBA5500EDFF6E8286EED3A6DFCD05491
C749A4DD66907ADFA1F18A68A1AAB3F34CBB5D6143C9E43A1F190372A4FF4251
21FBC3E8AFC7E437968BCF104BA59FC6910D6AAA8D10DBD043E7B7EB30C2B7F1
C9F8C49DEE6D954C94E764671E5A5F3E487C42141C142B68A1B09693ABF55563
BB1ED1C575963CC7982C9C13AED655768AB4F5AA10609737A84694E8BB270EAA
A64F6982FB7D87316D83E28E5BACE80C844BD2A944F81A671DB10D74D95007A1
5C686CC376158231CA2F93E277F285F88B0CC9508AFACB14DC3E828453C8E8B3
AAA3DD5E73A8B214C02A57BB9900673AB03D64D6A2B3B5DF5C4DB50D8A388539
026F0F27B2496B0A11576825E363007FB21283915E3D6FE3C16131FF2A0FE627
9AD6383238F60ABA975872F0A9267A28E44BBB2787712CE3CD69C6D0DE0BD609
649FBBB3F049FE4E20CBA5D8C08F62BA1738359054C4B3B7D78A82D9D6D54932
D5495476440B9864E746FE11C2DB10CADE05ACBC6787BB5EA465FF0CFACD9BD0
5E668FEA5FB6D820FE9E6F5613F30B43AB82895F7B7AA7B23C8C730543071E48
3CB9B1E4AC5CFB2C9F6FC1E7BCAADA48E5ED3A2BA43BA9064D59C171AE87BB22
E4707BCDFD7B4105F597D9EDF534831D51265DD59CF4A57E85763D5E67080D28
43D44A3585E078615BEA476C882335A9B3543205DFF5A31866735EB1A931953C
B0EDF31F4C335A5A2297F5A454645FAF868438E075EBD8AE3E5687FAA9165CAE
AD2464D8D80FF6C61F4410BE7699FF18A446CD48489794E223CE3A1F5A84930F
AA87A50C937FAEE90159AA49D316055F12C89AF17686542CC2D5F3E823853A77
D52D087A2188BC928D35A4FD452D2CA7D0CAC3E8FD2F167D6A9A21E14D5D21C8
2F4B113B6B31536B2C3EEDAB39B5B72F1A7A6DF7C2FA4DC782F71693106B6E18
E6596B98C2483705AA13715DDF6F7034D06A96226C8A5AE1FE4961C2844204CC
485B2C6537FE826BC652BE2CDD01A6B26209340B0954E5B2B9619BF604E36071
1B5325370239122D01E26A9B8E0F02A964893A4F7E0381F13D790B5FB362B884
677F0667951EB81044DAF53C9E79FFDF595AC3132C7BF0E66D293883E33DDC71
117EE90FAB89E142758EF9A36F795C8576B0078199492AF5DF569923EAC5F8E3
C4092ECC0A7D1BE64AD1664CA415168A8F8AFF28ED703F7B55B6097E73D5FA10
57B577814B378182ADE63579BB60740599FEC858FEE58AF26122C2D5EC5BC66F
C129A00CF2359CB3ACD28753509EA7AD0D2111E6FD77E98977914082D89337BB
2B8EA2141B1DD5E631CF879E5FE1609C8111412825F41ECFCE0BCA12B0D2FDB8
4C0686A2193A1BF363855450A17C8992099875EB2CE7ABF73485DD79C77BD025
6D6B5B7FCFA5E7F8BDC7A644C23EB9B4CE1751A5903126FD80BD493627782C24
ED12F503CFAD5EFC9D6CA122FB2077E554C9C84A1760A73B51B08CAAEFB32B86
60D2759970B4CA07D463E72BFEB04E09467B358FB7A94FB112C6681EDCF7FC39
90ED5A70E3777BF95B5A5190E4CA5CD7B1BB36A193F02323574D9BF38A1BBE0C
7FBEA0D6E737B06085FA28BEFCB1F65AF4CE70C31C2F992ACAE52817C005CB1C
8E68F659837687EFC5401F4D3E75A3B587ECEB85CDE8079FFBD808777D204062
7A80CCE3240D254DA1B7A18F0F307C0782F64A21F7629A7354F09EFC2ED5E746
759CD77594B3BD04E8AED985B34417C0A502E90D8004C84A11C0CD33217435B6
8572472C3D640582C97265DE8E23CD9DE40DC20E79594F1CA14635DE5DA05D2C
5C531C39169D0235186221D63F342C1C659CBCE138B85D6EFEEAE10AC5CFD56F
18594B31B67F34B3BC115C63AB51E8524B10A0DE37EF1310D00F0352A0428F28
CA6FC859BB3BF9EE2A6404EC00E764671E5A5F3E4920E3E67D6379745A41552F
95F7391909D365CB6242041D6C1805E04BA15B381E04E1FBC905F6D83BFCEF84
E03C60BE7013F8F0A7B08626601B0A45505420B08F7769CCA3FD911D0EABC844
02884CC2D620523FE203548BC9FB4F83D9CB7A62C2C91065B9F1DBBB4F6812D7
463706B28E42AB082546D4F52AE25465F3A34E27E1A796C27506421330BD20FD
701BB5B7A8462E313537FA6D420E78726B2582978E90CC5D850A1271D6D1A1CB
96C880A46318FFC49E33F19A7BC912EA7DAC205C33CC2199627DDC466AC07C52
6EB8137D99C34AA66568CC41806CBFB35510507E1BBE0E3C6434F4515EAEB45A
2157FDFFF5C1BC4104D17E901EA21F83016CB767A0E18A5A248EB91A682778DA
E3BF1DDC9567902D288379052B29EBD566758225A0F71C88EE058452A58FD051
5A7765CD1F06DF8D282B210834679B3BAAA380539854D2B5EA348FC8A62E1E05
C0D2379BE769EBE3BD650C59CE04F0F19EBA03B57C44ADAD2D1826A5B8453A08
B2CB0D1B87CA8C029473E9B93CD0DD2743F16F68503B0E54E69409060AE999DD
6EFFDA92D2CE187EBF0399344181928D9BD14ACD192DB24C0E1934E125444DB7
23AF9E3EB34E53AA54553A58EF22C63AD61CDEB4C05EBE7C8001F7C1277068AB
D69C65E6DA50F908F2EB9E6BA8CDE849B513B45890E34F7A45B3ED8BE20A1489
2715E82155A21325A524D676161BBE7C6CFC31A3BCB88577ABA703F2B74CE0D0
46A4FCCA84A1C4DBF2811D2AFE01A9AD4C36EA94470EBB554C6BF1C4E758251F
426D115E38217D1962176A13C28389582B2DD042DEA6CC0A6741B8B61479F818
B5F174B4787E7ADCEEF0BABB903D3174C51359CB330CA669ABF06A4A56CD4491
F5AF6DDB36B445980C018D347A72F35D3F43992C867279B94ABBCBAF39807273
4174C6F72F0A96D0CB2D637E00698868D58256F9C89FF4136DC335CD0E754B66
EB8ABD74E57BCC2E6A0D57D3BC533B53D5ABE9F931E0A945FC391E5583CE3BD3
6E14696E4792F871105CFC5204E48033CBC06062354DEC431D48C4FBAF5797B7
A1374E2AE4156A628431BA1D543CF581C4E7C2E8FE553BAE20B09A6F203E3A2A
52D7235EBA31B4CE7054C3C7C3FCCB3F3FAE633F1880D27C0F7D73A8EFE1C448
FD98FC3F4D3C1EDAFA772D1AAABBA349B7D5F975F9A46BDE92183B5A2C590D8A
F49686C96190408993D4B8B345FBE59A9435A88D630FF73CFFC74CD7D54BCD47
540F422A52B5F87EE9CAAEB4FD8F4C0729474266E558526C7FF1D78BB22DEC6B
12405CDC3D97531B1131F2A84004141BF35A51B8A9074642013E0894BB31D3FB
54EC8E75FC7F067BFF5A36DE3048ED4B7ED167D49B94FDD9B83917DD889073D2
26C1C64350B38CE55496F349D6813E51CAC3325904D7EB38B80E7DC620BC5444
735B6C34DCCCA47AEE3897A41B53E8B5F6B59EBFA672200F3CC463F30011C998
5CDF5796F9B456A4C624C54D792C01A1EBD793E6A6B1866E9C44511325700CEC
2ED7F2203B36F3B7AC37F415FD857C050DCAA737939A78D5E3C6199A958D8C00
6078789EC3B2F7E23DF36325B47C6F93FFEC2ADF6BC1036EC8E5A6A8D5FF5CB7
95D990E311D34E5D580A6D41463A655BFCFB7B04E217FF3E776A3410EA4152D1
D289A66CE59600933C80FE4AD71DC1A10EEA16C04CD4808E8F09F32B04C76C20
4DFA75B6355C4CF69CC0DAFE891B330C22385745303E4E70FFCDD7F378B62DB4
3CA4164A2B7C9826A137B3B3D3E4424F73DBCD604BEE6E44747100747C7353F4
D4473F2F85EBBC8E87FE54BEFA7692F09F210A089DDC79B4783E9549B6E792B1
6BDB70C02B6141BBAD87731E5A3D67B72CBB75CC19A5B7D120E12E04088DFC4A
3BA610E2BFDAF2793EC13583FC3727D12CD461EC6C3DA2F578041FA1BA0B95A9
91B88A716BC01156ECCF8D2B93CE775DAC184A6207DC33D57A7B0C43E84474B3
6658A4C408DD9197FCD7A2086730929B93796C57E5EE43BC4214C541CD16D1EB
17CAEF77197F401A2AED6071CD970CA57BB97884A68E89A2D096D06378634844
A673DE564B24CCEC5B0C6F3D4A573D1755569CA30F8B4FA3BEF0D8EF2F8CF637
C22859BC0873DB1493162CA306C198E8072A45CD449418BE36049AB193E541A4
59C41D1FD0709104EA7BCCF30A7580CB72C3603637227B30DC5CDD1AE528FB70
7ED9526ED054539B4F413F33312411F9046C40004B1D386C6DCD3765E2E4A835
3EC4D8A72C62FB1A602DAFF2804AED6C5190796B739E159DDF8F21EB6045D4BD
546E951A7CAC9531B7FCC3D86033FE3179C7A9CF753FB575CC5C4913626CE0E2
9A1DA622AAB8314B39F19E6D68F25791C683893402EFEBCC6FC9BF98C368E4AF
AAA0309709D0AC663381CEA64C23B6F22C1566065E80AE6C8BF12BE613A02F74
0A9E6517437F704592DC747D1CF102C0DDA4A6B2015CB645322DF4DFF7F4F2D7
97985E4C0E5581F23DBD4DE83EBFCA01F276F78661E6B92285EC12BA425736C0
FF218A1CD2477B1FF3A24EFD215E25494C5F84232A5CC77370E52DBA18A73402
A90D5161A3771C4424BB86F261C5C05AF821449BD39C233420310E2611CF3ACF
74E2467F05F749906FD036CA12115842143A9CC6DC897EC253DFE8C21F161BF9
12FBBBA15B3A7B228C77915E950D18C3846587279A40293BB2C7E481C1616EC7
62AB3E525377B2DD19BB23B6D5CFC757FDE6E115A77434A971BB911EDCA7F3BD
9C94D351EDA890D2156F7657FBFDA1084BB953EEF6FA3A4985D8FD77E97CE61D
95BAC8063625F4B5DADA031F0FC780A65D1AC7EEB2025E877C1A8C2E2E968248
D5B7321F6686F5CDA398D4ABAF195892B07CCB056E879A76B61B4A077FADD338
6A9C6121BCB93BF1E475ED8EF603469F4EE7867E18EC7BD5C1FEFF382FA72F91
C1E77310A486AA7885F72C87439A2B67DACB7EFBF0A0829375589E07435658B7
73F769E3B397914336962380AC93E49CAEC1DAA7F016221CB34AA47312C7D6F6
2216DF64435AF3381B7038B1F7556D469B1D6C887AF119669286327A43B0B2FC
3E4221E13373F785ED0F512D63D03DB54429F4A99BEA9854F0D7682507DC0F59
3921593D7EBB38B8168834BE846EB79A1B73C17D5E46F4FFDF3EFA75E462AF4A
4089FD0836FECF5060262A7BBDE85EE0EB6543D97FF636F2F8D6CD8182741BBD
2A048A2F68DAD3D67133C14BF779008A94251165415C6C1A4823A1C828D92F78
AD703C730CAF7AF754AF74AC6C0E9EB78AB7A86CD3121A69EE34B0C6009509F0
DCB1E121F02C8F7C02308462A4656E955D0F781F06F91005EC1E7684687EEBFB
E3C563E4B59A3BC9CD5DFE0484F2167093ADF38AEC7F1A4649452A5AEDD23F6F
7709C1A49BB606FDB626BB62125F7844153EB9ABBB4BEEE2CE598ACCA0C25AFD
E4A731D7B62A64F986E63C40AA159782A69F34920EF824E26C72B17DA9FCCDF8
B313CFA6BC5B5E4B590B1DCBA76BA86CDD31FC34E792417A2667D1281126919D
D2DE760B1FE62EF12699E1EA1AEC746CA26798A57357BFFEFE7CDAFE49AF6E51
8770EEE46C7F5EF3158CFA7B423BEE68E3263C432C2A205A05F26287B8AF1A84
CF5D78C7C8E3C5B92FA4861BC204750F1866C619F06D536F1530E919308AC2C0
E70231B4991D691155E63CEF6841C49606EC6E2BD6FEAEC032F74625E1CA6BA2
C6083364A1E4224030829BEA3A4DAB5A7AEAB1410253B057C1D77F8AFCAB9248
23CD2AC9DA3D0FE5BE369770775E23BC5EFDB767B94B6C0DB285FFE7E633F5AC
4B47FC8A8941D472D6351822E0623B8F40EBFB930126624EBCD533E59CDFE0A9
13FC4510F90FE0371E013CEF24FEDA397A5120CE2BACB38F6CC99EC3850D88DB
E34B791A70B9B709D523272A3137F50C9465564C1B37066F0D98F44524D7CAA7
D5AA6F00F9A23CF370AB95E118AF2DD3DD0CC446BFF622C372AA8EFF64BEC027
C17F3B461EE1E71F2A4EB776B2B6FAFC18F7820062DF246EEC0529F95A3F084C
88A290D27FD58FFA5801262F869818E4A0A04C3926F0F6E46767DB78D68CE3C6
7217D0DAAFD316591AF99A6BEC7D1FCD33995013C87D1D1834A9AEFFAC7C4383
1D5F6025FB5D81F753C07F7B94FD290F76FD4BE13AC0A14606F3212DA2951BA5
49BECC50FD589C4477F2A87B2AFF6E06D4095CAC51D79351393BFE12E45CD02B
409A6E5D14A5B6365CD7061F0B17EC9B53EE00E59670E465D62E653F74C0F2F7
7409C1BA64375DC95FDBBBDDF203C7D9738E03D9B5703EFA9A934CD59719F708
D4AAAF32F6AC741CC91BC4E49A4052C7D8502433AB134C23E5F4BE45E6B112CB
8F7B60E57993CE6B5CFA74C6A8E830EEC89A3862070B732F31FA820CEF5C9C68
9769868AF5649A57AD8FD4947E2D29966DCC031FB5B1D05E0EE095AF1A996582
EF1F44BE94CC39B3A2A170042F19357F24F8E1DB9613C3688C0C81FBC3770E90
66BA36D401CEFDE3B08F68A0FE93E43188F393389FC6365F6E022BC9E35C6723
2C7467C699C51AE7967397009B51928E228A72250943E0FC3CA8D59B7971E9EC
4E6D75FC34BAF7DB86921FFD463EBB37C170E37F4EDB7B60B6B93D225AA02372
5809EC3E0089FADF7BDE4F6BD701DEE1079D1D9FF3F8B2797DE1F06C3C3F1071
4BE14C36D219F16A9CF9C8F55FA78C8ED20B984954FB62796F679F89D2775A0C
99AEECAD4AC418200B80D0EE7060D8ED08A36A3C8F65AC49D141081AF290679E
2B2F4D33872456AF35DF0663D6EBBFFFC81510B35F31DF71F7568FBA5345B6C5
8D7819DD79434D9A3EB929451EB168362C28D0A4166EDAD761E12C19775D74B2
89AEC76198EB61A09F7BD5FB6F415D2BD9BEAEE597058C23D84C0F13C40251BB
0EB342018621E772B50413FDBCB65808681EA7E47AD6EED615E12C231318052D
A7342637F7146DFD42DD73B69E326346BB9A4B932A64A30476E4E6D361CE39B6
436B4378EA291FF443DEBC65E05CF9B2EDCEAFF183EC2AC64676F8BDB163E09D
CF9D9CE0877CE05635DCE742B51E46860AB8316594B2B414E6CDC41CC187B9DB
526226BCE9C26F59CE07360D944875E8BC48BB36F2B67DE701001CE7E16F5ED5
781366F918EA6DACC80A659186ACC015702D255DDCC68A9E4E0A1CF56E5101F9
6D07877FA616783F693D5B05E41EE3E7F2C83E4612166C621D156D01E64AF8E2
AA094FA5E2FD6A63153A7C14B98D2D657AF880B8E5C0FE0BBC461AACFDF87AA2
3690D186BE3C6F3208F8FC695416B551FBB5656F248F026AE036298CAA4202A0
B7ED06BA854038FDC18E21BB36FFE8F0B445B1803E3C1EF42D93F5D72153C5FC
E9A572AF1E502CAA0B14315242353014A4FDA7B959A8DEA82B3F3F7DC561D7F8
52D0BA0F8122F65DD9BAD946095E2F91601AF1BAEB8518D441BC5AA2950F89A9
C156D13A7CF9C570D861B8942AC3E7CACD735B0BAFAD13019358B5A23DA29319
DEC324CE5073F325490D5EDE3E64CC5BAE195CFCCC7D339CBF2A04552066E5E3
1FF1716EC5F2D40DFA17D7C9A59C3F0774DB5FE74E38E1E482926F35A7EB4C39
ACB54FA8DB3DE4653EF961D97EB9B27B1F225243A04882CF1688521FC8B47D6F
14EC43CECD5AD86BB9E985C91E653FD3BDC8A514568BF6FDDD4477D0F1FC5E9D
64B05618D9B561C1FCED3AE2A61305E25287C2DB0AD0657DD7BBD3FC6C156195
25DE9C3709304441FDD0C8DA8A9D0A2E24242DE27DCF245CA03410C9647FC07A
F955793D3EF6A40D7DD34F66B2668E31A44262D42DC5CBF898AF5891402BE5B0
F21B2804364E1CD9761822E12059D509B658BBCE39F9C548E655D710716E65F4
D3C33F0306F17E48937D94C7C09CCDB91ADBDD260A8E3E8C76A39DD9F14D88A2
6787CA39A7E9149E19D75A61CC8325EBDE1C74644F2660FFB68F957BCB0B20ED
A5BDB013F340DB5C58ED261FB119040092C4945D41A1FDE6898E77F019372841
D59981077349D7FE49F058956E09CE2F6CFB8E027C3B5DB387C3D97FD4F00F00
4C44371346C2676CA873C5A4C80925BE434BD0D29C8FA71339C6A33C00950FBE
899D776FD7699145A6647D739BDC1B814FB7666588AC162CF6EA8AB8348D74FB
B8DE054726A38ED7499608B250705355CBD6C504F2CB2E8087A8FBA1204FA7AA
C926ABE5D330FB2B0EFDD9A572A5A34E035C4FD1DB12C21F4A339624D91B1DF1
F74A620ADB47BC81EC36AF2D99DD5EF185CB7D36E8631D73EB9AE5B67EEBC8EE
88DF88DF93CABAEF432D557202C5AE5434109DB369400CC9B08E096887FDD5F1
56A4523FFCCF438FC78272B00E63DE667271C923E8057FD5422BF0654134DA01
759523847F1F940F3E5B86E90E1F6A7DC45D32FE1649697D403E230BC6A9A33F
37BAA10CF8F4DAD04EDC3EBCC39948DF3D9E98E3C160F7A0DCBD5315C4B70035
8C131F20ED727A2983044E3863B5888A1CC647574E6705AD9E0E1972EBF2A9F6
EAAA3EEA7293456F7E1434BF79EBB7365C11F8774D66BE43785529DA661EAE22
BFB370CC0B95827A2B4B6A3403C0B2E73B9B51C35E737066229312A08E3487CE
E485938F1CA8B28C9617D1E959E082D0904B04D01A5B123171A69B2D42FB4469
522AE1BE6DEB014519D9FB4197492FCF17BB733A4D4AC8F45027E89EC4355549
BD224F9B9A300D33FACFF45A13240A8DFEF6AEED89448E4134AF0A3B55320458
A62CEDD5688D276B55610CF5DC34763D59E7187DB45075397B66F615D7B2918D
969346EB4CEF872AFA5C4D47604EE8514AA2FCBB73AE4DFC1E56004F5573FBF5
DC8AC52F6D09DE2CCB93C85819DF14C1FF5823C35D55195909B820B40CBFECE0
2A66479378D5473B447F527BE3B8CFAFCDEBD06652B98EB4DCAFE9823924960A
4FA3551CA71F65EA81A684841CE8828A3B78FEE2AD1F76C39265F33BC9C17E22
9FCBAED8EDBF50D1E875CE5D4E2484912C58DFEFD65A77FB63A4CBAA5AA28A1F
51EE699379D4653D2A72C54D3F41EFDB4EE75F920295A4F9D5D0CBDA3BEBC3F0
0686D24C2BDDAF49525B540DED6E8E54CF5D470A7C1621EB295CC5FBCC1B5847
ACBB806B503DD6FE97E2D5C1960114CD9131C5FAC6BD084AB118B89EA1C7ED93
87DA693A284FD65AE53B5CDA4FDE736C2C4BD9719BE86F753E2A9AF7AC4C1B64
F515BF846FDCE3BDF7F68B9EC039E518A72C215A3D7FBFEFAC26928400775D73
FF50EF171AFB8955B97EF5A38930DB26BFE58456763C7612064A58B0AEB455F6
5446CC7602815B02FBA5C6C85CDC54CB57DB18501963CD7B888ACDC2E48A8293
ADDFC05D8D3A28F54C6D77A1553D4968F5C0EA79B8532EA8CA43756AAF2CD18C
8662A3BD04EE2E4953FA8CE67B2A9062A77BA3EBBA278C590F480648C93DCDB0
1CA667DBF50E21459DBC37CE15A4D7A849BE24D02AFF56B18DF289E7F0420EE6
3F286A2AA2CD2C5395D66C13CC9D8A75F3EAFC1572D2E56FBFFD11475678535A
1031D43E6987B4F6625881BECF7006CD6EE5E7E81CDEC1DBA0B69D175A43E7DF
5485720DD69B6384B36162044D73C111DA1B5D026A898D5B18D949B07DE891B3
DA02AC598A0C83FDAC994F430887DA3FD73A04A5488A8855C44CBF9E0F64506A
4D40BE1C72D7A5AC82CAD13A20FC5BD45C80C5C5AA8D43627B72F283D35FC0F3
0D9151DBD64562D8F891555B9B5AD147DB6B7C6B876075F2C62A75E013782443
3ABC3D033A5215B94B58D15F7E70F3ABB2F92E820D6B10F6A6A1EC058A624DF3
B0A31BA12B87B0A6DE4F04B1C5B2B3FA3FB57FFAC7D1355734AA20BD98EE9CD8
01F9AC88FB714A2B2EE39C5C4002CA29071EEEE4B387D1AFD1209CFE7A51138B
DF766535BC9B103025121C1320E42FDC935C2F3565588E565877DD91001D870F
A5790DE9147FF6678D11E1288E2908D5645BF8CD5AECFFA10200D620DEBDCD9C
F0AB81316EBB00F1BB3F573703D0E9337E600342DF0EAE518BB0E2F1D54D407B
22406FB8846750345E79E0705F6A8C51BB92DEC39A134853C45E77576B0BC4EC
C10677CB08744B518EB6C250B18B46F0411F5BA506D0A1F8C46DA61381E25B91
E56F229D9D44037FCE6010C7CB25249BC2F4B01949391D45995F15D58CD9B298
F5A302F9342C689B8A14676E19F542C71622A2015639C4656C57CC64D1EB9898
5CB644938C0CE8A4B26558DA6B25E6DC8ADF27492A93036BC69F80C88BF52D49
94C12D8268B2CE7C2A3D70F5AFF69E7572348C684D0356343539EB7B610D5067
DED4C31F9139552D10D21A0A352490B6CCE0AEB183399E008549578A8AED176F
B715430C145A3749256619980A8A7254A428AC7D36E19F6C5140E04264DB09EE
90040F51D17F623BE7573EFB53B235D88140B6315C6D4B942B803EE3FECF0050
E81CA488907B94E49AD9E468512782F7362D9D6518C78CB5AFBAB7A5EC9D2481
B4D54091348FCFFD9BACC0E7A0330E2E60520C5D9CAED67D98F9A5F1A8A5CE6D
CB2AAF904009FF6013E3EC315D5D83A4F556014A53DE82788D01661423C5F9D0
7CB958BFB9DCE8A6B0655E6A15B0280841C13985D0F0FE4DF5F2A44A1F6CAB26
F73EE8386081A295BA893CB0B8B02BBE5D9E632C60E47334B3755316AAC593EB
ED27DCA4C8589ED36CB1849099228A5ABD379E756118B5FC9ADA17350B80AA77
9B687C3432CD21DA1B3734804F72600516686A86C47A21F27A56636DB88B03BB
A6636284154F5EC9A3096B424B3BAAB1DA3E6FBFFB41E123EF4DEF7C61D1B586
C2DF5D0ACE4743A4F3F81244A89F8A8AB12F96DD1612ABDAA3B382656151B3CF
67609226BF227314936290B5F312E850748F39A9229A1BAF8F64B7ED0257A6EB
42BCF1A8A6A9FAC995DECC60801C967C987F23B45ABD57E03120498A3708B6DC
8EBC2E46DDD8B7B1EB89322E34F1AC49F0DA6FC7511554DDB3A0056EE872788F
DAC6E52C0576EA01CAE73002F3CF991AF88820F123FC8405524F69DFA720EBB5
F26482CB81C036FD2EC92DDBED48C9DF6FB531DBA94796A915C7E190567F0BA5
306FEACEDD21F49D7493B50F264E17F6D880C364A16C0A9623257E716871B984
3F619EA34134EAA26EEB11DEEFB780FBE064E1300886F0FBBD4470618B126135
8A03D67F4DE26848D7C44FA3ED66F98A85FBEB85D10148D07C1EDF994BC361AB
4C7C937D8AEEA46C135905D27D583132B68AEE779AE3F1B6A9D711A3CC4AC3C8
FB62918D2C7CD9B3F434C3A771C9A3EA4F0DB66603D63076F3FF30A101E3B16B
B3B81950E36C4E93B36FF676A189574FE38EF75E55C21DCFD0738D2A9F90E4B0
EF11A8AAAE0FF934F8F9DF6F86EBF7F70292C0E57FFE15972A341B420BEAD636
04772116F1DEDCD2D9C9246CC7FB6C038A0EEAAAD38AF450037EE82C8E780389
AC4F92E2EEEFD6E73F1867780F5BD1185069DDE6D14BCFBB3B3E4993E274A845
0D15C35BA9D7B664BEA7E434842EC91BD7C3711985A3B338E5F469607461D239
70BB5940EBE7CF7E7510348BA77231667179D57CF79D5D551E273CCB3F4ADE00
7B92648CF97D89366E9539FAF5F8DED4175E390A127BCFF68E776F4A4070040B
CC192C2F0C3B2E81A7B58B537662940676554ECB21BF835704202D3E28A19543
8F73D49BB6849E5FBB167FDC47185EE4B63FF5ABF3BC6B2C028864FE51369A96
4024BB8AC7DE5B64CCCEA57AE8E9C3492BD4123076C0D3DDAE335640A7472707
80AFFBAB7C1B21D34DAEF407724D439DCC599F831B86768FA29B8B2314A22B6D
F885D9B0BD50479F9884032998FA807F28227F2E2A32D91911EDBF4C775D9F10
BD312BD7DC2B7DA5894374ED9FA664BC07E37DCE02AD80BF6A882E99ECA86B4A
F1A081B8EA09254B26C0B5571A7A3A0B93BD8DAECC09CC114FA6F2B060542F3C
FE935A4753B9772DC3E610147FDB13D1D6EE176577095EE3EF152C4C4B8519E2
6F999F821F105FC5CDE98509F30A0547C7393D9E84EB886FA7533DB7EC915C87
A3D7BB1B7B449E7DEB811A62C0C97D88E370A5D23611F53DE05C26BBC29B7D97
9FB0FAE2BE66F8051967D19592A7AA4769F5508C78B9750012DD07DB10B5620E
EA573AEB17F919822A5BB11AFED5A8DD0D9E845C2B294C8A7ABDCCB585D2CEE1
E967D5A7DA4B74EF4CF97FDE0089925E4494526DBB8B32C85D18130F581D4FA7
4A63604D74544E1E6A39F0CF6363DF0BB9AABF46FB004237468B3DF6BC437D67
69FFFCC0BA58E2692093463B2B1C9B251DE8527D59013617820E5346BDA33E58
DF1FD9767AE20567709D83D37636E6BC32ECE8A3086E2C9CD34D9A44333ED875
885B070C39C31C78D5EBD7359D881F7AFCCFDEDB712BF11DBF99224447B8F428
DF7E371FBB9575E4506CB5DF4A3A363E36386DC7E33563927325D7F5FDD785AA
4788A562CABF8CB5B63E1C1CE5526C4368B92391D844A8E420EAC5A81822B644
33EFA7575986F7BEB6C8341002C60E2CC844B8B33DF44FCBE732B771048904BB
D47D276DE5E1281B7DA5EEF81A744783774A19DF9F7E9E832B7A3B096F36322D
16CB107B34B4DA86280B4C5C6BCFF8763A8E101B96B9FAF89D5CED49DDD1755D
A2557760A6A6BE3451EA8D93EF7EF098B94FF7B7F01932171C9BA6E5606C978B
B76F32C12BD94AD5777197AE310723392AFCB9A646521C1194590BE55A836872
94CE5A74B9ED551AA7C068173784D954376974B50A532CB074418A28A8FF5F54
24F2CA4BCC9DA18D7F601A3BA59F14CD1DCC58DB0B98983A656067933BAA1705
7164DDC82551D0E7428BC1A03BF0260D09904598026227C80A36651DA57148AD
4236758E0766D330813BE00F1898B62F4C24108890C9C97953912D399DB7FC3B
6338A4B08E6897A460964EA587C17FB0637D66A62541C63C589112E42FB01F5D
430B186E54AF25FB171B939F6C437E3F6994E99E8FE0A80622C48A18EF39BC54
8B13FDDD5F7CB46C1525A0664D17946E70377E3C8E27BD3B1B2377BB8E23877D
90606233CD47AE021968BD08A5F5E4BC9CAA44ECE86D378B455C190963DF9749
51D74E52694943FF3FE6EE46F86907E0C8C232B22442F77B9843D0A281E3E002
0EE6A21CBCA358343B0B1CD3F5BC32979FF087795E269524A607E1B256B588EB
0C80EA5DE5EF91B798F26F14292B5CA059AD0331E770D6A9B3C87E308DEBD5F8
78DB382929C22C9FA8F17440D6750C6C498CC3FA8D54AF92085DBB6833C4E92A
AFCB5E9E8A8A4D2D52EFAE2B0B0878929DEFCF01038347A1896BB1374B4373E9
80BA48125FF1E331676CEBA568D192B7C66765C25CD2ACF8DA58C06B2DB01FF9
550E1365418B76B796F947427D9A27322F476F5610E99361E196F5F2C1DAFBC0
B013868B0891A566701031D9992B53E65434AA6F64D7D5EB49B35C0F69714B3D
D6B77BE9ADFF593AA936A682B03730FB9F42449B8746CD08C0CE097A87441566
AC2C15147C856AF78066F9CB302FBA76172642E9573310E5FE4E5BBB1F19498D
BAB74FCF0971B645543C617541019A30139ECDB576A5BA94F0BD0D62A22DA2F4
26A6281B412AC4BE64D4CB5549D30E846B7BB0C527EB2173BBD4D71B748F6814
D3086ACEDC7165B02EE74AF09AFE9D75AE2BF6DD93136806A9314BAAA7061A78
ED5EFE6AD460D09D3381D464067991478CD587D085F6CE82067DD65101266EB8
D8E6B27BE97954CB1FB2B7AB7A8F5CBCDBAB2556E4527DB46C9E19A9C0D030F2
F68C4521778CA4716475E9840AC287AFBA1FB9F95A1A86C74C5F154D5CE516B5
BF0F880872FBBFCF32C682871220F935FB388407492D852AE734D3CFDFE2DEFB
3C4C3034442E16F201C170F8AD1E92FACD42742B2D7CA078043A5AEEE2CB35E1
99B2DB4E751BB6BDAF71CF528C880FE62503D2CE4857766A5C7355E63CE23FF1
B2AB6FB9DCA0CE77D4F816D9B7D5BB807A79F0277B51E619839625B05B274194
F2ED3674795315C06AC409AAABB6FDB0706A530FF3E555992E9BCBE8A6607E08
EBC314DE22BAF340B62D5A13BB991D5FA86D3148E16DCEC1DBDC08A7C231EDB4
EA233C46BA909CF0D7810BA347AE0304834306D72FA75629E89CA698100F77ED
6E591474F658B29BC04402B94BD89A79B4004221B367E322ED3F6677CEED97AF
57AD2D0BF73E1E11FDB7C1EEFA2592558B46C05ACDFE711C102B0F72D91CBBAA
1B56486DE070B377DA18D0BD3FB2E72949D53E5919B4D134B4EE1AB56894223E
A883ABC05B9DCE4B3C9C0F1E3A661E2DE1D33D5C46FA5FEA58E991C525AE6E8C
CD51A7C4AB52CFA9516FE1637B9E9AB2A77095F5DA1B1524F087DE372BC290CF
E3A292977CC77F3A3F6EDB9D094F350489E106F867DCC1C8BE0CFB09FB73A1BC
76D60A9F5206FCC02740E0F853F48B7BEC8F3E2591F7384E66685C48714A8403
34EF2A6AFEF35C3304FD1392B1CF44C80EA0165DFD88CB8E7A438256AAED6B64
BADA4B7007CE51F2AD93E4B30767F9DE272809A295C2CF71A3DFE15D14F1A1AC
45C28ABC12C115CD30A9A8EC86703EC4F9FC142E27FF0825820EDCC3FC31046F
2FF63B99C851419C55426EBDA098CCAA51903B2F23D2E3426A04E9A7473F5193
A8CE8554CE7D135B5956866F7367EB77762F6B474491BF89633BF4A2099AC1BB
D30EC54CB17982AE4C62F544D43D029ED86C08BC6905521FBB338C949897961D
16E76AA08A8DCC6C49B9A81105F4594FA940CE5C67725C79D57A486601A44DB2
F026F536CCE8B52E94144F10E97FC163A0BD786EE287B753AA5DEB8126FFD92F
575F67AA10A32F9550DDA4F892A7B97211697282037A275950BD700ED01E80B1
61E946881B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC13F154032A
A1C45D1A3DD9230A4903FE5523D6EE9BC66EF49B2617BE3C1AEBFE2BE26C3778
EE778AB577C5B9E476CBB0EF69EEE350BBEA9712CD97BB2821612964B30B01E7
B08AE39BC8B715A5C11A351E060C8ACCC73F7D8B3B33CB35844961E68842CFC3
601BD2FED84DC32546F253D218276A5D0FA4EA5B7097CF596003D3617599B54F
1906A591A51E07E62033C058BC757D174B90F05D39F5768E81C9D713F998B6BA
743C51CFA8255B90F4E82F3C619A92AECE2660BD3019B098629A171AB308C6DE
05CEF99710AF2F9E27704C61242B4B1983A5D0B134C8052495CBAA9D2860D28A
6887CEEE576D4111DBFDCFE9B3458F27264F85501EB8C86C9A1BBDF3E1C9FA6D
058BE17FE12B410940A6DFD0667DC444D6342205506A827D20B87734D27AFAA0
23B97C367CEF276C725B73F6E2282EF693BFCD7FD07158CECA1F10A5D75C8B02
FB448272CA2826E882D4FF6143BB5933AE882A540B806AB24350A792BFB5004B
54A8631F85FF8DEF675A72FA6DB3EDD6C586F5C0FC8BCC3D355A4F3C7BB8FF01
13F574C1BFA5A90471B7D471C3BDB86F519E59A0C711962F9EC04E63E90381E3
A52638877B18EC6582059C00D8FB590080B9F865D19D39B03D577C85C3A6B25C
BD5B84446144E22D8BF12DE44EC69231F93CFF3D70D84F79EE7A2B16F6E7154C
5700378C724797BE7D5EB8BF9DB860D1A3B1D4E0739E94D61AB37B6A19F959EE
20C356B2DA3ACE94E43ED42A06E762ED399892BE451C923DE1BB1F1CFF7FBC47
340BF6C117E621CFC9E65D46763364B28BD51FA22EE09D57EC86A35BBB05098A
ED54585CB5D11B12B3F992F6D9FA3E25086393D9C42E4C00AE7B6B014EAE4513
4AE34CA73B1499B395127BF2453FB7F04A266A9049162214CA44A7392D8E791D
5EC029EA422ACD7F51F051E0070DADDBD3F1189884B2F48FD7E2FD12E40643FE
B009049940F99DD80DD545C41A52C1EC6CF5AB09BB417C53E03F038E7BAB4C52
D67CE0C854A7BB1114A2B8D6D643337FDE0A9B6AEEDA82D6DE48067B62F46D8C
C04C6E35D6BE15470AA3A7F8445ACA65D9B447685AC169AFD69C818410215473
5D0828A9463A58710EF1A3BE6837736D765194A8895820176A491A259B012DCA
DFEB8FE96C49A1D803C4EB8020B6BAEA2CC6549D68A478E7DAA3FE206417D0C4
3C21A8F8110A6F1BA6FEBA93505EB07154DEBB52B79035787CA842053C119ECE
E2F49FEDA5B3262724F59B94B56DE90283762771725A7E2D8833C42F9CBBC2B5
8D97BFFDD8F86DBAB41DB6C1148CC0DB284ABAAF4847CB69711FE424013FEB92
30F6ADC824F7319AB813E2A1EA2C7631E7A09261F9C20B966BC77041D2B5A2A0
9236EE55E1C0F1D7ED62F48313087AD2D64D8E623B5BC78254D18E884DC003C5
E4C05F208D774C571AADA4A81C2F0749C77F48EFCCC5F40AC534CB75A8A0CE89
D04276D434E61940BA24F948E80C51F78E246AFA81AF36B4369B8114E1BDD480
913E76BE4F94D9F38EE5176944ABA62296A2D3EE7B2BF979837EED5D4E43E611
F688EFE56186D215F35C216C5E1C48527544E28F808A5CD463A24CC0132FD9B7
B437FECC26324BACBC1767C7920FE0D18A619F3B355B53B61EC3285134121995
8E99FEDC664150D66C7614AAD9EA02AF73118C200C779718E12179D360234E5B
8B2CDF5B0D0FB1E3827B2A9A6426F6010B1050C5F50CA931A8AED090215DED19
39709E67CA767DC3D289904338565C80D200341317397F033E149A9D72170B2B
AFAB86E2EB0902AAFD2B6018DD067CD66FAB59EEBD89E859357D4DFE4581F217
9B1C26E810B39CA3288B387D3669F40E28F9C32E51260FBDB353DFFF535A7E5C
6F3E44AAACD89D27B722CC3F056DC73B374F06347BB377305B3AAA52A8D0EA89
37A4D888FA4FA477068D498DA771777E42420BDF18D490450757B4BA0CBFBB2B
6C9C04B93EC6CAFE16B666DE7A68E302AF93EC3F0E223987BFE9906D54492629
A655B8E6AD172D32E723B869E6E73401BD72B8CBABAC6B5C3F56E786156DB450
289FA5748CDF54F4AC61F328BC029532F4F4AEEF704A5E8F6E9AD1631F9E3042
03D2918983F8A4271DD6C27CEA2D32C05BCCE0BE45829382E1898029714D5E07
EA8012CE9BFDFB7C2B760709827014D8FCF40A8F77445B3C774A1A927169AC87
FD53BCEAF76073E374E63FB4EE8517BF470B578869757C2209DB54FBD0831FCB
D6BE52EB003921B80D87A0734696CA2D56AB137FCCE3C0AB2B96567D0575E713
6FD8E5DFB691B1ED83100DE36B8373683929FFFCED1B84CB442EBC9EA25B1F88
0A4F87DC49F6293CA901EDA95DF94299BE1D7771279B763FDFB9AE3227A482A9
BDD4A1980409B504135CE7E6BFFBFB043233469F4D0207B8F3954BF1E40330D6
65D4177B90D0E57FC50203EE6EC6E24F08A4105E2024AE79469ABB7C4F3C1595
43F9B908A8310E10025FE0B416613C5BF499172E81EDBF344BE5CA1FB8687059
B451972E6367FBED3BB75A810D553FC3CBF6DF620F431285BF473F0864977123
7FD447A6DF65B7FBB0E97CA80A46C91EF9663718334E2065C027FB01BEDE9F76
2DC9AD6986C96942AD652B910834380797A524B8D3938BB3EB5ED86B6517A40D
EE9494E6BF8460340A37C59759C5294E604FB67CD1017EF01BD8EF4CFC057D01
AFA886F99C13609014E6BC50664C03E7291357E4C4F9A6725247F3ACB290054C
79158CEE6A858EFFA9D7B7F99764E3718CF5AAD7E22765DE496F768C61217266
0B703C62AAA198C3DEFAA7A98C1F3AE8BD3212C156A0C139889EE12A41C98026
5570A421EF92BF8FEA21505D3A41503857A1E43FD84AC34A4B8BB86F1E5B474F
18E2AE228CD4B83444B94A006DC829661F9D677552B91A9CF74F2A195EAEEEDA
16C981D1A7C041B06172198B32F99D58E21B0A78302026FC95300AC5C68153E7
DC46AC75E4031836536A9FF8FEF094B4D4D4B92E6AEC4A9F07841FF93433615B
89BCF67087834CB6BA824EAFF494AB782067526084160E3575C071DD47CBDB27
3AA380990F4230DDDD0AEB371E70B1BDE1DD30CEB2A8B848227E0736F704E817
D68C3229CB814E449D98B39F000F922BCE8C297E4E0FC580073C3FC082B0DF92
B117203D2FADB4D69C603F872F851327C8CC4EE768CEC9EBB904C13D00D1E51C
9ECDE49FFEE44F3E38E3C143B8F28269A06580FF2BA9EC1F231368CB120BB3AE
91E128DE699171B32507D6AA541FF7691440372A57F80A8973A055CB927FFE7B
40A896CBFACAD61AFC9A6D58886ED18059FB81EABA239452857EE51AF2238A2F
5438285EDCD5A70660B57FAE9456D23E9F2AA23DA1F4884BA5A0DD3F24532361
E13184B7D3B21A7D28573B372824DE871B3CD1B8A5F7BA4B7AA7617E2C8E789C
621BD307B6477A0533482870131A55B77E3CB0CA12010DEB5B132FD4C5CB8257
EEAC673FD6B94354DAAA29F26C04F9CA7779F505AC950E0906CF155F6226D25D
4B841BBDFF67A1828FA27DAAB60FAF8B43F9409392E4D9197B434AFA1C9DDC2A
50A8BB96DA9DB538695C4420C98D80CB40CEFADAF21BA9C0D030F2F68C45ED7A
97E0AACDAD46C9607243EBC897ED2C6EAF713011776BC1FCD81EF9A29EDDE2DF
12801358123442F4A15CF2683E283A2FCB0927664F6DFB6EFF878D0A68604565
D0BF75FD8BE027332966D0E55F48B46ACF927F471834B4AF7F49B9E8E422D707
09254EEF9476C91C59EEEF6DDDC9E7C6127B368C84661E8D470C8FCECF87E141
E181D826EA04159619BA020984777DC32533D1B154381BA3ACDDBBDD02D67D3A
8132670FC6F33F0EFF343B69F77A375CCBD13E69034C5D6F1B0589098D5111AC
853EC879253C6FF51A278C8D4ADAC936719488BDF008D913F35AB9B9F6939150
29615D3B9956E85E90C2C25DDA2D6320EE79DECB317D17F845F4D793599EFF37
D324B182EDC9BBE15022BAD202F5BD117DF99CFA3D3CE2D85F8712F1D0F6B020
A2CF5EF04F8054FE402799EE711729711369CEDDA424A9E19BED13D137DFE3F0
16FFFA790C5036965090789D4F09309A682485948E7DABADF89E8F9B0B086AF6
A25C69013A095E5D061658BFB44A0A88979A0D9076C66B4B3E0F2B45DFA048B3
C94F7CC1656BE602CAAF7D89959658835F6DD1A7B1184AB391F7C7C03F1D5F47
48CAB44077BA3AB20830DA2243501DBE50DE2B82B4E67728616B37605D7BE1D8
21C6FB1A08FBB0C50441BF207B6A29B6DF3EE434EB653F3CDF3C4B273E5AF86A
ED6548F1C8231B6613359DEFF9314E14712CFE187ECC6A282D48B10E554A3378
F2B45967A0E914E17E9657C8E821BBF88C16809F80705DAE2E8B59EA257602B1
927D7F74D8945AD99BEF1B19AC43A62DE7FC6144F14EFA0AF684D22F4AEA41BB
35395BD8CB1E8273A55216313CB926B3E29419477490AFB517178C9DFE59CE8B
036E3B067B364E0F7DF8F074AB70369ABE28B7078F57A4D6313458E50D0F929F
D1ED07778DE2F62958FF409D37332AA4BA88C73C57F84723738E1B94C3029520
C1F8D787F99305EF82F6EF3C63A26C4BF383C94DB6272EE22FA8FBA3FAF03FF6
0E6E0B528CC121CED14B005619987561EA1A307EFA993611D8A4E60252A36A3F
72E76448B6CE2AAB255DD3B9E86FB772A5916B0711CCC1BC769ADAAFEA56ACDF
2035BA06E80AA6BE8AF9293F9B6352808E308980FDDDD692EE1DE48DFA94C3F3
0E9AF00462B57F677A92DCCC2F5C8933539A8EC8E19CEEAA4558F90B47B0A6F9
02E697A2A69C6A2490ED39F0FCDBC0CFA81644C291357999CA91EAE9D78D3FA5
B0ADBFE356DDD6B355F570395A6B476771FFBBD4D29DA6AC4B9617DC2B97E5FB
702EFCC62E598B208BBEA62077DAEE5FAE0AB14CA00CA032090799D03F1123AC
7A3264BD0D4A408EAFCCD10C4F8C5FAC9760DB9713E3935410065E86DEDD13DB
200E5ACCE752D0B1E5A5FBE67E49B1F4B50E86B8B6A86ADACB96686D2398C635
1B16D8F5E2B001B7F9CAF79D1D1A05C522250B1BA743972F6DDBBA4707D319BA
0F3C262CB990FB42A2C7E6083EBF3F2C707F60DA3AF59EDDBB0A167FB88BC8F5
629FA4C30F8B9D3BDF1A52CA65303AB424348D6E05FD0EAEB026BEB5B1B2ED69
589587A48B0752728EF791D3205570AC830F81D3D99C327A17FF9549FEA338E9
525CA5E696419DD3E1181752DF2E732DFA6BDFB4C123F946CA2FC26DFF672E53
C2BBCBC65EF9932B5B8CA25612AE5A91462AF7979421018CE7B32A4472316C88
FF71B1043455D531236C7EFF05766E9640AD48D23DBA51CA7EAD4DF7561BEF60
2376743A84A3E68BD302C48F7ACD8F1D8D5B8BC84199B40F57574BECF010E66F
FA0EDEE4B2259A2BC5EE2AB0019521AA7072575E0DECEF1FF68D774693C45373
616DF3D0CD0EB1444648F86323494A4B8A9DA5E5F8A37C2A4A4CDA6C8CC3AE6C
099992103BDE93E7DF94D43EF1F0E90304A92D7C8D4E80379D2852B711AE431F
68063F89F1AB52E72A70B6EE187BE314EEC8C36D4ACD1AF6757463FD2CC3E35D
C06DEE14578825A86BA583C9D7D72D6705B03B2C8F052B6E2C4831531E243BD4
EF5AD2F03502482835940FA4285887A7993DBC51C2CF54E33B1A1B06AB8CDBBA
382327A2F9AD203C19E3EF18F331A58BE4704E5130FB4984C3FE2474E6CCFC11
8E57F207A7A6C9DD70F59D5BB1DA08B0E1418730B1639155FBE6A28A5AA2A620
6FC38E354841549DEA999F652041F7916079CB8D481D2903984172839A446911
9A8D36982FA8CAD1D11A5ED10F80956AA0FE6116BEE08900AE3DF652C07538A4
E519BBEA1AFFA5166E93F162907606464D5811773ECEC6C1CDF295882A6DC297
ED1D0AD9A06DB0B3D5F5707EBE31FE7F66E30BAD26EBA88046364D9C8E8A7E04
2AA371E061C368E357E5782F285BD0C2D2AE64840D9C42E15EC96FDA3AD6350E
BB5256196F8E20C51E2684199EE5EFD7A2A94A2BDF2E557133BC45355460BE4E
0C5D87B5B3B91F8CD458C787B967FA6EBF727A6A212D64423CD27DCC76148BCD
2C482159C31218629AF962EC95FBA423CCCD94DAE6EDE99695DA86F52F3E70B7
458FC09E29911CE7E04BA2E2FADFCD3EF78D161008B70521E4C3F3EFD4F84DC6
3083CC9EB2AC7A1E1DF9F4914F8627CD9EF1D298299A9FA987376ECB6C77AABA
48CD601358BFC654F3C7516FBE690A6787F77C54ACF32F737961660719E8594F
3D869FAB0C30E807FAC6D091C559E259D2282B968CDDA8ED63036596FC69605B
969042288C855438125BE7B940E0AE7631B5E0746CCC9C4DAFB2FEAADC8A76E3
74DBD1AA2E2F1D141E838353A83C906F22B71C52C912A550242A393A1BBEF7A1
A6F0B84DAA951B4DC882EA2055C9C28A70D205D419B7643BD998F3C5BDA4BB16
589BF177A238168FD3279BC04BBA53E11A43ECB11D072C68D2131BE1C7C43CB9
DA27A9D87EBE42566A29879B74C2373223236E809ABE911459CBDCAF4903835F
153170BAD72480247EE13CC02BA3FFE73E8F903571EADA796A06804172D4E9C3
037A74B2F31702CAD808AEE40B09FC0384571BD807C450CDB9819FC5862ABBC9
85191135F0156722F0BF1DFACDE74ED245749D6FB26B8B04890816F5651CFFDB
CBBABBA6F57E86DB5424750CEA579D039411C1E91001090A4A7DDBA1A87352E6
9E4370442D6CA86D083E18D9F88CF847B9D8C2B1B4EBFCB46978D4B76568D26A
EDD167841D7DFCA0F51A02A69F7E04DBF56B15015A88258726D24031D4B52B6C
24FFDE5BBC3AF8BC5003806FB4EDFB8AD3F1EEE92DD2D1D281CE3F300CC83E49
0E28D2490E95AD491916B55CAE2899DC3B7663B824DF6AB622EA9ACF250EE67F
9FB4776F02ACFBA635A73EC6D11A9952F8D0FF52FEDA6580B1F1296AB690902E
2954F506812770372AEAEF5A310EF0D9EF20E56E1C562D28F19F20258E194904
2C57D1882CF581F381F77C6D5F878329CBDB9C124541D25058CCDFF199076CB5
D922E209EC716FA95EB629BCBA3C24B50B296A768ADE271BEA69E327533BC1A3
EEF565410C0DC642A8C0EE902E3AD51E2198F99761FD7FDC727A7A0AF77A8B44
EF50303BBC03DEEE5352AEF9E2ADF5D674D02B3B48233D8C59DD2FD198BE858D
129C9EE050B1905A17DC34F143951D438C447547AF7C489D755A5D77CBB0D0D2
3D5C8E17CF1B4360F996335FD2A1247C1C4688EB68D927DB0F67191B11B8D8CD
24EE0EBCD31DB160E9A8160A952A8CC8CE299D4B6BF8703E105A75C14BF97912
DB1B84A61C45BEED8D44C0C487D71A1F13EB13E55A826851F98A6AAE8C0BE4FB
131BB471348FC547B3197BE4614CF0CB4486CAA7AED0FFA3EC0839F0D610732B
A135E76CEBF82E21AC49E6A5A38C5FF56E8A78841C25F3AA2C83879C2DB5DB5C
42FF9C78D456AF92428F465FC28E8500B284B3CA2F0DB0ED6343636816FF21E1
0F9F30CF05D3421CF17CD1124F098CE983D35798BD8B344DA43AB6B2BC6CF253
81F711C9AFE2E8CF2F9016224E633F16FA0908B459D3C9AAD3F0337D564FC516
D8B9166E9B89231E624A52ADE7D5B8692FB7B3AC0EF6C50558975F72AA986831
CD3CD7C1BEC6BBA971224ABECAC29E764965848CC7AF38BD226543F25AD486D4
9BA23EA92B61077C98F3A98A320D7B3D1BE723FA9C9612BCD1F63067F6A31038
AC7F87B1FD8620A50A3AA0432CC3B633C052AE3BDFD5DC953788A2FDB04E9AFE
0E170A07F821CCF6DC41DB9CC8399358575B240EB96DFF74E71A2F0516D30051
0C2DA8AD628738CF62A624EC50375A1020016AA40B43DCC89F2415A793408E1A
FF8F51270334C5D8EC3C65280E3E3EC3CFCBAFB38CCD03FC9BDAE072642453DD
9E887A94897A011D2DCC0E93B1E5EA57EEDAA986F779C798D0EFD52011E75843
A4CDD239C12BDB20A50F2815D8DE2CE6FFF225CB0A5AA9D7E426DC3B6954BED9
E28D24F4A91253CB0B4545C458177CF4F63A1289AE9797133BDD2D3BFCA01D9D
2C3DD224FF3D0618385B0CF1DA4ED8C1B326B3C5E13E6C476D3F59A508F50EAE
5EA1A2F3FCF39CABFB74E0CE6FA084AF55F34ED3FA8CF5B016D7937DB2C2D41B
CE88763B2DB7D26CC37E51B8F5013F10080C12CC74EB408846E94CCAE0EE49C9
6F6EF29E8BDA1B02A2C06D3445F286E5E05E634B33A3342F60EFD5D5791F3F46
8D5658969C3D555F71F4B5E1920CE5E0E59DD14A7E6120B3735B79A7C643B977
CF8388EDB86720D1AF5767558D017EF5335A4782863F038FDDA2F56516FDB888
6395A9A2448FC66DE71BE785626B26AF6CB17CBB8ACEAE97156CA49F09EC1A78
76E8EC18C23ACBCDBBC7E58E51CA5A2D07C8971F57DFA49FBA80F0E24128E0A1
2590A5E6DF4E89FEEC6E3346169D9A699B74146FB1485EAA684B8EADC5D1E344
D8F0C789D92CBDBD68893458FED2C5B6A47B30FAA1467F141275792A3F0CF31D
B0E339D1CCCFD59AB16312A52EE24D60EB38E907AC2923214BB685A799532032
500EE26206523D61464B0D7B3929E4892A62559EAD5D554CACA933997E588990
088421D4D31B63E645C567BED6CF533397DD6640CAA6F371C84325CCA4142652
F9736C793A952A288349E233073EDA5BBEBF135FBD7DE05ACAF7AB925D99FCA9
4067BDDBA7F83BC0E483A7CD6663718F996C6D4DFE652D02E2B2CCA7C3C5ED44
4EDFD45415182A944586F4869F96E3E09612F99B10C7470CDF267AC477AD11D0
649DBEB4B0DAB71F8D9C054C3A7F89B0A9D46B535DC45DC786F75E324C41FBEB
A021180B9783B8DE03CEEF0D9E89E666AFE6B96F7EF6266AB81BF0DDD42C13D7
3B3037FAA82E5290EC32DDB6D62D6747A23DE16A11FD6EFF1D9CC6EFB6D0EC23
4480FD604DA263F222962D5DA0548AFE1DB08716D286FBE8B64A49AC3263307D
E8184055D4F9F0D85CA63A2115C07C029E454143962B0D3AB42AD345C4A7EBDF
EED3383D7F7FEEBC4A63D583CEB2C0FB43C34D0D0FD698AE0F35A2983488D2D8
58B79E7938A15247F81C1BC30F216F04888EFAFA6FA448F64925215CC4DF3B3C
4777CCE54975244448C1A85C3C96C230995C55B398BEDCC0E0D411EF6C871301
ACCCE38AD5AC609CD324D242E49D2C7E3406ACB2F45953F88008BD86A27CD79D
A9E21C2B1B677859994C4E65B523B9BC37CFAE5D523A1700EE27DD4E1EEC8E44
4EF1321CBEC089CA762B91
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FED1E41534E9
EA6F14F0175F0EB194260AB3C99088BA3E5E99D1BEF8FA31DFDC7965DF7386B7
6196E350498D4D6E99DEFF547629910A67E9C18F5860124FD1504C60DE06A7F2
96C7A9189A9F1693CA17FD09A3C723DAC77B64A494147AD18E43156C122CCE4A
7E64C9645598540B0F9587295C79AB17E0EFCF9DC7455C52B576DFD557FB9241
9B6BEEA4296669B1AC6FBCD6A36E770D676D2D16E9493A2BA3C610F889315EE9
2C675C4AAD0D289C2CD57F80252D5611A196544197DD7994C11CE94999233291
6E9510F18204616B9A1DE160E081B140D7E73D6FECA39D368A2FC841785DD8FD
E082F797FC2A67358363FF20B5A0762AF9674CAD72D502790E60C934AF2992D6
1E00C8FE8253111A1DF3EBCCB9386DAD58D689D1231E310E26BB4DCB5FD613FB
052F5A18ADD75DEE6D2906F0E0156E91B6124ACD233B3A6A150FE90102E5075E
8FD84410360C848D236984ED2EF0F728D61E02422BFC73FE205DA17C15CC1A2B
09E95F87944EC709466D81A03DB3E4C30CDDEB936D191264060F3AF475E30592
F5B5B257D2551523DB672509B279210024C81D6546452138D6EC7BD602ACC3BA
92DA3E39C2E82786077D93492ECF2B562A2004258F47856731D2B3347F514E97
3975AE8458669835299F6A6966DE25D75B644AE2C16B463727A8AE10C1D99B77
19A3F0E4A1776137664AB17FD0BB8F00C310010BEA88078A6C436A069AF3591D
C15C2AFC4524BA4A10F86C01D9C9641201B73FB8B48E107D6A48A8E490C7DE36
CAD6DBFECEDFEF976AE5071223CA6D67758A6FAC4DF0DCBA0EF81E7AA860B96C
A41C168548C01EFD540B6C1366F6AD6AFD1AB243502A86FB184B3C7D9E62F397
DAEE458E60E6058ADDAA14EA5738881447869AA4C14468B701EE11DA0468E18F
946DF99C0E14434C6DF848316629CA47FF9B07038337966F12D383CADD3191DF
D0C105CB6FC5F610237BB3C6E242EFE7F516B4E2977709EDBD3DB7AE516C55E7
42F598B1128C488F11D9AEF8DBAB34EE26443381C8DB3FA8EC5D51CA73EDF779
8A4397FC6B28F7DFB72F5895A6B85986933AEDE8436846C7B54BC0DE554F4920
881BA7F72D4D74A987FEE10268166BBE2451B7E802445AA7F37281BBC52D622C
63C6F0E7C375CDE595F97ECC93F9B1D7B4DA58A683260D37E677D919AF1F8D07
019257782228E4602776546AC8B18751096B35060915B9F57FF72458E4DC65A0
377A0CDB71B67572401CCFD3A3D6E666B4AE09D0D0BB7AE25E9C74677117EB46
041AFF25E4F0660D6F0F20FF1B1FDFE85AEDEDB77D1EB3D6DD2430D0A41D0AED
339C6B43972080D9DD4F225BD4583692763255C545927B84D3AF737D197E5A81
604DF9507DB1DA56A16B74D2B54D37ACAA1E71668ED3E9929056DC63595F722F
D8B2FC228BDC222B99AC020743910999695ED677A030032EFF6BE57E0827E470
54DCF627A2522C130F2A36EA68D564A3AFB3F74B7DF109DB070404B13EF6C6B6
28B895011B8D52604547AE45ED0194122A2571DE7C2864EDC5DDEEFC3FCE4F18
304EF90619A325153A49EF7F70D1F11EC100496411DCEFED612FCA55E38C825E
12DE734E46461C5380FE613F4B4BCDD23644A20A65A53D1ECD46FB16960BF6B0
C4DC425EB4436AEFCC9AC31000F854266ED1B940429B793DA06A0738F6D6A6A9
EFA0398C3B1799E2B0F9D63A046D4897AC9BF9A43DC450D2E9A12DBE3E89200F
A6D861EEA984B1F911A4B2491ECC44B826A026A5F6E38B3E5253808D085F08DD
8BDAD380D59E9D3A6A52A4DE356AEE02D2932ACD588E1E18810BCB009ABEBA12
5A0E424131144F348B1B02C98798499C86B3F8D97655EFDC4FFFB8C688AC77E0
E69575F0F094D14F4872A4381DDD93FD4B7EE1DC737637D9DCB49AAD24D51D7F
34D7D316F01DB5019156A293155BF03A84F0DC42F030D2CA5990AAAC05B707DC
15A1C697A6ABC3DC73400F28D669EEAB3686691127537A7BB9D22D58C67D0B24
E3CB20F8A8AB86D914D0494A56BC659F221A41399692C0826EC7A0F4A11399A9
2F011BBDAE2BEEF7EFBC3A06B6B6361BE870FB9ADC09B69179C4B086E8E9F53B
1C5434D234A1DB0E467C4DF98F1962B30F47CA64B41F0C7C9DE90049CAF442D7
063003D56F447007DFC22ADBF491AFA1DD38087B9F6472BAC7F2E986465C9634
6BB2F441647EB2A78F5F8AE7AFB98CD96A4DA312BA7BC15CDE4DC12EAAFF930D
E7B7E4678AE9D960DCADA3F2C1F10FE36A7F29F05682A045931E3D900296DCB1
2F1107CFEF0CF271A9B8B8EA9847667B3F8630660116D3C2C6E7B9326E24A0D4
7D6C5D1D65EB1583EBC21520FAF42680772C1BA775A6EC0E8F93E8BB74CB3573
8074BCB9FEE4077CC0C49C421C60E412CA2AE3686F7DFA49F81BA6B221FAB4FA
645D1239A7FD2CC98708E04A5AB714B111D8A8FE81B7B4E7A62C4655FA5FF17B
14F01B02C1A4E8BE81D84557DF7F63CB86D666318968FDE74D853B2CA307C7E8
5E607993726B85493030E61D657AECD8ECA86F892751636084BEC4B58DE15FE5
DF3F8171697ACE0E17FCD4DB6551215FB2284EB9CE2186AC3ECD991CDB27EFF4
31E35DE91F6E006F7F2FE9B51D241B0605D97E749129275EA44B6534030889C6
7A73EA4A63D16157EF53666A283A705C0C09B3EA59EDD7017D760A43EE901855
9264B4542F0D0AD915C655E6010089C30BA92DF39D330101E863AC626F054008
FC5CFF17EE180161A5BA285A634784B5C38BF0CE1D0963CF4E395B415F9565E5
74B571CC7AC0511ECACD8027F62B014CC1C4571AEBDF9A96304B33046CABA812
6159E23DA815295B17CF8CDBB25A764E791F472792176049E2FF66295CF70CB2
28FF6881433D7BC0C6309835F84E7D53230814581416FF331CA9E4C9DEC6268C
E12CA57F515C4274980EFC5F14DFE97D52B20F76B948F478C09ABD8715306993
1B83B3329DDDD0C40098F49EEA51EAB70ECB41FCD9A23DBBA62958C95D3ED14D
9BC386ADCACE96C637068980D233F9944A4D7AA8338F2F4808BEDBA22B582B72
D5E5035336CA7443425E0A2B5D78C5D358A79508185587EB04D3653F2202F44B
87FCCB04639F56AD4DA6AB5EB4D7B85771D39385BEAD4418C925FADD7DF27A7A
AEAE52FCE3DA1801C5FD382FF6A474BC95D164B029EB8875677A3C0E43D86445
2000A3ADB919976D4DBF71AAFA2F80E13B0F72B906B5FB74FC58F85457115165
146FA9F686824DF8DBF06322F4750B903BA5BED70CF63CDD5FE1777A0BCF9412
7775162D043878C4B20EDBB38C2FB7741E7137627401EC2691CA8F3E0397E9EE
664FD1E4BD9B1F3B5D089DA0D686041177A85A10F67548B03BB40DE7F8FBFB53
C06AD25316D62E777B51E84317CD46A056091A4ECC75363A3A1DEC9D2FCC391D
E26EC8B2485AB8AA07E4A3E4F379C85FAB6AB8765F5A69482FEB60BAFFBA0270
D67C6B2800FFA34AA39F93FDC7792FCA47C2A410FF5D285C29201514ECE55E54
DEC7D90695769C530E9277CCA61BF852CFBF54CD7BC8CDBD81578F75771117A5
DABB15D3636FB9D3B2C95414CD559F65B1728DFED9A13E39976C99B380E11B24
D58247DE6ED8D91F32EBED2672A3B75FACE39A67C7E42FBBFDBD098BB8D82C03
8CF4996E2597EDFF1D2DE73B4969D223D544568AF2B2700297C43DF1DB154A97
C0CCB80022DF8A81E319A023A368D0B2AE350504DB7B7616DBBAB34668B61D02
6F81AE2CA8851A37B39672A61C453FD7CC6E94C03AE746C5E5B4450986908EC3
974F239B941AD00F90E0F6E409AC584A6FA1B22079BB32C2F9D5F622662FF0B6
783E357B8F2EF4232848E9E6208C60318B09620E7C629004D94BB9767D1B30CF
F24B9776D63665D7F08B59889440AFEB8208A591F7117972DEE30EE8FA6062C7
445A88C62B5D15DD3CD29A65D16BFD12CF2F3C9B1CCAC0BA297A6B23A3B896EA
85DF6A84F652ABAC9E873C86442D4978978F46B2B1C89565FFC9D4E4F54EF759
44CB76B199C029A8DF7A84FB49741ABD922AE12148CB9D11AEEEC4939909A4B1
380D67690BB94F24225D2EB4E9823192E78065FD638A64B2BD40FBC00A9912B6
3DD9A5751FCA551F87BE97B35820AF38CE8497C83025DD7225A1E3BBC89C9748
CBE052AC7C80300FE87A231E5B45D6D5A435BB99954933DB6792121CA369839C
39CE815BD5BCF238C7F388754C54108649943AF38B427059FE6EA36A52FA8E26
CD1CB966A1EDE1126F96B1A3EBBB8BE2F4502417803665EF2BA7CF318D0B3010
2851C9897A495F88565BA7FBCE84E9D8E13F000D152E42DB1C1ED509438C43FF
D4C6DEA14C6B37FEF23A47B55648F23D239CE655015913D76FC57699D7FD35C2
FB87BC1EA12961F311C2EE3444CCE23593A5A847665BA72FE10763D1FC0F5ADC
4CF794E41D60CA6947C4D2893FF0CE4557E2E1859EBC67363A6830E0661ACC6A
8BBFEE25456BADC31DFCC7FA648FF1F57DAC9EFB59CC087FBE105CA179A7B7A2
D22BFB438AFC133D751551E44914DF1F13CBD3F7BEF02A7AE10C202FA1C02B96
535BD62E22D73AF8DD342F6BD1F1B6A57C5A269D67C83EA6B9F5B6703296A2C1
F91B742C86DE1C358916E9209FB94F4ED4E989154410F23087FC234A521FC9CE
7F1D6357D203A4C375F845CD9A5D92C1EF1698A5B28F22E0C55DB376E4E5E57B
531E150BCF18D26A294E27BA156BDFC5EC76A165916DAC6BC5E048225EDC36B3
5EC99D1F223E3014F12089D975095DCC347F6BDBC72924BEDB950F7348A16F2E
24A9F7DA214BA5AA78BBC25E04728A433251D7913F1A7392F7BB48EAE1C0366A
DA219C8F5B2327104C879FC83709AD28F6F64DF54A206E8E6F3C5BAFBBE05510
63C4965F4F39C44FC8CA5B551B0CD3713AEC8E364F9CBF6491243D735BEC6D97
DDFA62CF9AC0CF147E0CCF92E92D2819A4110245E8C0AF5045984946533546BC
3975E0342637B2A6BD6CF81BA692A9E47D220F28E45A84B0FFB56B58F5D594F1
BA15663726133D0D4FCB5DE404CCE2E020705FE05FA4CAF3C0068B91520408D5
AAFE608D46F98BD5948F67530E7406CB29DAFB32AFCA310F1BC201FDFAB3E421
5B40B0241CF50B40A85B048E3D51377AED1AFC8EFD96BDD928C8269A55AF04B2
476E45D524721EDC3FD7FD5693496250647F37A36E93669DAF90E09371C7A23D
DF3DD4138D93AC172213D5A517C135657CDD105442286F39851D4F59F97F2A13
C2676F0C36F09EA581713CF259E6E8AFC57CD42D526388E2895A696AAEF0EBE4
36264DCB13B5E2525349E857177D94A433ADDD5A00F901644D3A8A062A5DEB37
312F06624DB04504F20036AAA535F8D3857863924AD5269DE109931E7149ECEC
EEA24A55A99C133A4257F063E11D9AD51E0319EA1785139D7CCD7E40D3D62739
48721F931EA75F5E0E666D77183C9326D471003A9DCFF663A74376E53097DF67
8EFC8715BD4AFA1D367C1A683FC6B88ADC6B327DC77663414BBD889C18BCFDE9
F5D6D42764525B532BCA16C510B54147CC997CDCD74A4365CFE1D75B80581E2A
33FC6C2204D5437E60D17592758D2EB8632893D897E8CC9F5B7E841DBC5A754E
D992F08F2FD5D36CC4AA4FE8BB4C9D51C3C814FF11A6DA32E26DAA0972FEFD35
FE47B2A93B539CEB674916112E6ED402E9493B0941BF04D1B2C7BBA8AC6DBF71
87A4B1346F8376E16B3B397DF5685F7B56C1A7CD17BBC9E6B3D7BE42AA3F884C
3665B1C3922B9E9CEA37CE9AFA2DBC5523F9FB79137C8AA4A20588584ADCBE83
E6BA5F85F4806708AF4FECB20D7C10A20D83A8223AB771CA61F867D7315E27DB
B7103C432EDAEC18CAD42166EDA7834BE599AEF0E8DC22BBCF994F435523933E
971D33170450A8A0FF5186A7AB03ECCC79A923BBBD362B788F5C9DDEDC7EB716
ECD75C6A6CAF0F0FB5F6A73A47FFFB9D6F328306780B31793DC3588A170E5A20
B20B7C7E7B7F8E9C7F438CDF8944DD5A06583A75079194054F8C0D765EDDB100
AFDF7D96F86C73DA6B3B031B0608A63235596318B3D710351EBFEA8ACEA7817B
9F50285ABFD061707292E5C5A6EA04FCECBBE13660D5360139F88807C01EE33C
0FA51EF3A6487E8F7E09AE2D7E5087E979C9DAF1AED801D6239C7777FF97DB2A
C67C7F69AA720075EAD569E7BEF81B824DA5A6D2B21C7CB49F164DE1C6C63C0A
CEAA1B0280C4A7740C14DA2F7B638CAC8C3EAD6F518231408EAEF5070BB95F0E
F50220FC04983CAC63F64DBB5F3770C602E6DDD5BEE6EA0258B67912715788AE
98B33E45E047DA7B5DD9D12ECA7A5568B0C26B5F595CADE6F1EDAFB2F2B0B4D2
ADF82AEF36146664852E31AF8787CC19DD310EE1C9F89F88C9ECE9CE253FEBEB
709BB571CBD6D51C00B349268DE077F06C6908E7E27DEE035EF7522B4AA4BE52
2FE66353CCF075BF43CA197B190B0C1083D696C0FA27B86904477A22C33FE6B5
30885A508D2B610CA7BD6C31B86706637E257329F09323A756E7A67C5DA7C09E
C09D104723BB02264F5281B017D761C67D2DDFB54514D2B61EC956D49B2DAA3D
CE3F10992FC5B88E4E3416B28BAA016858FD029922164DC98AE3D26FE8BAA3CA
A17B96BCE18F05E6C0D35AE05E9229BDAA7D67F1459F18598E3C39DDBE568F7B
FB4C76FBDFE25FE91DE225ADF4936D2D0C1BD6D613BB3C61A04776F70BDD9C6C
5AF17E7DFBC4DB5A9DB273711CD9A4D1598596C6DF2B0986A30F3B94C9CE1424
E86B0809451A673B0864F2DBA8172E449963E27CB98281040A0E8FA1ABE5F6C6
C2F555C2DDE554221713230FFBC15622C242D33C1F0F309668C00B5E6B398D27
4C612120DD84F779F73E6362573589B10957AFDA4AA564B4997CF42BF7013107
5EB2DE5450F5A6337D6404E9251A8EB3AD1851B8557695D31B8FA258290CE02C
56169A952CF822346EC24D14A9B60A7E85627194D9A91E6869F4ADF3001B8C35
EC6BB680F98BECAF0E5C34F2A3A0FAF72D25E958FD50C3060021F0556787B430
782ED881FC5F384EEDA74A8F95AC123E1B3B6FAE7AE7D71D41743DECBED602BF
78B432669F2B7C58BE9909CBFCD273EF5617183CFA64757EA3F5E9D159BC5086
CFE6D15C4CFE00627CD8309098C783CD1FF888A9B1E40D31C73F5B4E253538C5
E0D0672A1C4B27AF2C873A42C13AFF732ACC9BB83BF2862E7DA32C27FD326768
E57DEC8F6CBAD51D1B70C1D43CC2A8CEA4CC4EEA322DE7913C69605359F63001
186121ED29020CAEC58CB39775D460226F20388BBF95B3342044FBB92A57A967
DD5572E37D066BEA9DF21D556A9B6781C4536A5ADF7147B9234FDAEBF0763183
3BD20F64E670563682D20813F722DD86A572F602F36E083DFC32E5B188AF2E4E
14EE2CDC8F0BD084CAB30272E8F065218BA88536F00B9523A6C933683151661B
B27664EC44367EFDEDEE8E8EB8AA268D00B35AC89644588FB8BCA8074A360983
6030E058C6917D4D2261EF3B27F4F84A27603543947F04F68623FC6BB43B7CAC
810644A8E59488469DF34AC9136ACB75348A88CC361FF06E984C86AF0EA429DA
A5808CDC6AE495A872463510543EFFE5DD50FFC2FCDAB714E593A3FBEAF9140B
86917135468FE006F159D3299B3E7093279D88C443C2F8967138A65F45FA3432
8D15C87D3C12BA91448D0E9DA501524CD27F5D522B7B7E0F2776332DDD58A280
9F9F747675531569257C195560586BC4C5B3E80DC42BCC8A7A570D1624D4605C
45B517EEAFE132F4E13EE500835D79D5646147D6186BB6320A680E096C7C8AB8
EFDD480A3BF40EA8DD6EC37DDB7AB02F8DD3BBA3B4EC7682D599A33FA38F47CD
0DCA89206C0C16DE5CAB45EA27FD7B173032A44E9CB6F49F4274D3EA503F71CA
32D0C1BE23B6A3619457F142B01116183DDFFFC28DAB272BA52DC028A438B9DF
A0D9BF845CE38E33893E5D2046EBCA5A91FDDCAC2042AD0EA58773ED0DE9FC13
F8FCA7D5CDFE3940C0A3B942DE041262F04E6FBFCB61D36FB5A3FDDE1DA1C862
C9BDC3A2B152842BF8FE45235E3BF2CDA58A6A20247B49CE410979E1CE1EF5F5
239C74C5D62D6C72160257E0B9EB5F3BCE538F58048FA4DCF869306B6F7B0804
9AA54889571EF0236F755C1DE7D80C94A39661265B9B784011E84C0A1D358C94
5F31C26697A76D517D5544D37B070E8BD4F1E2425E8150E0A2C217C0C7BEAAB7
2AC4336C801C993E0AF7834D7D45B26B26F4AB20E773987B2AE56319A35FA66C
A5019DB1F04895DF000C5E25CAB37EDA5148986D0A57679442B5E26908A1BAB8
EC4518B66D0A16B6D0990CC5130EC9F6DEB0F3163400BA428AD6E685D27DB094
5A38437FB4ECECEF56E01684A00D63D333CF7AE0366939DD256059A0C16C4448
825BDBE7FC0836A30E9FD97A766F9C158C75E042FEC9C51C55CEE91BC82C93AF
21FAFEDD4F5983BABA159C313B41C6835EBB77DD6E1CDB6E822B57881520C4E0
662B31EB24225640B9889BEA16B12347DE86011A7FCF80BA06A7664977D52109
118B6A165353D502FD940ABB1A1C9988ABC9337B15900B09CD3DC2D0BFF5D9E8
474F5F50DA95EF3F0F916F217C6F4150C4774423E8C99C28166E5FC3BCE52C14
AB603AE56C02FD8B087A8608FFED6C16EE24526C6009FAC645DE149453347FA2
4FBED2D241AEED8769691F9CE7ADA00844504D5FC1E4F6D295A2DED0CF1DA64D
70CF1CAF6AA770893E7CD2A6B7B563A302F086C2F7ED22B1EF294C47C0227725
9606FFE7A5872BC6CE74F4E40597F194915C329ED3E65BC4D9693824D79670B4
9113542559305EF0A5196B0617C9BFF37916AD6C37028A8A7A4DC465D8997EB8
0E9EA72FA2EF84CE95E719106E59C421D7534E48C018EF80E261AA2166225E00
D4DA958B0C55777FE13161FB5AB099C0EF1D99494125BDEB275CE88342AA2D16
3A87B47F4BF636C17030AFF437BF84B31E7B442C7092788F52A5343D6946CFA2
9F7B4801EEE9FCB00F41988BC06230BE4A94D4A22E4C49A366DE4C3B88DC71DC
9B1D52A52CB6A409891D90CA9835423104BD0BABBF55FBFEC09764D2108172BE
F64FBAEB6078B41093AD27F373320E4058285E54BF0D9567798DA4A3F574B046
4A1FF5880FC66196E148547601B58B81C618B47F60FA4A257E4A0B2C83521BF4
68097E2A74894C1758C97FBB984627D4E426294618525FB9B1EBC39016D14ECA
E5A4450FF51C1B8961D0086838EB65E5556A7DA94D281ABE19ED9CBD6F39DDBE
7605E6BE07076980F517100A1540B8EA15C87813525EE7E82900C9B5898F44D1
2679A721F56FF5E0E8B43DBC86D028E1AE649FA46B4CFC19FB212EF22365059A
33237FF205E9176F0CDD14C7A94B35F0F34276EA14F3B7A4E66924FC91026C74
5E0AC1AB55E67A872D9C980FF82E969FFA1CDF23FCA07E6B18C351330E6130D3
16F94074688433AFE6A701C2CB59B56C029C21A9B14225B33680660FF097A350
E796971602C0F161DDEC1020214029548ECB03F2BD47F24845E3F3C85EA632F5
44082BBDC9B77C55B4D4E68066D9BF3ACFBB9EFDD4B00ED3667B5FDC6BE303A3
80537800836E40838796FEDE5D81709D1B3AC99444E7C55F697AE4A42962886E
7D1782813C55CBDBECE69835137D4D76FF9595E797FDB94024CB2D6F57CC4726
0DEF6F0D85A82A40B7AD048221B0081DCEE0653E88D64B7C0779A27007A0F544
DFF6767403E4D6EFC42191949C68B5528F5B5DC8BCCBC6EA6C753203A64DACD5
FD07A55208B9415B745B2FE6FB37B0F1CE01F3898DE5BA43091340BCA98682CE
AE08206EABF5E61E0ECF91F4E9969F6D2B4119936F6A4AF3E762FFDD440EBEB2
AADCB8F9041C564626D9C8812AA35675A756841EC222A2C15B2BFCF219DC762C
859BDF33E210A1BE4D1BEF48C8FC4FA17A18FEACDCE8632E27552456AC5EEB82
65C7F2726F845BCBBE7C4DBFA6412B6ABAE22BC8FC586FDD623AC95FC1FB5AAF
63612E24E2E5608C4C0E432F010A85EB3E5285A5372DC7B6A64EFA35669FD95B
DD2B28C6646135693D852D812D08366CD6C52CDBC7264882444E369B971BFE2C
746E00C5B71C83804DC4083E5BD8AA982AA1E3FE69FBC34A41D45C16529D5E1A
63D2C3EC2DCD92F01FB3C782ED34BE38DA760018B5DB530FFFCD639DEEBA9897
10C9F4A07EB6A8CB7D05F14A2B2405B92A9F3655DC5DA5DB60FD796460DB9C33
7E8C344690B537561865299D1FB60DBA9CEF9F5C3F9C1E9D28C6A1336CD9A472
DCCF9A30C67D3376653F0490AEA44D1C906109064DB4151441ED02D5DA83B157
8F025BEF11FF4712D039E677F19333AB7FD0FC81C28D05EA5EE2F917F4BBC1C4
848413329CF4AA2390D8F0E28FC3F7F65E9C1A9D8CFB3C5B6E4E04813437A0B8
975C4F15907870F4FA854244F58AB6B315DE7285F1C1C722BBE0A6D72DADFBAD
BA62C969C40E5AD567F556BF4966B41DFBA23E1FDB511D4BA371A5A158C35659
F7F209838BD9A069E2C99D84B0EA7776154837F1B1DA529A035AE3749991DE58
884847156129B789709F1684F095F8B4E1FF8443CC6EC6BFE510F180C63CD077
AA007461972F698DE7209C8968CE4056A19E001FAB1CD929EBF886DCD74B86D0
93BE86585894233AA0805505B3306B1D295A6F4A7666DAC7E515EFCBCC5AD9DC
9600A0DC4E757D642C5623ED2A78A79161EEBB77FFF16D54311CEA7D0DCD210E
8AF43476472473AF16F9973751842662243C4B389CCF9387A498AE7004C657A6
833F73F042AC09ACD580BC09093D942DF33F60A2FAA3A735ED0119A05EDDF8EA
9B0760427256D2922D6FD422D26A48902430290BDC28D5E79174EEF532F545E3
72A73DEA7BDDF84991F1896D9CEDF43C8B54CE7FC9119724A63DF7C2DFA5C541
3BB3F3BC3A316C56A6CB2575F581E877A025495205F67A3AFBD7608F592F3B7F
7931086D5AB8BC1972C7FD7485E08B91B892B30D09EFB60C1D3615E626374AF1
B2BC118AA1D5CB606555B15713E6104DC46287FB9D408297302124C1D6FF8848
655E1119594DE52FFE1E8D9E81C47EE604B0CDD5AE2CFCAF3A79813A32E9239A
336B2EFA1B3FC17D3A1B9451C53C454823EDA7FF3A84174267DCC97E0D603B85
7404258D7A61CE4F0166F6F5601DF942C1562404A383575F8D4F26925EE8EFAA
48AF668F14F8C855472EBC7880134F6DDD8DBF863FCB2BC115437316194F2583
C296668F5541C58FF2091F25A923EA9D4730372E32CA0817B42639F591DF7BD1
12B59BA801D75428F331EB561A6F257C8BC677E890CB6FB74220158EBAAD2721
1EB43A348E7E1F8382C3A2DD17590E8EDFA7C7C277BBF9E386D35F95636EC29D
5EC622A7AC56160496E102C40A5F29F7592D7331AC2A64C5A488EFD0D6F0AC2C
B432981C822C4DA3FB1A29EC730498199853534EB0AC7414844D7E4A7AB96212
77EE2E7D222461529651C963AF696C14E0398E4F38ED0F71E0148FDC6E3379C7
B044DDDA807F52B416883C715F3D6073DB107B30E6E9D525F18A215A237F98E9
B39978053FCCEDAF4AC61B99E443E8CAD82C612C2E07EC3E23EB04B4082632FE
124801C4C8889EA632F7B00A65B3BDE18FD3B4D1B0D2C75099FD57D90E73DAB7
2A2F1AC1DC8A02108414CB221F8802343692C68AB1C2BFD00F8446707E1270D6
1C8ACB19DD62AEA40B0E23678322EBA23268C7C06070B1A215D2D34931E96950
E83E418B529E935B516906C3E0A204A8F86CA2DA812DB4F23DD7676EC019E316
E1F84089E6E0A57A6AD525B4FB469D4FDF87EA76C659CE994AD4BD0065D122E4
4FFE52EEFF539E3EF0C09501C91B92DC7295EA159C11B1EE977C88AE260A182B
C602EB5CC07CD313A25F3A0E257751978E5B0B9CD1745BF566C1B6345A9FD75F
123B9D58A04D880971F6905C52B8E26BC4A7D233105724D3ACA93435328249AD
9A7E6A6AC7421FFF27A307C640037491175E5CC23A30F82D806632448E0B8CCD
3C4D7654BBDCD200D3EAD6C6B306E820685F5E2937C95B50D07C6316ABC08495
EF319B35384987D800FF2403F3A9C6A02B03E13DB99D69CFA2D9820FF765CB84
9F8CECD243BB1A43DBC273DB1BE1C53E818E00E778E246B3B724F0D24BD01A30
1C9D89D9E45F48D358D5C45AFF2A3ADDB1E2963200F24C20A0D1C9ECCB76266C
3DC920559EE4F73496FDD2B58F8B140D46A98325B51D49C48DAB045F59616134
880BD8BFD50CF13B34E277C79BF6BCBA6948FFE6410BC7E74F3FE437C28164C2
99ABF128FE2511732602A5885A6CD283AD3C1C8E5F026B5C3940C3BA0147BAA4
17984412F98AFBD1A134C00D5A31B8AAF9FB4F4FD42A9EC51B4F0E5A02E35F5F
FE210BFEDC49E982BE7BC15BD54EB704332562357CD98F5E3A027390810C875C
682A884B0F71471E833977760FEA6FEE94FDF4D9864A35E175131C8CC487F76F
C1DD619F7B6FC63DB074125EF6EF7AE2049EA3D628B45E61277117AD4B234438
CD4928E52B3A58A410845A39C2CD6EC250EAC1D5A6F0EDD6189B5B2753F10813
E15C370563EA2D4130FB8B1F960338271456CD8CF9F48F217D5C46F458270663
63A723A9E71F504DA557D1D1F9B7783C955781B07EF8B7B87682E1743CC55200
825E88046F4D1DF052BCB5D812D8E1177725E4737F8D8D706A39AF7AE65D0285
1229D0720F3474F7E60E3EF606D88E32379E2C8F8257187400DB7BB89A3C6E4D
F76355B32C48661D0D18ED233AB8301155A05B7A2932DF388A3E85956B7293CC
214040F9F5A61B5588187FDC7286DCEC6652101A1239B9D6BC0FCE5FFD4757A9
299C6F23E17F0754417E393B7DB47FE71A0F83B2FEA256EF66888C4006BC0B66
D1038FDC6A1D7E689741CF3E4A01EC79EDC18612D00A7FF64F31505A2E1CDB34
0724815E200A82B30B21EF5150662BD179BE00B9B76B72FFD337D62DEA8D7AA2
F3F25876A62B84AE7522F5837D99A0013C19F19E4E4F9E37D08F89E84B1D4D17
AB5B84D302A9C0BC12317CCF01EF9FF989C86B585AEF4EE67E5CB086BF199321
8B1B0279C8B5FD65EA790EDC448F7503B1CECDABE2DDBD8CBEDF8B54AFD478D9
6AFC53751A45FC9BDF962DC2A1FACB0AFAAE64276F7A1C6D7ECC94BD5B82F7A0
37E4E7C8D141C62392DB7158E7773CB7147280480EE2879F3C84556A298187AA
2C80E04CF5E368524827EAFED51D82061492DA8316384FB242FB712EFFD1C5D1
7DC70E135CDBDE662E48F649117CA18CA484E11F30598F44A65E2E46B5AF9D5C
83C94E701922AACC8882547AC619B715390264256BC7D144CD4193EBD65A905E
50DB692AB573334050034CC11B637B8BA9BAA8D07CFB5C9A4A7184FB29A2788A
6ED721F201166F975A39E6DD50A266D0935A38029161127D80FD783E271DBEDD
8994F8A2E9F96F4F828B5EFA4F5EA4FF63763A313D33638C065EF056061AFDA8
C11B27E608674E546D2074A3AD2FDED543CBEB81BD78CE04F00AA75074F6D0C7
3A32E3D18B0D1774E48FABF10993A43676F2786D00CD23C6C8A987B9724E973A
6582714DEEEB76DAD21733DE55FA05C2A592D1E80050D23720EBD5C3CD1CD7D3
7445D9DC55D0A60768758642CF2C4C491A182F4ECDED721EE35E33C0B69B8068
D5D3E23389B01387078AB900626C7488A61231C7BE4C83A073C1265655AE2B56
47CB5CD00EBC7635AEDB3F00A55FB714C98135AC83ACF355B3085E56A4087ED0
849BE7D6264110BAC5D3BBE5694204AE852E6BAA8F264F70046B44A8F83A7ABC
DB26BC852F5DE03B3D0A4233EE942AB48F8DC816D2DD6A791071EBC06CC24C5B
AAFCBDF5B3F169670F8189D388506DC7D27EEBDB3572D9A8269430E407F7B7FB
7C41FA5ED0E97D14487C05FF5462F53B8B701079D8E111A000D42EBDFE2F1E19
060E939D525F8D01136CDCB16554CAF3D09AB4E6C38D8FDB121C7C72D0E46ABA
F7CAC69EC21CBB0A68F265791795175CE7FFDE7398958C6631416C2190B36C30
927C412A0988C5298471BDB6F6514718C801B23EE9D15EC3DA1315FD6A95C3F4
61EF70139A757CA11233A368C666168D45B8D27B595658D375374C15A410AC5A
C35FCB375E20BD3D283BE2AF9660A21D130FBD21BA4CC1F4547D6E3F9351F911
D017A32AFFE769D481F38DD868CD2B4E085BC075BD7242ACD0327CD4FFDFE533
2262C12D8255314897422139DD5CB35201907366DCCE028C20789DCEA5E01251
30D8411E8D3CBC8C8A942A858CFED58904DAFC454A30381E077A8301DE36B0DB
49B029FED20C07398FA6F41160A1789536D912DC1538DE9E81C4485C2DBAEC8B
E3C97BAE14B980A7C3576BA2086FF3456A08BEA0FFDCF8A985CE551D25FB06CB
F0FF188EDC8A1C84566CE0B3208E7F3A89E7ADC302EFD4A948F8C10EDBEE2DD7
C621A352F55E79D0A77B9DFBD15C97D2CF680962F3AE789AFD6A9182A687B43D
DA73C90B122461A071F56EFA49CA7B8FFC61B3C4F03884D52CDD6347779CC291
CD5DF9CCDE6D235F4558169C4F8E632B86CEF39D02A99B6A3F8CEE2C28F3C3D6
2F90C67B5DAA2937974DBEB542E195EAF9D49EDF6190BCA554B3E85FD141D570
451BADF0EBA854D9D2B0A27A20D803FF577E605802D36527BB7C3758285B8940
F89B5C7F345981CD029984DEC1EE34F30E77F7C3174AEAA273A07D11DB46382E
841BBF95A07528C8343292E178983EAD85A6803DDCCD155753D01C5DEC0F6D9C
A219990298D212EA9DDC25F4943B0272AC32A384E2225C7D16114E138198A2E9
E633BD1AACE6F06A397B5D75289ED307C730A46F0CC5D397DB2DD70D22A88D59
037A05BF9842C0D70A11A0FBC28AB07B83B1800E41C9104A62A074B44B977DD1
DC0DCE81AD466D6DDE336D4B5F9F8395469839226D1784E124C3E2D81F48F04C
B32D17A0451E63FFF6B99A8A318ADAD0C42A26913DBA294CD25E3BBB2FA53D98
235024D5B440190F11C953C3C8FCFCDF5C20A99F85CF189AB8AB08AA5B3C84D8
953920B3F1ADD578A1F95BF4FE5AC5962224D4E3873D2DD75BB1C61281E75298
D261EB89F41496B5A04CC340DB897299C8D313270378D817B987B3A40681ED8E
00E63D89CA32AE0687DC232178A07EF806E345E7CBA12017897EACD1FB64C1F8
29392A430B65E759A1023F9B8D3C9A53B4CF769C01D22D88A00E6F0ED3C482C9
2E9D1C64CCF0CD32606C712E37B15221A079EEEF1BF8D4003E95F831AE1D7FA2
2B15E6DAC8C7C460B77A7A768871675D0C203DDC23891E5340E340AB4829E944
FAB2E17F6874422629C08443F8B24AC016B8E550CAA9B7B8DD2F0B8D82752DF1
9FF85F3ABBCA8FA90015B88B04EEDA1263577D0D75215866236E5FC6C284B451
86E5F9DE1E3B8B9659D7809E6D1E9A08259CC8856258D263FEB468FC7AA2DDBE
2E708D27D89164B12BD8BDF8DD68A827AE2AF8E3798F67F176F1BC9F2B67CA60
F5EBFA7E4DF116E24E0B2C3DACF2BB4D4F11C5FE4243E79359648D18517C9EBC
AF62677E87399AB9DDA66D726EB88E307DD211433C8276293FAEBC789B1F6DF4
2411B5317704BD4B435A2949159C47091A0832D4CEDA6CF086DBAE82CEEE9A05
7DCAA4F10CF2591C26137E4959F505FE2F1F05A2B5F750ED1A437DF6480BC21F
9903195EAF2F4DC62A60B503C129D7C618C217F049B4D74A7E487569D4211709
1EA58204F935EB454FC0099D03A9B6B8C9FD7558C5F394D6D04687B8DA9168C1
8DDF26454746D4632A658418710D369FC978A69A2C63CFEEEC12351CD8BC1A04
84BE13395D14F052E527C49A2A3FB6CC3DAD802093C5668BE1D5A2218F84CF65
977703DCC3F0F4130A40AED7E009059BCF91A25FF02E328B4DBC6689C64BE66A
12ED64B4455CEC982D7F8B88A61FED732015966CBACA18B9AC3D3BAC661D32B0
C92AB8D8905EC4FFDE254C75D1FDF647F61CF46A22963EC6A3A9CE03FD8D793D
FB56FA67D81A0373A3F7E539B0CAE69B56FE14C7EC212446E70A536F16908FD3
CC612CD71B1D1C6C8567413B36D8CFE3D400017FB1F41C13A2C3553229957070
4172FB8DE6DAC851FBDA3049B09A6B8489770DB1E2864189EF8745D761449A8E
C2DD8719CD0E8DE0160E05A082CF23FABAC0975AC9CCDBAA667BB42A919E39A9
790554568984A2985A760AB18A785B5D099C7D09F8E9E588AE738E805B082946
73DE7B0030AF16E1883E19287A209FB541F4D45C1424B630353954A115AFC8DE
A877563BCFE6070A9311CD01156021CD6242E7037CBDB3690EF74DF242E29BE4
BE2F73C1A143080BD5C4069E07231E309AAD7C02C40165F13658DA912F182AE6
BB107D626C6BAFDE4E4B9B758A48EFA2BAD9CE1C217DCF79C2CCDD47B46DE0DF
2591A8133B963EF9D8DC5B04931471AFDED1256AF5A33A8A6AD454D85A824571
EBF1ECD7F53406AC6C16F262559E2B455BBB2B348C551767F41B07674D04C060
2BBB6A77E9A32AC32F26D23DC04F55120BD00B1823535631EB0903D799CF09CD
DB0ABB529CF27E0421F2F71DCDFBD8F4661868D787EBE7DEDB4F0626EB76F902
6BC61AC1BB315F154C026F6E994AB81AF02F3A1929A51F56492F0E75F9171223
49E123C44656452E623083545AFDA3679F37FAE195BF99D9B7AD4106DF33E417
70419FEFB60A46596DEF1EDD7E2B1448CE1D4C92F0CB7A1AF2AD9E7B8BBD57E4
40C53B5CDAB8FB839B37D3F96F5D25CC229D6E2B06998D486A4FBE50A01A6D06
887E9CA66761CCA43155E27AEC2929E3730AC5631E8A6BC4E09C056E83A169A2
FE65CDFE9620ED363930D5D2C894D596CC525DABA41A1B86C832AAA0344421EF
35AB809179B203F57406EF288A50242B7B29C31FAB683A0F8874D1189509E4F1
C88C802256DBABB66519D5389E708A95CC22E782B544B4AFC8EC812351FE1871
6A01F7CB59729479B44929A8D80D2082B89E2DD0885C10D5A3EE4717C34B107F
CECAADFE25C305A4208F0752C86C55084EE590D2BDF879322E8916299035F96C
F74FBD24C4D4C760D5258D3E328AEAE4934DA1E35D01FC876D0FC523ED751127
26A04B61A981C5EDAFC4195F9D98EF687DF4B56E1DF688E431C4B5950EBECFF8
86C8EA1A24B142D72578B265CC703B3F26AB44A226BAAA9877ECDB2DF354740C
F60AD4BB97AAEB427E9BF44575497CD664DD89B53561A8A72A70C64895CE9FAF
FDF773555EBEF81C3AD40ED56C2FB9E509E35F8BBA7C988E139CACD48F63620F
3F09C4831CBA87F9A69F2433339504BFB251EA633BF0258F882AB286D2ADDD5C
20E0A959D25E6FE83C4C64E94435AF759F84947BF7881DB54A7F03888686811E
D0BD4FA8351B8B2B56B908D07A93E396239FE29A007CD6E9C11D9C23166FF67B
930756F037E566831799C0D1DC2EA227EE970BA796C7D827A85FF7EE08451265
3C741DBF2B29C5B7222F91335795149A833D853E50237C6EFD10DAF486459F84
01E6ED74FCE37B42323426BF67DED9CF4A1D380C4E48A78C88E833CC40635954
70136A2AC0183E4909DB663EE0BD55212C7D7C1666871743DB7572234CB32710
B39E0210AF10250B3CCDD552A31463700C6152F63AD04E5D3BFBADF4FE80E720
9EE9DADBCF72E3B8523FBF212A6009FFB7155CDF71AF4A65EFD4922137B56D5F
78ADFB216DC005908DD92EFE6932F975054CAFFE6E4D4C3B5053891BC2BBC2CA
E453AC750DD115AFFF6ED0011492DEC4CC381CFB57B8F715FE075ECC6642AA4B
29C79E1829E705A240E591D1FFF5CAF68C81F91F8E492BF861A16398B35FAACD
B1C5A81F108F9F0B15A3C0FA9F346D7DF486122EE08A4870FC1284936427D712
C632557D22A250AD0DE07A84834B5B072911CC814C191A803C4792BF742414E0
383D2D596C2D4767F272B0872519D89ECB766F3C67B70DE3A22D2274A99FD88E
D5118517C22DA5DE4EA659829BCD60A999470D4EC5484F4E6B62C20EA10853F9
B1506B64EFA12FA0FA5A18321056A3DFC3A602D40078C01F9ACCA5CB8DCCC997
FE059CF45915B15DA4EA154E2A1A65817E203436CEE365066E40D6B3B73EED42
28F4B246309FDFE2E68556AA7917A09A050F4B6DB81FBFF0A35BBB4270B329A6
CE29D5F58C37B8E1AE26BA4CC08A863F7B4C49DBE9DE5C39ADE4AAECC8FB8AFF
8A587EE638983E5CA6FA9E91D8A28CD73E61164C7B9299AEEE0143017188240E
16B51E664EFFA1FEC002877029B3391253212D83CD9E1AF690A8F3FFC6EBF924
5335C9AFD11BE21DE7B7F3D0514DCA7FA3A0C513581B734DC54D5DAF5C8A6623
57B576D905FE88A82DA9E915ACEE355448EB4E2F6607D952602F2D0CFBDA1E89
02AE06DD64D7DB267FDA20E4CBBCDF64307B355131D5A9C8AB27D817BDF1FD4A
F9F362DD50AB6D04639E1B2A8C1893B26FC3245ED282F268DF3C33D2D319A05D
D429B87478E13A405DB7AFFD57A0D9ABDC7DE52E4A95A28E5EB6A67FB6552F3B
1F7436C278079E36D67129C17AC7F5B32CD06DF4933AED634614B0B0621093A2
D6D6FDC415205B108D2F0815FE33299AAF70EE3CFD05486B3E29C042EE38CBB3
6113F74EAF174C5F76900F80302EC08E56D52A20E3DB1CA574C1000F2DE8F221
4D6CA376D5C89C9DFAE40027E288E4DD66C66C063AEAF8ABB059CE78B9D93BB7
C99E1E7909F79A0C4E3826EC89B9F8A854670CDC898668E5AD328F96D47203F6
65A3AD3DCC300B40DCA4E6CF985F3839DBAA9E6F73361E3864D8C6C3671FEA73
6F0D13CB569B4353051142B5FD07CA9D86D607B030458E40CF9BBC3BA6A80998
565C738B6B01A9CF2E6A1EF990EF09BE679211C6CF7FA76267E3990EBE9B13D3
B7307D060354E337973D0EB63CAEDBAA954F7D2367D3F5E0DC778C99512AAB02
46458C50ED8C08B46391DC19DFDD46392CD74B0E06A267E3692C7FF4BFB063D0
211388067B51064A0EF1019190105DA122040FF0E820B8D212354265DE6A21DA
881D0199776A2886C626E0BF2017FA89EF99E3302B40CEB3FD3EB4E54FFD6B2D
A8041DA852323A2D24B8E00BFA4CA586E514A8CE865960C2BB403F4643F2D37B
D87947326AB5E2589D6003B7C1533D478C0F43CE39C9A94908D939E67BDEE100
17C504595D2CC18AC62A9593705A059452BF086EA835F9230983BDA88611F679
ACE98C3AF2C9DF81102D531EF04F6D7D60C5F1E0C780128C92C2976202D33A15
1DC265F375F25E8433EC16F8A731E2BBA391A78868DAF1550268EBF8B3D8EBC7
7B1CE145F6C0732D8185A95AFC56AC6AD4E56C0CCA5638BDE80647820AB2AD54
A6B85749ECAD7659F6DFE4DA2F2AA9667A66DAD81D22F43B9038FFAE4CCE475E
DC9C35C3F71745EC530826A965BBC368CF51E23351B26563DB740D4A64F77420
BF8CA6E9F744D7B0E5075783D621AADA63F5C29768F1E5026037F55F01CCBC45
8C619C36CFE15D78984ADE21A3C11DFC4992BE62C66E23DF02F072109EA504DB
98A91C6F34AA579EE5708E385C10C13CE1D3FF164D8EF3E6069944C0ABE5CEBE
CEC530F656FBBB2999FE84D35D6A3C49DEA11A9E21A007AA0F17B41BEDD29565
7F21F7054D81B65D78F8F60ADE48FDDA9AC5EF1A87E1E8ECB3FC3F66FE821BE1
C5352135F1329530D22E98A69B743281AA905EE9190ADBDDC6572B52C248DEED
49CD5A0FF3C660F34EAA6E9DEFCE11F7D2A1B684FDB07338011321C04A609CE7
7F62E43CE89081690E86FA98B3C035253842AB3109C173EF0F4C795A4154D7EC
B883EF377D117ED7AF49A7831B22F11F54214F63CF161C6B5E4A73B385403C60
D80DBB29F0151E522EB5A7E1234B8AABCEEF1E835F8FC55DA7708B7AE906FED4
A5CE88C940248A4C87AA54A2FCDC8B96B4508412A676D2FA655ADCEE07FA48E0
FF98F001CC6DB4CBA9AB6F640A807C142BDBF2005786A3B64DFFF91E8427746F
5C311A11A095E958909978767DD500DF4681284E086211729B26E8EEE6E641C2
E8DEE8A4F5B8A129B864A5601AB8E5C0BC269892CB1D97F57811E956F515FC37
3846842DC50313D5A89FA358F69DFAEDDFBBF71D0A990ACDEED7580478DBAF4B
3413C9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748076
52C3A3CCE44DFD38C1A870AF15D782F5C403C5A9A475217E3BE7967360F89551
3FBF9B83D58D8413A45EB18DF19455770726B7082E4C33F9449E6DD6F89FF265
2453807A286AFE8DA4988BEDFED0C357A977805FA702F68652A4BAE9F609047D
B5ABF832032CA1F96E550903DF9B8190F9FFFA8AD1D68385057BF5B7592F73D7
024231193023D02D89731376114C1C0300300B9EF15A312AFFAE9B89C5965996
5C1144C7F8E92600D0BAA927ABC183A538251EE2CF46FEC77739437A52505EB6
45502B99547E91C25D86F0C590D7FB9E51E09C85C5BCDE30D15CD9A0DC335FC4
B589DB92B21ABD5F4A1828236BBC63F11D5FCE4783729578878D2C9CC4DECF24
6DFCBBD6E44045F23AF2CC8C8B621E9E3271620735C9C7C11C2166CC9CC6ED53
5A8E49C834D9A67B584D1FAC4714260B22178E58171EAE1348D1FD7F86AF5DBE
94FB5A2083BF5C7671606BF4B02AE069BDB00369B9B9089CCCF80F6FB7A32308
D449594273440430824210531E56CCF19CDD823A21D4ECA36B55B270E20437A1
8E90172263A7E43905EFF7027AF9017AD7735E1F131F51421F2478EE5CD6F0A4
C535708D4AF7A08C723C249E2405110C684856B0AD97711C5F711DB7501023C7
7ABF9AC2FF873C60FFDFB5CDE38F2E6692811E2B4F5772398D674692C08DD5DB
4ABF4BBAE5E0E4EC57EF81D57771F1248A9C373D8F6415180E8013E922561CB9
5F449FB4422CD80FBBE5ECFFEF4C0C333C821861D6D3F8C207F73368B7E1BBE6
59E88FFA971BF1AB46BCDF8749BCFD7EB1AB5405F6117DD6050C275850BF2170
387FDE8CF6446A657857D5364B1D5B9E47FC6C314BBF92D32DDF93B71C25DEDD
2712EBA43E359DE0A60594F529E8FF569C969E2C21B7CBDE27F11B13CEF6A742
CC4BB2F0FCE9BF3F11A6AB840852C698E6E2D6B5D1C77BF91AB50DF83AC8EFDD
5F7D3905FE10579D4C5840352114014D24AD513EAA1CCE09EA705A06A2B6089A
5AA69D53528DEE7ECB6453A3F9D2FC6818E51A7906E6F98192A7EF6EFE726C53
1F568AEEEB7069C9F67E2A3094D7D57638D8AF3C6DD631E8D887E46ED7215507
DB3ED0285C3F4521A8C1CA768B26B0F4002F9A2006212DF8FCFBC6CBDE7C1D47
E86FBD2BC06828FA7AEF04620467CA568032FCE09F4CEC9543614DC4791E8C10
3CF91B953380802F4CD00E826B2CA809370B1A70EA8756FA90E2D1EB95F1851D
68147582622013D52428FDAB81350F9F2283A52BB2E58E9DD9EF06ECF8634030
63E0AC795E3DE91C1431FA11F8B815D914B722D3AC4F6FBB0AD7B96D8436EAD5
8A699B6F0C5A096B59695AF0334093A7D7E9D395E51367EADF9C7D7FF5006F94
17D29C77E11558EA435D893536C165205E15EC907E8300673EB7B110E261C16E
F1A023636707E94776DCA01904180A7FCCB6739FCB9B9E669526E06C23FE1147
47EB3CF0D5EFEACA02691CF7E89B09884A44FD1280BABDCD68291CE1F33FAD77
16A5520598EFFC2FCE96CD5C58EC3F98EFC84BF8C55364B31E600A974898883D
D10055B80BAD84A8A556B606051A316B406C0E0722CF433637CDDA75584ADD82
3CDCC4F1F0A96E74D38961AE0762F3C701390274F4A233B7C21EABC56271E0D2
6E93B1D14DE9BB73AF0AE80410C4FBC3A45FBE3BA4418302157BF2B0150F2F0E
35F4D000DC45CD6405E4C313B125739FAB9FBEF8523676B7509EA7AD0D2111E1
F5EE8EE1EDC4194F1012D8BB958B6940681AEA50C1159136CB9924F00FCF022C
6BD7CE581962C9DE36E82A56688B4CE4CE5A22C8DE2B88B707256FB5CF708616
6588DF5F2653C608EEC3D845B12F3975C5EAFB93DC536F9378745B5D0D85BA53
0F6E03D6DD8F9BBCF86246F9F067E85CE7CCA0159D54173C987AC69523C03FEE
AFEF61BFC22E8A197923318D8C7EF76234F059E8AD831CD1246D6F5B95E167EC
1B9AC6B75758E891A58AF41E48594F0187623EFC53124A705C0754455CC99AA2
7A20D8532E4FBD1BCF8D17195FA77CF9CA859F1C372B31188EC46F220F96A1F9
A4A8DF5D4CBA49A52A922DC8840158316D93C55879AD6B4050C0CA1D6432B8D5
E7C732C00B7D3AE0A4E10B9335E216AC3652A5637622F4D297E7CEB9E905E742
5CFBCF1BA4187855A0103A52C957714867F903CC857F1DCE107B4AAF1BF56F31
17CE9AFE8C7ADC45A62C8B7E64DCF5D8921D16445F44655915145FB2F1C45AB3
8AECFF718C91E962C0CD3650660661D219E71E7E92A91AD3C3BF1ED1C81D2445
5438BE5CBE232EE25191E6603A02F6187C1C7F16F47C061DD6CACAEC5C34604D
3CFC1E42F8BE9B4A4F89919CB1FADE877AF95DB6BC568E9267C70431EA108BB2
896B20751455F3795F6586D3259CFD14C35A95B67643E36E7ED6F6827EEB2E1B
AFEC53CE0C72B5BCECB20BF1F512D1CBBE613293964DF2EF5AAD744E2151D5B8
DED282DBB653F770926BA75351CA3D37092F4F5C9F5586E10D97034F71A0F36F
366719BED7D1739274653D9A629532C938403902E77C6DBB6C1AA9EB7B94F72B
532336EAFFBF7D32B12F52154E25F7A10D614BA2E9BF4CCD6561564439515921
C4B63D484CD2FAD5CA1D0C237CD2EF0104D133E10F613DA09A180E94ABD37469
7C3AFA26353DA09845C665A8C7DCD9984E6F929579F3DFC3B8916CF4B48E2A26
3D0CDDF89238882ED8D4E2DE17F11CFBA5E1778EC457165E90343CB99D54C456
F371766A054DFDE5243CE31BAF2C3B25BC908313F7EA76C3B026E3EB1B4CA583
A6397F97A98055D5DDFFCABDBE916B3FAEB44EC64A7599B9EF51D4F98F000A45
704649F624CDF74017CB14BA25C57A85396F8D383174A13912A852220EEDDE4B
5A9497BD0490D5568AB1F7BE4E8979A8B4618C566D4AFA619B81D85443B7401A
E791386738A20005782E9B13FA671BBCBA2B676B44215E495D5AC3ACC4A3F012
8A7CBA5137A4C3EDC050A7160182BA3E72AD84CF19432D9D2C796504B1E050E5
56549504B2FE9A796EE402C57BD7F15C467E14FAE6E5C471EFF750E072449459
B82692500C8B2D1DB2B7629BD76FFBCB86E03DA9721E0932ED6F85CB646CF3D8
8DB0093AC0D70901EA2DE5E5D3F83CF43AEFA28DE8C910D17D6DC5936642CD62
AC8590C632DEE6E7EB4579FAB5F4DB9EC728B2C178F38DB025F12DD02CEEFF79
BB366EFECAF181C2C20C7E489E2AFAF025F2D061A74960399974D8C1654D5F94
72C951E01CCEFC2E00C4FB75218D4D2F3B292AB9E510F827102AD6778FA10CFC
45429668C151075D47B859294184B8857226673F2DF3C794C6DDEFA32F5581F2
81B05A5D8D0B557C4AD73964959DAC060CB9B8449502613C4E9B792296D0AF6A
BB1B0BC8412BBCE5377BAC9320F1A8EB15D04096A9A8ACE9457E5FB6F1B6E75C
B107728E89FCA9A71BF4E5A2B67441884DD2DEE898EB18C197738B7006F10790
ED60E8175A799469B81FCB5526464CA69C70CF0245B49AA46FFC27B737B56C08
BE0AAFCB242CAE35F094A00AD0CD23513339C92F8ECCA98ECAEADF4BEB541A4E
5D9EFA52D086DADDEB9FB83FF99D57134D2CC72EBF6E14586705BEFE8D287325
3CA494981A59048803CBD86BC93610366B7B687A9B6078229A9AFF0FFB1E1D61
FC899F59AE1701BCE90F725BEE6C9E4414CB24DAEABE65F989F8BC2C66F93633
8E3F2155DCD0FE6D88F1E9D18EAFCA56BD2F25BCDC92883F9F4DBDFC8ACB7FDF
99C2FC21F1A03050F1BB0C770972C84ABE6D201706C75199D4E7879C8853F118
B5D677CBB8B77010777295272A3E15B77253E286BE3BD6D41DED5B8FF65C2972
DF4F7C66E4F049F51A347E6AEACCF443D19E3EC3297F164BAF5DB589B02ED2D0
DEF2A27722A007CA1C7323EBFB66E3C266B7FA62DA69E5A1A6B5712960540ED1
66A742FF370073270A4A3CBD6B72F49E6F18A746EA3FF05C6E5330540642A0B2
4EF182B4CA7D93ADF7D484C6C6FCF400F041F39E36C0719AEAA31092B310C1FB
01D1311634689BD0A9575F15636472F53625F1F57954DDE1346F617260540505
D54612CF35F7464385A2DE9360283714C1F3495DDA98EFD64332E2BF7FE5F25D
B9D6C8CC4A06074F2C56E541A2D20D3DD0C4385CE2B3D509D4771AB8A0982AD4
A4933D12632B29F64106A2BAC18A80185976FF0CD4B110984BA635F053F62C41
EE5063BEA56392070BC2C95570AB3FD98085B9BC58D89EE3224701FE1B732CD1
4C390E964F31E0DA3FEF23029C4224EF73F5BCC3C7FB392ECD8B2DD261443CF4
9D7238BCDB2923ED13AB8733E7433D1CB8D0532B569E82CD9E6EA2D9B2FFD706
8E0E475818A5B1FEC0846B40CB166A985A963566177CB7125824683EBED5AF88
8E9412803B15C5BBACCDD304D53EC504C77F9DB8862B4C3E5BD1F88D5550EE7A
4079CCCE4D514CB333BAC1890D4AD22D8A5796D876167B5CE14719A1203B9BEF
636F27C518ED07C4BC316063C90893FC84B624CE995D28A6A0FAD225B8A8F973
C942C7916470120483A0A46181E620785023C6AE7F054E145878657E150DEB42
5BB4E7B1926202E03342C22E60969F2695D5A36599AB96502B0A73EDA3290C8D
99CC2D23E0AA00B7F6629B7B24B6A64BC55E887C7FB0AB7217B80BB25962D6D0
AB9021C476AAE76AF7C06F67CA9ADE2296718325BC1FC67706CDDB16FF297A41
341D8DCB0D51B143EC3C533FEC4589844D9A272755374FB83B393E3570A4478A
E40D0D971E27961471B0674C50BB540A6CCCCD3DF3E1D172888FE3D9E7F72042
6C2CB35945CADBB47E29DE30C08074251ADBD8E12B368B1BF47D700E564573D9
BC26D0D7160B4D67E892F4235ED080BF9277272DDC447AF706CA4CB8FF46BBCA
32D97F4C56A4DFF109512F6AFD56F364D5B8AD4C61ED9387EA2AE75E4F8A6030
7497287AF22FCEA988004669B85C4D024544171D4389E34CCE4F85FD2BA128A1
B532FF33AC85FB3D7C3ADFD276D318257DEA92F72D63E38EAC365023C3FF10C2
8D5E36C0692A40F6F50F30A3925EFB775B360F4E681396C1426506E88D275CA3
A3DFB0E432C40970161463CCAEAF5CBB7005553603FEDAAA96D75452A5D06B65
6010AD04BCF165F92C960CA8B25868C7B35D1EEA0157AE0AE82910F599E180A4
0F2DA2EC5371E749DC51B09F20894FF2361B303BAEFA0749645AC7D441230090
E4980388917778CCEA4BC1006462147A6E997613292485DCE9557B034810B851
FFFF178D49087AB030184993F78229C1C4E6E7320937F650FE0FC23EE5F61804
3BE8CA40517B7CE4A9EA996E03E46E290C456AC447E129551DC442233A8AC74B
A453A0FE43E60EB948B194C37713395D4978CBF8EAF3F05D7649F56F30422FA1
6D6013E162F30D016F35AF77172A17C16E34BAF10D7DA94FC9262C9F2908BA93
067377DEDDD9DF1192681B9A9C32CDD3192FD25EDC97BACCDBE299A47028D5EF
20F8C1BA1691D8A2624E009FA4665A033C90C2FB535428012E5EA7153B0C1DD0
C58EAF9CABA45CA3D2BBD09EDE2BD6F11A3D3CDDDCA505778F9E6DAD017DD41A
4FBBF90852FB0135244B29BDD6CE32F6631B648D50C890A35345C2C525F6DDA7
868A5DA386C790DC4214C092DAAC9129F88C31C2C7C0A4E9F42D7743D27D825A
DEF0B1AAFAA1E51C249054A40A939A396EC4B281B64CF1B2061234E1E7E9C2C7
2E40C7473546D2FE95AD9236D8E97AD688CE68301BB86B7BE85DD9E8DE63C317
418C62F894D0C276757A2C490CD5E922C63AD659428780FECF3348E53D86AA24
0C2765B57AF8906A76A7A0011C21C2E6C08A507F946BE93AEED447DD44A44D5F
D47EF5715B274F7113D42107A959BFCAEEE1F0E3128A51CD858137C1D308DA98
F7D304459210491F5BA48DE001C331780911B0C20ABD6DE609B8265395A4EDCA
816BCBE3182FBB78900BCE8AB5332F5CED3728BB9CA21C67CA9898B709AF6D0F
C0416B1A3F7ACAF21C1047E066BD0E74EEC19718215A786C1E1C97CF62521FC7
3D6B5DAC9DA2C440DA922D6B04C92E46F41CB2FCC1B616DC83198B3A4F76972A
147EB2808BC841BCA327EFE9B28268EE2A7FA04F1826F8A231EEE8F012ECE4CC
A09ED8A3443DA4179D97E78C6D4E73652298FAE76BB5B788F7A9CB2ACFCBFC2E
7E3F305A7D7149A53BF03B2FC2DB099F16841549FCCC03E6163E9014E3F1C024
EE808B35E9F34AD3EFEC6F1CF65D00A1AC344FAD69D61ED3D17A6C51392CB757
620E84A590F37333615134BFCBEF74A250C7667A47C42B408E2C62424758CE4C
5810268E28FB216ED99E815509F17C6280168ACB1F9F0E8E558570E82F116BA6
B95874C0BFAAF46DE23459D02E9386BE1C7DC1276200A16D6DEDBFE3A3250DE0
DDA0B15CD850EE56C17C9D12B83CEDE93436DF1D263DC214F095B3DF4ED57407
E78F35527DCB648CF66E460376570A7312CCCB1DCBF96602D771657F67AD4EF7
850D5573B832E36454D6674AAE95D34FAB557E37C5927D89FEF2B6F59AAF1B56
56E36639D9E284D69B038D3104255A8A2318FA15E33FFF30F88327240D98DDFF
BB33FD1E761B98892C32C5A66F65D998F86856673730C02D2311060EA1E8300B
C51AF8EA9F7A6A09B694126E40A29BD8E3C2BCF18BAE25035CF3A6AEAF168DAE
219437AA1338140058F548E6F5098A092A834E458F114D75D76C42EB4676F2EF
F9742B4AD1D08B7F0B1FA8387ADB2FB85F323F15D512416F13EB08811B09B34D
3031B2C4FC95250C2B2BACB15625DEFC3CA56FDBA03D51EA2982B1C43C77FCCA
17D785652EA07014B40FCB3D4952C9A8182B01FDF73E202079765BC9BD9FAA8A
4DE7E630E65D738A99BDF230C31FC02225B79A6B771809CB5768E774CDC26D50
A3BCE60773DF5F7EC4901A991EC54943EEB2056B5030E29A2C8C4C22399AA84F
499331ACE1078A5AE9E466A1DFCAB9CD76849D9CB6027F693B4707637D07BC2C
B62CB9FA0E38384831994B723D99D6C0184D5568E73473E8AEB6DDFCBD2753DF
9C19DB604682952085E12399CCB3F798BD5D6050ED4E69C55D3C7DEFF3E8E7BE
EC59F85AE674DDE96493177F321009B6EBB4CED13443044D672CB7C4A05B48B2
53A8E98C8F8E13F6059A1A12104990B6678B06164265356C2638203B47A6D9E0
1B87D0706243CE4474937BA3329730940E1FB187CD2721D0EB5560FEE2C7D08A
7E527CA4046F50F2DEBC28FE76ED3ECFF2DDD0AAABE59363C90CD5FDBCC4188E
444D4CA2EE2672B7424EEC0452AD9B4B86B8BEF4CE9318FEF2D722CEC7BA2653
72C79BAF2E6AB4C3D07FDAE5837FFEEA9DFF882D3ED3715D7CC586A8223E7933
5B3F91FCCE4F9098E99B2A953B9976A0803CE31C0AE830D5E3530C86BAD23BFC
C01D5801513616260110CB1664DD6C5AEACD57605D6EEAA6AB839C46F20654E6
019BDBF850A1046D72976407B1706A3FF7F8A6E89B07FF2C4CD31955A6B291CD
EF05F1D574DDD77B08949482EA62BB5B8435A07F2C8C310C33AD976F2BA4D276
78604DD8BCEF8B986CB749587047A7DC6E82FB99438AB8B04660DA6B4E2B401B
ACC7293F08C8585363BFDD9E635B7E3BFBE92D9EC3FAEAD25A855503F5666B94
C8A2633648A84968A5343CBEF773CE3813E7D89B43504E95D090CDE62F05FEF7
D0AC2C4CB0085598FE290E58053FEE2D885F4768F7AB78D34DCDD855E9DCE60D
EA076B7C642835E13DA16C5C590D01C70CAB6EFBD9F053604BB30D402CAE16E2
852A02CE3991A5654A968CDB77632D39CB73ECDE28F7D177CF53367A1F556A64
9E4CC290850E04BE6D6F7EB6B4DC4DE6CFB0B61DADB646FB52E1D200692670ED
7E20F889050100DD75C7702A8DE7A64F933FEEE08B8C9672543C3C9177DF5744
06CD743EEDC1C29D6C363B2B20BF8EDA2702
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (38_SysComp.dvi)
@start /Fa 133[30 33 33 48 33 37 22 26 26 1[33 30 37
52 19 2[19 33 33 19 26 33 27 31 30 3[22 1[22 1[44 48
1[48 52 41 37 44 52 41 52 52 63 37 1[22 22 52 48 37 41
52 44 41 48 6[17 33 33 1[33 2[33 33 33 33 20 17 22 3[22
22 19 39[{ TeXBase1Encoding ReEncodeFont }62 66.6667
/URWPalladioL-Ital rf /Fb 87[22 17[33 1[33 33 24[33 37
1[56 38 40 22 28 26 37 40 36 39 59 19 37 1[19 39 37 22
32 41 30 37 33 3[22 1[22 44 44 44 67 48 52 41 35 45 52
40 52 55 63 41 48 22 22 55 51 37 41 52 47 41 52 6[17
33 33 33 33 33 33 33 33 33 33 40 17 22 17 2[22 22 40[{
 TeXBase1Encoding ReEncodeFont }73 66.6667 /URWPalladioL-Roma
rf /Fc 139[26 3[48 48 48 70 22 2[22 3[44 1[44 1[44 23[22
5[57 16[44 44 2[22 46[{ TeXBase1Encoding ReEncodeFont }15
79.1666 /NimbusSanL-Bold rf /Fd 107[40 25[40 44 41 66
45 48 26 34 31 44 48 43 46 70 23 44 19 23 46 44 26 38
48 35 44 40 3[26 1[26 3[79 1[62 49 42 53 62 48 62 66
75 48 2[27 66 60 44 48 61 56 1[62 5[20 20 40 40 40 40
40 40 40 40 40 40 1[20 26 20 2[26 26 22 2[40 32[48 48
2[{ TeXBase1Encoding ReEncodeFont }69 79.1666 /URWPalladioL-Roma
rf /Fe 134[44 2[44 1[26 35 31 2[44 48 4[26 48 44 31 40
48 35 1[40 13[48 57 3[66 8[48 18[40 40 49[{
 TeXBase1Encoding ReEncodeFont }21 79.1666 /URWPalladioL-Bold
rf /Ff 172[61 66 3[66 8[61 1[66 16[51 51 49[{
 TeXBase1Encoding ReEncodeFont }7 91.6666 /NimbusSanL-Bold
rf /Fg 166[49 2[49 1[45 49 53 2[57 53 4[20 53 57 45 49
53 53 1[53 65[{ TeXBase1Encoding ReEncodeFont }15 73.3333
/NimbusSanL-Bold rf /Fh 202[32 32 32 32 32 49[{
 TeXBase1Encoding ReEncodeFont }5 58.3333 /NimbusSanL-Regu
rf /Fi 133[33 33 1[48 33 37 19 33 22 1[37 37 37 56 15
33 1[15 37 37 19 37 37 33 37 37 12[41 3[44 52 5[19 48
1[41 1[48 48 44 19[19 22 19 2[22 22 37[33 2[{
 TeXBase1Encoding ReEncodeFont }38 66.6667 /NimbusSanL-Regu
rf /Fj 139[22 37 26 14[37 41 37 31[48 65[{
 TeXBase1Encoding ReEncodeFont }7 66.6667 /NimbusSanL-Bold
rf /Fk 138[23 14 1[16 3[23 4[12 1[21 1[16 3[18 13[23
14[32 68[{ TeXBase1Encoding ReEncodeFont }10 41.6666
/URWPalladioL-Ital rf /Fl 168[117 2[72 61 4[97 3[39 39
5[83 1[91 65[{ TeXBase1Encoding ReEncodeFont }8 116.667
/URWPalladioL-Roma rf /Fm 166[62 2[67 1[57 49 62 2[73
78 88 57 68 1[31 78 71 1[57 72 66 1[73 65[{
 TeXBase1Encoding ReEncodeFont }17 93.3332 /URWPalladioL-Roma
rf /Fn 171[123 3[121 1[166 5[166 153 14[100 4[100 51[{
 TeXBase1Encoding ReEncodeFont }7 200 /URWPalladioL-Roma
rf /Fo 168[160 1[124 98 1[107 1[97 126 1[151 98 116 5[98
124 113 1[124 65[{ TeXBase1Encoding ReEncodeFont }13
160 /URWPalladioL-Roma rf /Fp 172[122 9[78 167 1[111
1[167 68[{ TeXBase1Encoding ReEncodeFont }5 200 /URWPalladioL-Bold
rf /Fq 170[124 107 1[116 1[98 133 133 160 98 2[62 1[133
89 98 1[116 1[124 65[{ TeXBase1Encoding ReEncodeFont }14
160 /URWPalladioL-Bold rf /Fr 175[60 11[77 11[50 4[50
50 50 50 3[25 44[{ TeXBase1Encoding ReEncodeFont }8 100
/URWPalladioL-Roma rf /Fs 166[53 6[53 1[48 63 1[76 6[44
49 62 57 49 62 65[{ TeXBase1Encoding ReEncodeFont }11
79.9999 /URWPalladioL-Roma rf /Ft 172[87 15[118 67[{
 TeXBase1Encoding ReEncodeFont }2 166.667 /URWPalladioL-Roma
rf /Fu 166[89 4[82 70 89 1[81 105 111 126 3[45 3[81 3[104
65[{ TeXBase1Encoding ReEncodeFont }11 133.333 /URWPalladioL-Roma
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -31 705 a @beginspecial 0 @llx
0 @lly 345 @urx 435 @ury 1133 @rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;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&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 548 1125 a Ft(C)8 b(S)51 b(C)8 b Fu(A)g(P)g(S)g(T)e(O)i(N)
g(E)92 b Ft(S)8 b Fu(Y)g(S)g(T)g(E)g(M)52 b Ft(C)8 b
Fu(O)g(M)g(P)l(A)g(R)g(I)g(S)g(O)g(N)1525 1425 y Fr(D)t
Fs(E)t(C)t(E)t(M)t(B)t(E)d(R)36 b Fr(3)t(,)31 b(2)t(0)t(1)t(8)-2
2025 y Fp(I)10 b Fq(M)g(P)n(A)g(L)g(A)60 b(P)10 b(E)g(R)g(F)g(O)g(R)g
(M)g(A)g(N)g(C)g(E)57 b(T)10 b(U)g(N)g(I)g(N)g(G)61 b(O)10
b(N)61 b Fp(H)10 b(D)g(F)g(S)1617 2350 y Fr(P)t Fs(R)t(E)t(P)m(A)t(R)5
b(E)g(D)36 b(F)t(O)t(R)1046 2700 y Fn(H)10 b Fo(E)g(W)g(L)g(E)g(T)g(T)
59 b Fn(P)-6 b Fo(A)10 b(C)g(K)g(A)g(R)g(D)1006 2954
y Fl(A)c Fm(N)g(D)g(Y)34 b Fl(W)6 b Fm(E)g(I)g(S)g(S)p
1910 2954 1350 4 v 3410 2954 450 4 v 3088 3067 a Fk(Signatur)o(e)520
b(Date)1649 3417 y Fr(P)t Fs(R)t(E)t(P)m(A)t(R)5 b(E)g(D)35
b(B)t(Y)1492 3767 y Fn(G)10 b Fo(R)g(O)g(U)g(P)59 b Fn(3)10
b(8)1372 4117 y(T)g Fo(E)g(A)g(M)60 b Fn(N)10 b Fo(A)g(M)g(E)871
4371 y Fl(C)c Fm(A)g(I)g(T)g(L)m(Y)g(N)34 b Fl(C)6 b
Fm(O)g(O)g(K)p 1910 4371 1350 4 v 3410 4371 450 4 v 3088
4484 a Fk(Signatur)o(e)520 b(Date)925 4696 y Fl(I)6 b
Fm(L)g(I)g(A)g(N)g(A)33 b Fl(J)6 b Fm(A)l(V)g(I)g(E)g(R)p
1910 4696 1350 4 v 3410 4696 450 4 v 3088 4809 a Fk(Signatur)o(e)520
b(Date)618 5022 y Fl(N)6 b Fm(I)g(C)g(H)g(O)g(L)g(A)g(S)34
b Fl(S)6 b Fm(K)g(I)g(N)g(N)g(E)g(R)p 1910 5022 1350
4 v 3410 5022 450 4 v 3088 5135 a Fk(Signatur)o(e)520
b(Date)1097 5347 y Fl(A)6 b Fm(M)g(Y)35 b Fl(T)n Fm(A)6
b(N)g(G)p 1910 5347 1350 4 v 3410 5347 450 4 v 3088 5460
a Fk(Signatur)o(e)520 b(Date)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 1815 -144 a Fj(Abstract)127 25
y Fi(He)o(wlett)24 b(P)m(ac)o(kard,)i(Inc)f(\(hencef)n(or)s(th)h(HP)f
(Inc.\))g(currently)h(uses)g(an)f(Or)o(acle)h(database)f(to)g(store)g
(industr)q(ial)g(IoT)g(data)g(gathered)g(from)f(large)8
137 y(pr)q(inting)f(presses)o(.)g(The)g(Big)g(Data)g(team)f(is)h
(interested)f(in)h(mo)o(ving)g(this)f(centr)o(aliz)o(ed)i(database)f
(to)f(a)h(distr)q(ib)o(uted)f(system,)g(with)h(special)g(interest)8
250 y(in)d(mo)o(ving)f(from)g(the)g(current)h(shared-e)n(v)n(er)r
(ything)i(architecture)e(to)f(a)g(shared-nothing)i(architecture)o(.)e
(F)m(rom)g(pre)n(vious)i(research)g(done)e(b)o(y)h(the)f(Big)8
362 y(Data)i(team,)f(Clouder)o(as)i(Impala)d(has)j(been)f(selected)g
(as)g(the)g(pr)q(imar)r(y)g(candidate)g(f)n(or)f(implementing)g(the)g
(ne)o(w)h(system.)g(T)-8 b(o)20 b(begin)h(in)o(v)n(estigating)8
475 y(the)e(possib)o(le)f(ne)o(w)h(systems)o(,)g(our)g(team)e(\002rst)i
(needed)g(to)g(understand)g(HP)g(Incs)g(current)g(system.)f(In)g(the)h
(\002rst)g(half)f(of)g(this)g(repor)s(t,)g(w)o(e)h(present)g(our)8
587 y(research)i(on)e(shared-e)n(v)n(er)r(ything)h(architectures)g(and)
f(their)g(speci\002c)h(implementation)d(in)i(Or)o(acle)g(databases)o(.)
g(In)g(the)f(second)i(half)n(,)e(w)o(e)h(introduce)8
700 y(shared-nothing)h(architecture)e(as)h(a)g(whole)g(and)f(its)g
(speci\002c)i(implementation)d(in)h(Clouder)o(a)h(Impala)f(databases)o
(.)p eop end
%%Page: 1 3
TeXDict begin 1 2 bop 4018 -296 a Fh(1)-148 -144 y Ff(C)t
Fg(O)t(N)t(T)t(E)t(N)t(T)t(S)-150 80 y Fe(1)178 b(Shared)24
b(Everything)3264 b Fd(2)68 224 y(1.1)197 b(Concept)72
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
135 b(2)68 368 y(1.2)197 b(Implementation)45 b(.)c(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)-150 591 y Fe(2)178
b(Shared)24 b(Nothing)3361 b Fd(3)68 736 y(2.1)197 b(Concept)72
b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)
g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
135 b(3)68 880 y(2.2)197 b(Implementation)45 b(.)c(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(3)-150 1103 y Fe(References)3763
b Fd(4)p eop end
%%Page: 2 4
TeXDict begin 2 3 bop 4018 -296 a Fh(2)-148 -144 y Ff(1)96
b(S)t Fg(H)t(A)t(R)t(E)t(D)33 b Ff(E)t Fg(V)t(E)t(RY)t(T)t(H)t(I)t(N)t
(G)-150 26 y Fc(1.1)79 b(Concept)-150 197 y Fd(In)21
b(a)g(shar)o(ed)f(everything)i(envir)o(onment,)e(all)h(servers)g(and)g
(workload)h(can)f(access)f(to)h(the)g(same)g(shar)o(ed)f(stor)o(e.)h
(Meanwhile,)f(they)h(can)-150 341 y(r)o(ead)g(and)h(write)g(any)g
(portion)g(of)g(data)f(they)h(want)f(easily)-9 b(.)21
b(In)g(contrast)h(to)f(shar)o(ed-nothing)h(envir)o(onment,)f(the)h
(main)f(featur)o(e)g(is)h(that)-150 485 y(clusters)e(ar)o(e)f(able)h
(to)h(exchange)f(data)g(with)g(other)h(during)g(computing.)f(This)g(is)
g(one)g(of)i(the)e(solutions)g(for)h(parallel)f(database)e(system)-150
629 y(and)23 b(when)g(pr)o(ocess)e(huge)i(data)f(set.)g(T)-7
b(o)22 b(make)g(clusters)g(interactive,)g(ther)o(e)g(ar)o(e)g(multiple)
g(ways)g(of)h(how)g(clusters)f(access)g(data)g(fr)o(om)-150
774 y(other)-6 b(.)-31 918 y(Above)30 b(\002g.1)g(is)h(a)f(basic)g
(diagram)h(shows)f(the)h(dif)o(fer)o(ent)g(ar)o(chitectur)o(e)f
(between)h(shar)o(ed)f(memory)h(system)f(and)h(shar)o(ed)f(disk)-150
1062 y(system.)e(In)g(shar)o(e)g(memory)i(system)e(database,)f(each)h
(node)i(or)f(pr)o(ocess)f(is)h(working)h(with)f(the)g(same)f(memory)-9
b(.)29 b(If)g(a)g(node)g(needs)-150 1206 y(the)f(calculation)g(done)g
(by)g(other)h(node,)g(it)f(can)g(access)f(the)h(updated)f(data)h
(easily)f(fr)o(om)i(the)f(shar)o(ed)g(memory)-9 b(.)28
b(In)g(shar)o(ed)g(storage)-150 1351 y(system,)23 b(all)h(connected)h
(system)e(shar)o(e)h(all)g(disk.)g(Each)g(cluster)g(still)g(has)g(it)g
(own)h(local)f(memory)h(and)f(can)h(access)e(to)h(disks)g(thr)o(ough)
-150 1495 y(inter)o(connection.)-31 1639 y(Shar)o(ed)g(everything)g
(focuses)g(on)h(maximizing)e(r)o(esour)o(ce)h(utilization)f([1].)i
(Since)f(data)g(may)g(be)g(cached)h(in)f(multiple)g(places)f(and)-150
1783 y(accessed)33 b(by)g(any)h(node)g(in)g(the)g(system)e(at)h(any)g
(time,)h(data)f(consistency)g(and)h(contention)g(may)f(become)h(an)f
(issue.)f(Although)-150 1928 y(shar)o(ed)27 b(everything)h(enables)f
(high)h(scalability)e(and)i(performance,)g(they)g(ar)o(e)f(limited)h
(when)g(lots)g(of)g(data)g(ar)o(e)f(traveling)g(thr)o(ough)-150
2072 y(the)g(inter)o(connection)h(at)f(the)g(same)f(time.)h(However)-6
b(,)27 b(shar)o(ed)g(disk)g(pr)o(ovides)g(fault)g(tolerant)g(ability)-9
b(,)27 b(which)g(mean)g(if)h(one)f(node)h(is)-150 2216
y(fail)22 b(then)g(other)h(node)f(can)g(complete)g(the)g(task)f(as)h
(well.)-31 2360 y(The)h(choice)i(of)g(data)e(str)o(uctur)o(e)h(is)f
(and)h(important)g(decision)g(that)g(in\003uence)g(on)g(the)g
(performance,)g(stability)f(and)h(accessibility)-9 b(.)-150
2505 y(T)i(abular)16 b(data)h(ar)o(e)g(inher)o(ently)g(r)o(ectangular)
-6 b(.)16 b(Mor)o(e)i(strictly)-9 b(,)17 b(every)g(r)o(ow)h(has)f(the)g
(same)g(set)g(of)h(column)f(nodes)h(and)g(every)f(r)o(ecor)o(d)h(shar)o
(e)-150 2649 y(same)25 b(variables.)f(However)-6 b(,)25
b(nested)h(data)f(ar)o(e)g(inher)o(ent)h(in)f(tr)o(ee)h(layout.)f(This)
g(str)o(uctur)o(e)g(can)g(be)h(expected)f(to)h(faster)f(than)g(tabular)
-150 2793 y(since)31 b(it)g(enables)g(pr)o(ocesses)f(to)h(r)o(ead)g
(less)g(data.)f(Dr)o(emel)i(and)f(Solar)g(ar)o(e)g(two)h(successful)e
(distributed)h(system)f(that)h(implement)-150 2937 y(shar)o(ed)i
(everything)g(ar)o(chitectur)o(e)f(with)h(nested)g(data)f(str)o(uctur)o
(e.)h(Accor)o(ding)g(to)h(\224Dr)o(emel:)e(Interactive)g(Analysis)g(of)
i(W)-7 b(eb-Scale)-150 3082 y(Datasets,\224)19 b(it)j(claims)f(that)h
(nested)f(data)h(str)o(uctur)o(e)f(help)g(their)h(shar)o(ed)g(disk)g
(system)e(access)h(data)g(faster)h(and)g(r)o(educe)g(CPU)f(cost)h(due)
-150 3226 y(to)h(cheaper)g(compr)o(ession)f([2].)h(On)g(the)g(other)g
(hand,)g(Solar)g(used)g(the)f(shar)o(e)g(everything)h(ar)o(chitectur)o
(e)f(base)g(on)h(tr)o(ee)g(data)f(set.)g(They)-150 3370
y(incr)o(ease)f(the)h(performance)h(and)f(scalability)f(by)h(adding)g
(storage)g(nodes)g(that)g(ar)o(e)f(used)h(for)h(data)e(storage)h(and)g
(r)o(ead)g(access)f([3].)-31 3514 y(Oracle)f(is)f(a)g(shar)o(ed)g
(everything)h(database.)e(Specially)-9 b(,)18 b(Oracle)i(uses)f(data)g
(dictionary)h(to)g(stor)o(e)f(their)g(metadata.)f(Data)h(dictionary)
-150 3659 y(is)i(formed)i(with)f(tables)e(and)i(views,)f(and)g(is)h
(being)f(access)g(fr)o(equently)h(by)f(dictionary)i(cache,)e(wher)o(e)h
(Oracle)f(keeps)g(data.)g(The)g(view)-150 3803 y(in)i(the)h(data)e
(dictionary)i(allows)f(users)f(to)i(access)e(and)h(r)o(ead)g(data)g
(only)-9 b(.)24 b(The)f(oracle)g(server)g(accesses)f(these)h(two)g
(locations)g(in)g(or)o(der)-150 3947 y(to)f(shar)o(es)f(data)g(for)i
(users)f(access)f([4].)-150 4221 y Fc(1.2)79 b(Implementation)-150
4392 y Fd(Oracle)21 b(is)f(an)h(example)e(of)i(a)g(database)e(system)g
(that)h(implements)f(the)i(shar)o(ed-everything)f(model.)h(The)f(data)g
(contained)h(within)g(the)-150 4536 y(Oracle)g(system)f(is)g
(accessible)g(to)g(all)h(the)g(pr)o(ocessing)e(units)i(without)f
(limitations)g([5],)h(meaning)f(that)g(the)h(parallelism)f(implemented)
-150 4680 y(within)f(the)g(Oracle)g(system)f(is)h(not)g(limited)g(to)g
(the)g(data)g(access)f(that)g(an)h(individual)g(node)h(would)f
(possess.)e(Rather)-6 b(,)19 b(all)g(dispatchable)-150
4824 y(agents)i(associated)g(with)h(the)g(database)f(ar)o(e)g(capable)g
(of)i(accessing)e(all)h(the)g(data)f(contents.)-31 4969
y(Oracles)29 b(shar)o(ed-everything)f(ar)o(chitectur)o(e)g(does)h(not)g
(r)o(equir)o(e)g(data)f(partitioning)h(to)g(enable)f(parallelism)g(by)g
(default;)h(data)f(is)-150 5113 y(accessible)17 b(fr)o(om)i(all)e(pr)o
(ocessing)h(units)f(without)h(limitations)f([5].)i(Parallelism)e
(within)h(the)g(Oracle)h(system)e(is)h(implemented)f(thr)o(ough)-150
5257 y(dividing)22 b(a)e(query)h(into)g(smaller)f(components)h(called)f
(granules.)g(Granules)h(r)o(epr)o(esent)e(a)h(fraction)i(of)f(a)g
(query)-9 b(,)21 b(and)g(can)f(be)h(assigned)-150 5401
y(a)h(speci\002c)f(block)h(range)g(in)g(memory)-9 b(.)22
b(These)f(block-based)h(granules)f(ar)o(e)g(assigned)g(a)h(position)f
(within)h(the)g(memory)g(or)h(the)f(storage)p eop end
%%Page: 3 5
TeXDict begin 3 4 bop 4018 -296 a Fh(3)-150 -144 y Fd(of)34
b(the)f(Oracle)g(system,)f(and)h(will)g(do)h(all)f(actions)f(within)h
(their)h(block)f(range.)g(Partition-based)f(granules)g(leverage)h
(individual)-150 0 y(partitions)d(of)j(the)e(database)f(to)h(further)h
(optimize)f(query)g(r)o(esolution)g(speed.)g(Individual)g(granules)g
(ar)o(e)g(capable)f(of)i(pr)o(ocessing)-150 145 y(alongside)22
b(other)g(granules,)g(enabling)f(parallel)h(execution)f(along)i(the)e
(system.)-31 289 y(Upon)f(r)o(esolving)g(a)h(task,)f(a)g(granule)h
(will)g(need)g(to)g(r)o(eport)f(its)h(r)o(esult)e(set)i(to)f(another)h
(agent.)f(The)h(action)g(it)f(will)h(take)g(to)f(complete)-150
433 y(this)k(task)f(is)h(known)h(as)f('data)g(r)o(edistribution',)f
(and)i(it)f(is)g(a)g(key)h(component)f(to)h(many)f(non-trivial)g
(parallel)g(operations)f(including)-150 577 y(parallel)d(aggr)o
(egations,)f(joins)h(and)h(sorts)f([5].)h(The)g(individual)f(granule)h
(does)g(not)g(know)g(the)f(br)o(oader)h(context)g(of)g(the)g(operation)
f(the)-150 722 y(r)o(etrieved)g(data)g(will)g(be)h(used)f(within,)g(so)
g(it)g(must)g(pass)e(the)i(r)o(esult)g(set)f(to)i(a)f(subsequent)f
(operation)h(on)g(the)h(r)o(esult)e(set)h(contents.)f(The)-150
866 y(query)26 b(coor)o(dinator)h(will)f(dispatch)f(an)g(agent)h(to)f
(grab)h(the)g(r)o(esult)e(set)h(fr)o(om)i(the)e(pr)o(evious)g(granule,)
g(and)h(assign)f(the)g(new)h(agent)f(a)-150 1010 y(granule)d(of)h(work)
f(to)g(pr)o(ocess.)f(This)h(series)f(of)i(events)e(is)h(r)o(ecursively)
f(performed)i(until)f(the)g(end)h(query)f(r)o(esult)f(is)h(r)o(eached.)
-31 1154 y(For)f(further)h(query)f(optimization,)e(Oracle)i(is)g
(capable)e(of)j(operating)e(on)i(the)e(same)g(pr)o(ocessing)g(paradigm)
g(as)g(a)h(shar)o(ed-nothing)-150 1299 y(system.)33 b(If)i(the)g
(Oracle)g(partitioning)g(featur)o(e)f(is)g(enabled,)g(Oracle)i(will)f
(assign)e(each)i(table)f(a)g(smaller)h(r)o(esult)e(set,)h(minimizing)
-150 1443 y(the)24 b(amount)g(of)h(data)f(that)g(needs)g(to)h(be)f
(scanned.)g(Oracle)h(claims)f(that)f(the)i(partitioning)f(system)f
(carries)h(the)h(exact)e(same)h(parallel)-150 1587 y(pr)o(ocessing)17
b(capabilities)g(as)g(a)h(shar)o(ed-nothing)g(system,)f(however)-6
b(,)18 b(Oracle)h(is)f(capable)e(of)j(implementing)f(this)f
(partitioning)h(without)-150 1731 y(the)k(r)o(estrictions)f(of)i(the)f
(\002xed)g(parallel)g(access)f(encompassed)g(in)h(the)g(data)f(layout)h
([5].)-148 2030 y Ff(2)96 b(S)t Fg(H)t(A)t(R)t(E)t(D)33
b Ff(N)t Fg(O)q(T)t(H)t(I)t(N)t(G)-150 2200 y Fc(2.1)79
b(Concept)-150 2371 y Fd(A)30 b(shar)o(ed)g(nothing)g(ar)o(chitectur)o
(e)f(is)h(a)g(model)h(in)f(which)h(the)f(pr)o(ocessors)f(do)i(not)f
(shar)o(e)g(any)g(r)o(esour)o(ces.)f(Each)h(node)h(within)f(the)-150
2515 y(system)22 b(has)h(its)f(own)i(memory)g(and)f(disk)g(storage,)g
(rather)g(than)g(sharing)g(one)g(or)h(both)f(with)h(other)f(pr)o
(ocessors.)f(Each)i(node)g(would)-150 2659 y(have)32
b(a)g(portion)h(of)g(the)f(databases)f(stor)o(ed)h(data,)g(and)g(is)g
(the)h(sole)f(contr)o(ol)h(on)g(that)f(portion)h(of)g(the)f(data.)g
(The)g(nodes)h(connect)-150 2803 y(thr)o(ough)22 b(a)g(network)g(to)g
(coor)o(dinate)h(actions)e(by)h(r)o(equesting)g(information)h(fr)o(om)f
(each)g(other)-6 b(.)-31 2948 y(Shar)o(ed)31 b(nothing)h(ar)o
(chitectur)o(es)f(ar)o(e)g(primarily)h(used)g(for)g(their)h(easy)e(and)
h(r)o(elatively)f(cheap)g(scalability)-9 b(.)31 b(They)g(can)h(be)g
(built)-150 3092 y(fr)o(om)e(commodity)h(har)o(dwar)o(e,)e(rather)h
(than)f(r)o(equiring)h(specialized)f(and)h(expensive)f(parts)f(to)i
(achieve)g(high)g(performance.)g(One)-150 3236 y(sour)o(ce)21
b(estimated)g(the)h(cost)f(of)i(a)e(single)h(commodity)g(node)g(and)g
(a)g(single)f(specialized)g(node)h(at)f($700)g(and)g($10,000)f([6].)i
(This)f(sour)o(ce)-150 3380 y(calculated)g(that)f(in)i(or)o(der)g(for)g
(specialized)e(har)o(dwar)o(e)g(to)i(be)f(as)f(cost)h(ef)o(\002cient,)g
(it)g(must)f(be)h(at)g(least)f(14)h(times)f(as)h(fast,)f(which)i(ther)o
(e)e(is)-150 3525 y(no)i(indication)h(of)g(being)f(tr)o(ue.)-31
3669 y(Shar)o(ed)17 b(nothing)i(ar)o(chitectur)o(es)e(ar)o(e)g(also)h
(not)h(subject)d(to)j(the)f(points)f(of)i(contention)g(and)f
(bottlenecks)g(that)g(sharing)g(ar)o(chitectur)o(es)-150
3813 y(have,)g(such)h(as)f(the)h(need)h(for)g(multiple)e(nodes)h(to)h
(r)o(ead)e(and)i(write)f(to)g(the)g(same)f(data.)h(Rather)f(than)h
(moving)g(the)g(data)g(itself)g(between)-150 3957 y(pr)o(ocessors,)28
b(each)h(node)h(asks)e(another)i(node)g(a)f(question)g(about)g(the)g
(data)g(it)g(holds.)g(That)g(node)h(r)o(eturns)e(an)i(answer)e(which)i
(the)-150 4102 y(asking)17 b(node)h(uses)f(to)h(continue)g(with)f(its)h
(work,)g(until)f(the)h(complete)f(question)h(-)g(the)f(users)g(query)h
(-)g(is)g(answer)o(ed)f([7].)h(This)f(r)o(eduction)-150
4246 y(in)22 b(data)f(transfer)g(means)g(that)g(a)g(higher)h(pr)o
(oportion)f(of)h(time)g(is)f(spent)f(pr)o(ocessing)h(the)g(questions,)g
(which)h(is)f(a)g(much)h(easier)e(task)h(to)-150 4390
y(speed)h(up.)-150 4664 y Fc(2.2)79 b(Implementation)-150
4835 y Fd(Impala)33 b(is)h(an)h(SQL)f(engine)h(that)f(implements)g(a)g
(shar)o(ed-nothing,)g(parallel)g(pr)o(ocessing)g(ar)o(chitectur)o(e)f
(over)i(Hadoop.)f(Queries)-150 4979 y(ar)o(e)c(fragmented)h(and)g
(distributed)g(acr)o(oss)f(nodes)h(in)g(the)g(system)e(to)i(corr)o
(espond)h(with)e(the)h(portion)g(of)h(data)e(stor)o(ed)h(locally)g(on)
-150 5123 y(individual)18 b(nodes.)h(The)e(system)g(was)h(inspir)o(ed)g
(by)g(Googles)g(Dr)o(emel)h(in)f(that)g(it)g(uses)f(columnar)h
(storage,)g(executes)f(SQL)h(commands)-150 5267 y(natively)k(instead)h
(of)g(building)h(them)e(on)i(top)e(of)i(MapReduce)e(jobs,)g(and)h(is)g
(speci\002cally)f(designed)h(for)h(distributed)f(computing)g([8])-150
5412 y([2].)f(Impala)f(takes)g(it)h(a)g(step)f(further)h(and)g
(implements)f(as)h(pur)o(e)f(of)i(a)e(shar)o(ed-nothing)i(ar)o
(chitectur)o(e)e(as)g(it)h(can.)p eop end
%%Page: 4 6
TeXDict begin 4 5 bop 4018 -296 a Fh(4)-31 -144 y Fd(An)34
b(Impala)g(system)g(has)g(thr)o(ee)g(main)h(components)g(which)g(work)g
(together)h(to)f(implement)f(this)g(shar)o(ed-nothingness:)g(the)-150
0 y(Impala)25 b(daemon,)i(the)g(Statestor)o(e,)e(and)i(the)f(Catalog)h
(daemon)g([9].)g(The)f(impalad)g(is)h(the)f(Impala)g(daemon)h(which)g
(r)o(uns)g(on)g(every)-150 145 y(node)e(in)g(the)g(system.)e(An)i
(impalad's)e(r)o(esponsibilities)g(include,)i(but)f(ar)o(e)g(not)h
(limited)g(to,)f(accepting)h(initial)f(queries,)g(r)o(eading)h(and)-150
289 y(writing)31 b(data)f(\002les,)g(executing)g(query)h(fragments)f
(assigned)g(to)g(it,)h(and)f(transmitting)g(intermediate)g(query)h(r)o
(esults)e(back)i(to)f(the)-150 433 y(coor)o(dinator)25
b([10])g([9].)f(The)g(coor)o(dinator)i(is)e(simply)f(the)h(\002rst)g
(impalad)g(to)h(r)o(eceive)f(an)g(initial)g(\(raw)h(SQL\))g(query)-9
b(,)24 b(at)g(which)h(point)f(it)-150 577 y(assumes)i(the)h(coor)o
(dinator)i(r)o(ole)e(by)h(managing)f(that)g(querys)g(execution)h(acr)o
(oss)e(all)i(other)g(nodes)f(and)h(the)g(assembly)e(of)i(the)f(\002nal)
-150 722 y(query)j(r)o(esult)f([10].)h(This)f(avoids)h(the)f(need)i
(for)f(a)g(single)g(node)g(dedicated)h(to)f(coor)o(dinating)g(all)g
(queries,)f(since)h(any)g(impalad)f(in)-150 866 y(the)h(system)f(could)
h(be)g(assigned)f(the)h(initial)f(query)-9 b(.)31 b(Since)e(an)h
(impalad)f(instance)g(r)o(uns)h(on)g(every)g(machine)g(in)g(the)g
(system,)f(this)-150 1010 y(\224allows)d(Impala)g(to)i(take)e
(advantage)g(of)i(data)f(locality\224,)f(wher)o(e)i(each)f(node)h(can)f
(have)f(its)h(own)h(partition)f(of)h(the)f(data)f(locally)i(in)-150
1154 y(own)22 b(memory)h(without)f(having)f(to)i(use)e(network)i
(communication)f(to)g(r)o(ead)g(other)g(nodes)g(data)g([10].)-31
1299 y(The)31 b(StateStor)o(e)f(further)i(cements)f(Impala)f(as)h(a)g
(shar)o(ed-nothing)h(system.)e(Each)i(node)g(working)h(independently)f
(raises)e(the)-150 1443 y(issue)23 b(of)i(how)g(coor)o(dinators)g(can)f
(stay)g(up)f(to)i(date)f(on)h(the)f(other)h(nodes)f(in)h(the)f(system,)
f(and)i(how)f(they)h(can)f(be)g(alerted)h(if)f(a)g(node)-150
1587 y(has)j(failed.)h(An)g(Impala)e(cluster)i(has)f(a)h(single)f
(daemon)h(called)g(a)g(StateStor)o(e)e(to)i(push)f(updates)f(about)h
(the)h(system)f(to)h(the)g(nodes)-150 1731 y(who)f(need)g(the)f
(information)h([10)o(].)g(The)f(StateStor)o(e)f(maintains)g(a)h(table)f
(of)j(topics,)d(which)i(is)f(any)g(information)h(needed)g(for)h(query)
-150 1876 y(scheduling)f(and)h(execution)f([9].)g(Pr)o(ocesses)f(r)o
(unning)i(on)g(nodes)f(contact)g(the)g(StateStor)o(e)f(only)h(once,)h
(at)f(startup,)e(to)i(give)g(it)h(a)f(list)-150 2020
y(of)f(topics)f(it)h(needs)g(to)f(stay)g(updated)g(on)h([10].)g(An)f
(important)g(topic)g(is)h(the)f(list)g(of)i(nodes)f(in)g(the)f(system)g
(which)h(ar)o(e)f(healthy)g(and)-150 2164 y(thus)h(can)i(accept)e
(work.)i(For)f(this)g(topic,)g(the)g(StateStor)o(e)e(monitors)j(node)g
(health)e(thr)o(ough)i(the)f(use)f(of)i(keepalive)e(messages)f([10].)
-150 2308 y(If)i(a)f(node)h(goes)f(of)o(\003ine)h(\(doesnt)g(r)o
(espond)f(to)g(to)h(the)f(keepalive)f(message\),)h(the)g(StateStor)o(e)
f(br)o(oadcasts)f(this)i(change)h(to)f(the)h(other)-150
2453 y(impalads,)21 b(so)h(they)g(do)g(not)h(assign)e(work)h(to)h(an)e
(unr)o(eachable)g(node)i([9].)-31 2597 y(The)18 b(Statestor)o(e)e(also)
h(br)o(oadcasts)g(changes)h(in)g(metadata)f(with)h(help)g(fr)o(om)g
(the)h(Catalog)e(daemon.)h(Physically)g(r)o(epr)o(esented)f(as)g(the)
-150 2741 y(daemon)24 b(pr)o(ocess)f(\224catalogd\224,)g(the)h(catalog)
f(daemon)i(\224pulls)d(information)j(fr)o(om)g(thir)o(d-party)e
(metadata)g(stor)o(es)g(\(for)i(example,)e(the)-150 2885
y(Hive)d(Metastor)o(e)g(or)h(the)g(HDFS)g(Namenode\),)g(and)g(aggr)o
(egates)e(that)h(information)i(into)f(an)f(Impala-compatible)f(catalog)
h(str)o(uctur)o(e\224)-150 3030 y([10].)26 b(This)f(is)h(to)g(make)g
(integration)g(with)g(thir)o(d-party)g(storage)f(systems)g(easier)-6
b(,)25 b(while)i(also)e(allowing)h(users)g(to)g(import)g(\224Impala-)
-150 3174 y(speci\002c)21 b(information\224,)i(such)e(as)h(user)o
(-de\002ned)g(functions)g([10)o(].)-148 3473 y Ff(R)t
Fg(E)t(F)t(E)t(R)t(E)t(N)t(C)t(E)t(S)-150 3645 y Fb([1])74
b(C.)18 b(Claussen,)i(\223Shar)o(ed)f(everything)f(vs.)h(shar)o(ed)g
(nothing:)f(Get)g(the)g(best)h(of)g(both)f(with)h(sap)g(sybase)g(iq)h
(16,\224)f(Febr)o(uary)h(2013.)-150 3757 y([2])74 b(S.)50
b(Melnik,)h(A.)f(Gubar)o(ev)-7 b(,)50 b(J.)h(J.)g(Long,)f(G.)g(Romer)-5
b(,)51 b(S.)f(Shivakumar)-5 b(,)52 b(M.)e(T)-6 b(olton,)51
b(and)f(T)-5 b(.)51 b(V)-6 b(assilakis,)53 b(\223Dr)o(emel:)d
(Interactive)h(analysis)1 3870 y(of)j(web-scale)g(datasets,\224)g(in)g
Fa(Pr)o(oc.)e(of)h(the)h(36th)h(Int'l)e(Conf)h(on)f(V)-6
b(ery)54 b(Lar)o(ge)f(Data)g(Bases)p Fb(,)g(2010,)i(pp.)e(330\226339.)j
([Online].)e(A)-6 b(vailable:)1 3982 y(http://www)g(.vldb2010.or)o
(g/accept.htm)-150 4095 y([3])74 b(T)-5 b(.)27 b(Zhu,)h(Z.)h(Zhao,)f(F)
-6 b(.)28 b(Li,)g(W)-6 b(.)27 b(Qian,)h(A.)g(Zhou,)g(D.)g(Xie,)g(R.)f
(Stutsman,)h(H.)g(Li,)g(and)g(H.)g(Hu,)g(\223Solar:)i(T)-6
b(owar)o(ds)28 b(a)g(shar)o(ed-everything)g(database)h(on)1
4207 y(distributed)19 b(log-str)o(uctur)o(ed)h(storage,\224)f(in)g
Fa(2018)h(USENIX)f(Annual)f(T)-7 b(echnical)17 b(Confer)o(ence)h
(\(USENIX)h(A)l(TC)g(18\))p Fb(.)68 b(USENIX)19 b(Association,)h(2018.)
-150 4320 y([4])74 b Fa(Oracle)17 b(9i)i(Database)e(Concepts)p
Fb(,)i(Oracle,)g(Mar)o(ch)g(2002.)-150 4432 y([5])74
b Fa(Parallel)16 b(Execution)i(with)h(Oracle)f(Database)f(18c)i
(Fundamentals)p Fb(,)f(Oracle,)h(Febr)o(uary)h(2018.)-150
4545 y([6])74 b(D.)f(J.)h(DeW)l(itt,)f(S.)h(Madden,)f(and)h(M.)f
(Stonebraker)-5 b(,)75 b(\223How)g(to)f(build)h(a)f(high-performance)h
(data)f(war)o(ehouse,\224)h Fa(A)n(vailable:)1 4657 y
(http://db.lcs.mit.edu/madden/high)p 913 4667 34 5 v
32 w(perf.pdf)18 b([Accessed:)h(June)g(2011].)h(BIBLIOGRAPHY)f
(BIBLIOGRAPHY)p Fb(,)g(2005.)-150 4770 y([7])74 b(D.)17
b(DeW)l(itt)g(and)g(J.)h(Gray)-7 b(,)17 b(\223Parallel)k(database)d
(systems:)g(the)f(futur)o(e)h(of)g(high)g(performance)g(database)h
(systems,\224)f Fa(Communications)e(of)h(the)h(ACM)p
Fb(,)g(vol.)g(35,)1 4882 y(no.)g(6,)h(pp.)f(85\22698,)i(1992.)-150
4995 y([8])74 b(A.)25 b(Floratou,)j(U.)d(F)-6 b(.)25
b(Minhas,)i(and)e(F)-6 b(.)1048 4979 y(\250)1033 4995
y(Ozcan,)26 b(\223Sql-on-hadoop:)i(full)f(cir)o(cle)f(back)g(to)g(shar)
o(ed-nothing)g(database)h(ar)o(chitectur)o(es,\224)e
Fa(Pr)o(oceedings)g(of)h(the)1 5107 y(VLDB)18 b(Endowment)p
Fb(,)g(vol.)h(7,)g(no.)f(12,)h(pp.)g(1295\2261306,)i(2014.)-150
5220 y([9])74 b Fa(Apache)19 b(Impala)f(-)g(Interactive)h(SQL)p
Fb(,)g(Cloudera.)p eop end
%%Page: 5 7
TeXDict begin 5 6 bop 4018 -296 a Fh(5)-150 -144 y Fb([10])41
b(M.)15 b(Kornacker)-5 b(,)17 b(A.)e(Behm,)g(V)-9 b(.)16
b(Bittorf,)g(T)-5 b(.)15 b(Bobr)o(ovytsk,)h(C.)f(Ching,)h(A.)f(Choi,)h
(J.)g(Erickson,)g(M.)f(Gr)o(und,)h(D.)f(Hecht,)g(M.)h(Jacobs,)g(I.)f
(Joshi,)i(L.)e(Kuf)o(f,)h(D.)f(Kumar)-5 b(,)1 -31 y(A.)15
b(Leblang,)h(N.)g(Li,)g(I.)g(Pandis,)g(H.)g(Robinson,)g(D.)g(R.)f(S.)g
(Rus,)h(J.)g(Russell,)g(D.)g(T)-6 b(sir)o(ogiannis,)17
b(S.)f(W)-6 b(anderman-Milne,)16 b(and)g(M.)g(Y)-6 b(oder)h(,)16
b(\223Impala:)h(A)f(modern,)1 81 y(open-sour)o(ce)j(sql)h(engine)f(for)
g(hadoop.\224)-150 194 y([11])41 b Fa(The)18 b(Oracle)g(Optimizer)f(-)i
(Explain)f(the)h(Explain)f(Plan)p Fb(,)f(Oracle,)j(April)f(2017.)-150
306 y([12])41 b(E.)18 b(F)-6 b(.)18 b(Codd,)g(\223A)h(r)o(elational)i
(model)e(of)g(data)g(for)h(lar)o(ge)f(shar)o(ed)g(data)g(banks,\224)g
Fa(Communications)e(of)h(the)h(ACM)p Fb(,)g(vol.)f(13,)h(no.)g(6,)g
(pp.)f(377\226387,)j(1970.)-150 419 y([13])41 b(M.)18
b(Stonebraker)-5 b(,)19 b(\223The)g(case)g(for)g(shar)o(ed)g
(nothing,\224)g Fa(IEEE)f(Database)f(Eng.)h(Bull.)p Fb(,)f(vol.)i(9,)g
(no.)f(1,)h(pp.)f(4\2269,)i(1986.)-150 531 y([14])41
b(G.)18 b(Nico,)h(\223Parallel)i(pr)o(ogramming)f(-)f(ar)o(chitectur)o
(e)f(\(shar)o(ed)h(nothing,)g(shar)o(ed)g(disk,)f(shar)o(ed)h
(memory\),\224)h(June)e(2018.)-150 644 y([15])41 b(M.)18
b(G.)g(Norman,)i(T)-5 b(.)18 b(Zur)o(ek,)h(and)g(P)-9
b(.)19 b(Thanisch,)f(\223Much)h(ado)g(about)g(shar)o(ed-nothing,\224)g
Fa(ACM)g(SIGMOD)g(Record)p Fb(,)g(vol.)f(25,)h(no.)g(3,)g(pp.)f
(16\22621,)i(1996.)-150 756 y([16])41 b Fa(HDFS)18 b(Ar)o(chitectur)o
(e)h(Guide)p Fb(,)f(Apache)h(Hadoop,)g(September)g(2018.)-150
869 y([17])41 b(A.)18 b(W)-6 b(eiss)19 b(and)f(N.)h(Whitlock,)g
(private)g(communication,)f(November)h(2018.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
