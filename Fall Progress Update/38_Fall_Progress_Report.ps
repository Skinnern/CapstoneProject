%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: 38_Fall_Progress_Report.dvi
%%CreationDate: Mon Dec  3 15:58:15 2018
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: URWPalladioL-Roma URWPalladioL-Bold URWPalladioL-Ital
%%+ NimbusSanL-Bold NimbusSanL-Regu NimbusSanL-ReguItal
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter
%+ 38_Fall_Progress_Report.dvi -o 38_Fall_Progress_Report.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2018.12.03:1558
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: URWPalladioL-Ital
%!PS-AdobeFont-1.0: URWPalladioL-Ital 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Italic) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -9.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Ital def
/PaintType 0 def
/WMode 0 def
/FontBBox {-170 -305 1010 941} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB5F973DECC54C8130ABE
C8E23C8067FC409DBA23A469DC7C6C4F7EEDC3DA588EE3C5B2829D3E1492978B
F91C30C1912183DB62BA489418A68C3BD44566603673FAFE6C3DD78FDFC1F6A0
840DFA44EAD8A5653DDF2FE86B8BDF672707D2AAC76CE376C2C9E56EB95F30CD
75B1E312BE777EAD75EFA21114335130DDC559ACC1A14454397984D624EEB43A
C7BD688E270025A34A912884DF387744462E4F666099415F25F86999B31B0588
576296579F6935952724452D811B749AE61C6265711EF0024C6AB25EFE1E88FC
F88AA072958C75F616D971AFB3D9116E041EE7B66C39DA4481A97509DE7AC156
CB43C5A85501E66164E5FC61F9C64EE138CA0D9A0808BE0443CF3FBAD13C63EE
E7E39F1D385A453E8095DB2FF5914A611E11BBDDB04D6FC55D51B08358EF7253
9B8E1FE26561CD5CA9661C91D264B3810A37BE373BF66FCB021E4407375ECAF6
BEDC1561D701A5885F4216EC592958C80DB9B8365D66A8E075A88782C4BC6161
F6B5246F49B14E4E086FD10E01EDEA5D95A0F67D9F6D16C093CC98116B652B60
04B7FBD451E536399DE7A8D8B8E0740228524FA5CF81735BBC72B976F955FB3F
85B91278057DC1FA6B42FF84B9F267188631A0EB7B4456653620151073F4275C
9B80D71B4DA3EF23BA2811F90A844D2D4A18C2D3E7C75DC2351F250E946C49EE
1D67BA5377ABAE009B18599825EAA89BAB6B56BC1177B32B4863A004CC7448B0
27D9F6030ABABDDED61E95CF4D02EA9170BBCF04E982FB170EFF61B5F0A3E39A
E4596CB6B478F6EA85D464460C3E3C301813928D1A4140ED2931D06F55DA1B92
575627B7363A7B2F52C2EBCB003F3168ACEADBC274B460104B32A37A35E08E61
6B4C58ED4BC82DA01AE19F2AFD0CA670D4CD12464788C7AF3C22AAE6B2B67FBD
72227163E56D6B000CA09205E5D9A38451EE561182C9DD5B1A5F87F2FDA046C4
AD12C31467458A4D197286E0E5D73D649B0D3AAF01749ADCFC567DAE21DCA903
9DA02B9128F9FC47121777114AD0F0B9810DB9B0A0DF61A899BA3D051FD8C0A7
379BD912296E6FBFB3CAD4DA410E69C542CAA884199C66B2C9EE870CF8E26454
58F781186D6D2E9649D38BB4BD30A885FD5F1BCBAEF1CF5A47C770E62C69C1B1
BA780A1BC0E605A1D0942D462E923C2158D476D0FE07A6624FEBC23E7E46655B
E5952539F63EC09704F9815DB6DB1EB3C7EEEDB1C1BC8E20988FBC4C1C654982
A0F73BA0CF85D4C002C6E37F6C59FAF7FFBCC77283645E83C542A8A954DE6F91
4663BAB0C9AF290315BD56EA91D69662F84C91484F5D92B15219551572A4E746
F1B43B3B4C2D26211FA9171ABEEA37D715E75909817B8C763107C608F93D0795
19A10F8055E43C98F96CB526238D2B7B6AB1161E8FF899BD979A8457FE542CD3
33477F40853D7957E904AC7C2AD962C28C42F61379D428F189AC243CF795016B
733C8A6228CD23F28461F0E811F04F8876DFBBDAF12DEE4D80AA64DCE8DC395B
DF4A995BFA6638DED0E5E8A0D0F33022188CA9EA8614DDA4D011E383B876F0E7
8623F9D64467F110E9E422402E174C0FEF0F7CCB94004DA5B914E044534DA5A8
56B4A806FB8CFDC77DA03B4BD6210B8B429C2E01EDDD8E74C25BE31A296BD9F6
9A15FC31DECB376B138292F2F3BD650E492ECA67D539F5618E255704748C0625
FAB1DEA0D55F11A0674E11C30C0E964B04D2E9AF70AD7F40F2E194844E76B625
836C94F281B695D282665B4A9A9E06210DC568582584C21E0F14B834CE2DCFC3
9617FE918475FBD0EC66FC2DC0504D46B1A4D467D56929A551B8800C7A6C788A
20487BEA282BBB6AB6F629D9424C1E354BC3C2D960005D56FCA67A643142F580
4346C1264135E15756B43D90E252FEC1DFF99CF458230A1642F9D6F432581CC3
2E2D7F259F03A09D5B3A8E7D70F350CE4F9E010A7A2D9DF35CA51BFD38956234
C19F727385EAAF8F1ABF62A78E43E18E94C63683A1F5C6E905B47A86A564DBA2
0586A16717173A5C458B83DDE63F567D82EC21184CACB3C53D9E93A5B8CFE102
660F62837784235DF844DCC37DFD64729852A1066352EB3A95E1D26ACE85EC96
2BDF7F4F94A3631D168974251EEDA8600201AFCE3FB331F3B29979ED65F8A446
990DB005B6F68416E6727551DB888567C1C1717D850B5672DFFE46D7A42ADD74
914BA114981044632694A865679F9FF9D1B29CA0D8B5B21099C32FDB45A9651E
1E6EB746068AD04E223E4A3A89FBE9D0436D097DF59AF09EC7D79DEBA34C4381
E7A53DA75F8D7AE874B6A3578A16E44B8EAA549AECD647E9B00CF506897121E4
5FE516CF73B32B25E17B86F99CE584DC3836AF8F93CF65587493196EAB89BBF4
3D6F9A2218226C4426CFAA97F77E117B60C9957D578933BC830963974BC8F5CA
52EFB064F387259191A318D55DD4AA77B010044CEE316E2F0AE4F6A8895A73DD
46A2C464936AEA10913B3403C21385932BC9F78CD0476CEECDDFFEC83F65B0E6
BF7A6278CA1FD4197CCF3D6FC82B9A27D6695A95B4313C5B5F842BD5D99C18BF
9637B1AB186D814E3DD858507B68A127CBB230C055867C8047C8CDA468D2910F
2DA27128A9F1422900880DCD0CBC96A89C19811204F7AB8D3D585BE3FCBA89F8
F31D1417A69D15E20BDE6D478989FAD982FADEFD56C948BF65B6AF676C830CD8
AA3638224737AEAEEFE9239F6FFD51A675783F09A19EC360350BE7BCD855F488
9ABBCCFA8360502234C208871104F03616C2AD984C8D98DF7279A53E3B13724D
0B4E03A2B82CED5C9DB7FFD1B56F24D078745B5E1A335D60A083294DB24CAAAD
A4D96867FFE7CF729677802341E00211AA07CB2D2B705EE2637D89D2BDAE12A9
12171FFC355965BDD45A6D7854B54D737C6DF3962B95B4B4D186076AB0A6B273
ADBFA7CB2C670B71BDEDA9725503C98440DE5E44CB73B31B54F16384D5405891
3521F90293851FFE4ABB4AF81F71E37E6A0C5A09FDEC8D3678C1FE53D973B451
FBB44FF8C272FC1493F1A99DDB2E1FFE7A632136CFEB7A1DC6A7028A0ADDC43F
A3076B2674E5A72780D7F9B56C3617FEA2E7F91BF890FA00BD2F0A59D3C63DB4
C060D01E56D959600EBD9E7BC7122379B1581BBC7195543BDC43399E6A6918A8
87250788B26B0B120C5CAC7738D360D078844FD1B533035056CDBBB9F4DB38D1
D3B183935FB0102D6D8F7B7A87854C3C07B1DA4796D9C397488CC615D3108CD6
34B42A90B80BA999C038D199E7264E2201AF19A1B284001FD77CED21E9A6CF2C
0C15AF6879E588140D9D81190BAC1764D2A384CB95ABF7A2E93FF2B36C041A9A
24CF96DCE745A9A138A5DB90ED30DD671015FD6A95C3F4678110EC95A4B72277
5DB1D43E56E0E0EE21BC094EE9029BD66526CBA596279BC04C484684C9394BA9
31BACD833DEE3B4E2A0EC5334FAAC53EBE2F6A7A815854903C26B6976CBAA149
031D95DDB53A5E0C3AB4C30E9B281898E79F7B4CCA6F9CD0B2266299E1BA2750
F675ECCE50672177838206B80195AE2FC840EF68B887BEBF95DE2E6D012566DD
6D789E89EA333793764EDDBC805C075D6F336FA6238036D2A636C43EE4D93F83
4043D11EE5660337BBFF636A3D33B1CABC0CEF169B7166EADD48DBBD871AF405
6C369DAB0F5DBE9B08932B33CC7FE1E9E6473AE9140BEC5E073BBEE29BBB9093
FDB99991507C71753EE604A02EEE3DAEB47BF1CC0D4E406E63EC6F93991E948F
1E6AE083E58B1EFDF083A5E8E4B299607534E588FF88B91CBD737174A76DAE7C
2F389F0A9C146BD67C33DD6745E6D4AB027850008CD4AA408455054F844104E3
ED7565083022A08F95987F59BCDD463AFA10F5D1D9C9D1DB3867134E2C7D6A7F
0D108235344BC844FB6433B18542B8E24D2910878C3B230838E49AD6EB810C2B
AC9611F4CF41925A15F5CFD637E0E13F9FE2EDB42E595D923C89CDCC8D1B8EB1
ECE081C0498926CD96F2F6834DDCD480594D100A01EB5DFC9E470CBFCCFB150A
E9088E7695DF12579841FE6C067B4D3E4FCE173420B130353EAC9DCA900DA140
F5535D6AF761F437E074AC111838A2837E19E4ED9ECEFADAE921575CF4A518C1
E51B921FB8BF612C600DD87A29F1884E7C4B715935E2B9D435CB9B059FB0FC06
6508A0A63CFB39F90318AABA00319CCBF41471DA5B83052A3947A20ED609E706
465267C2E85B7BDBE2D3B1CDD560A14E9301020971ECA0419CF1809114DFB8EE
B55C584D2618007F459E8C62C5739C73E575948744859942863699897FDC4BDE
A8087B34C53C1DFB37DA0CB094B4558045A4ACE09B91CBE4AB0A862A809F8A5A
70EB3F7426184298B6BE9E80E7DA665157677A8AF7D8491D6CF96258541E1D1D
0E1E6184189AB125B26475B62DFA009B226A55223F885C7DD62C64104F707F1D
7D6DE28F42247268907956DEE1A8C2B197CD7C82AB7DAF7C63177395EB943805
0E83F7C42F8D1A5E04EC3BBD8CB6B59556D8F66A9DF2917F9F37BA16C70AC2EB
593A0FCA7E16D741BE7BEC0234C59554B5788086569A36171E129FD3DFC7550E
0AC7F4EFCB6D11B27F8AC1C9F25B33AAD88D388A7154FFA5F5EE9C569208A558
2227D9F37F7CD5022646C8BEFC0EA4444202EC2A87A53C8FB3D9F0762F973CCF
B9AF31BD83D625BD534C879702E93A1B87C1138B5BBBC11105D490C8E0171965
C108330070119C923E5C380A0FC96A37AC370E5D6EB2FC0D8C3E5126E158215C
4431AB6A869DD2AC32FC6A14D653C7C7FB1F5B3C532A6B38905991D68BF7880D
095A7EDA9769657AC718C065A32EF7CA8A1FF5880FC66196E6B131973544019C
C2AB7C9F1265B32E13A33A4B1A69909BEC8A8F9033FF2942402FAAA4B0CE6C24
A17D389898068F254ED1A91F7031FA0B828C89F0402B564D38205F302DB58027
7A6D0CC1ACDE791164E8F856ED9114DE0E4409134DC478749FF92F0863167264
EFA8103AF71B537DFA79B8E84B39F4B0B2ABB1F875BE903F26680D97565FE4D1
E216A9C768A454647DB379C15B0AB7076AE4634FE43454088DC901B5BFDE965C
77D7EA807D07F16E915503CBEBD83B173D6AEF2574A87FB2E9E3FEBCE28793C4
0544A989869EB84A014850D461A143A594F2323043C65EE7E84BE6501F47A666
047AEBA832EB995E27D36EEE7386A786E482EC5AD874B09957F9CF8B20AAC012
605EE33312C1A0A5CF114C59E4E75BA397998E519B70C3670D8B0B89C65A9EB6
98487988764781797E2E36F85B97FB489A5D5A14BDCABD8DE5F42B0018F834D0
58A09E910DF1314D15A37A350492CA1038FEA46B99D05AE5ED8E3208053F1AB5
4F35AD3A5788C3B5485151F4DEAB7461609D140D76F9124991CA8C0B94C9AFCD
891385D583919D2386699FB8123DED9709A875B020943BFAFAC56DCBEA533BAC
7EEA79290016F6CE1A8332A77F78B569AB497449112BDFD986A3F7EE975F7973
5FBDBB333D1365E077FE80D7E0747745A81FDC2505E773E0925B683118598F5E
312DB3A0237D88483418CF7B8F43A76958A1C9F1CDC63772C2FA28877F526F1F
3D0ABD2828965472169D6BA9283C269D2EBBBDB48B707EDED071F3F59D218F20
C4027148117CD4073D0C3B04A19E77EAE1A2F6F71C5CD8623B1DB3F5B933E3C7
C42C5BE57FE97EE3E19462485F52DAA94DB946C846C5E9E9475BC23672546AF3
EDE43B35792D80CE15A6BEF1CE58196C803878F5BECDC098C7D01129D3BDE15A
DAEC91E6CBC2A4EBA4E6A79B78B37BCD3ABDE16A8320A355F0D662454D910AD7
B3EBEF1F1ADFBE5413C05D328782F687343EF61149DCB2BB0938D5AE110081E4
4C67E062AFE64E6460C4CDC2B5FFA247A7399B354B0E549F10971A32AE9623A6
075E2254DAC7060D0EB6AE9CE5E78F77EE9E08862F4CEFD81D083DABA4C0A523
36F98AE9E122F44C6F142B91993A74D57DCAFBE49A2E420C1B332B96108E7190
C70FD1ED8DDF53B33FE4A553A4880764A776D290778A44D3E59C2A5187DCE0B8
138D96E26EA33E3FF4361272F68AE92F3410FEBAE670268F157A5CA62FB957FC
6A87DFB81E2A4258F4A98CFF891997C5124E574181B26C1DE96FB9F04EBCE4BB
8D968E6F1750A237952ADC04B524A3A442C7E50D342AE0995D1280C93EC66A5D
1DB3167D66F184815735353629661E08732CC38B393FD68C933A2A880F5163D1
BBF55D50FEF0A0220577B385A51BA3F73CDCAD65BE718C0072A840C5D661E6F1
9EAF99E451F8B606A0F4C3E3ADBA69560883B5A3B099005D47C251858AC5E400
BC65AA6245C56915536946E4C99EDADC2F0A01F9BFDC190E29BA33396FC8598E
50D03E544E0C41B8098970689B23D558FFCB32BAEAFF53991904E79B685971E3
4DBC2CFF4FE924AC9063FF9034D91BD9AC89078910F3D70211659CDBCE05F073
3AF96AFFD593FCFBEBC586BCB872E666A060E4D9241802B7288E376F6AEB1AF7
C0FB74BB319092C47E4E252129D50CD14336590BCE1D420F1B6DB72361A82EC8
11DD60CFD251133333A9B31EC7C2C99EDC7BBDFA0CE085C7CFD4C2009C86385A
3FE61B5BA1369DB20EC80C8086DEE33D0023D38F52239F322B3428E32E83B464
E7A2EF4B4E902879D38AA55DBC4F8AFB2692625F666FFE8FD1640C266017C426
ED236AC51E3987293DCA57781DF2B5204F31D83B962294F8DFE763893E647BBA
7AB427B48BF72F8FDC52E032C164516ED8FC6B7363400F09B6C876DD108808CF
94BBCC6297C972760F8ED5F1090437CE7AC95483DAF836ED4B747AE9132EEB51
28796E46CB0AF4B537987C2ED552B37D806A5D1401A9A02F36C06FA7B262B309
EFD34BFC2EF14A5F1BB8385C5CC30EC3FAD8DA55EE72940BA3ECFA1C2AD06D32
161B346A6F444AB16ABB846531D5935D9AAEA2524884B5AD271CB5CA98A92117
531F93EF41E7772C8CC29DE044B86632F2D0FD47D76A8DBB78CE6F5BB01D931C
2476642109443CF1E364633A8289F42F17528990ECB3E5FAE26200C22EFA1A3A
111014F8CA53F1F800401CA0776EEB8934B54347DAEF7D5B6E43BC2355D2A130
3D93F4D1EB2AAC70C01DEF5836995E268235A230AED3E56B65104138556D2140
31BAAED2141F1AC494435BE4DC57B90689C6C91300A4602A8D981780B1C09D52
55F915B6F3CAD2FA64BF7F46AFB2FF5D37947CC67D20E51721CD8F1D5CCE495A
E3EC6EE9C4FADAA72FC2C4A95C05EDBBC1768C05216EB395BDC03A687ED35799
2CBFBF2CE2865CF162CBCA7346F1C23170D055D42EA092830224C6191B3FC8AE
65118EAB91191B962D676460B676B619F499128ED228A054F40C2A6DC97A410E
6E741895E87AF6983E8191FE12278F7EB4C224E12643A68D3C9D4C3D34DF4C58
65F265347FC22B37ABAFEE80B759C390C9D7FA7C07051EC170CCB18F9652D8FB
7B674D94ACA8A8FE97D4518C42B545A2C934DA58F7DDDA8E1FE21A1C653DAA2B
23D6597CF89606A511F643C56ABCC3EA9576CFE6375773C2FB5EF2E2C02F432D
79029C1D33CC910FB3364A7B8755FB13C9221F73FFBA655345185AF72C35FDC4
7086E69E8419AAD1204E2ED678A759A85F77BC4919AFB46CAD0D7FF1970B7F48
E1296FA5F4EC9F90175C33AC7CC702F30C853433340952C7F79F9E22E257F4D9
28F66027A6668E93FA80400C2FE19206458230526464F6020685ED5AF585C938
A80153145BD29B7DF4EFF9DA9D46523E610812D848BCC2A439C516F57AB16526
7EE5AD94E52312E0FC17B7341908031D4AFA8616E5BB1DD3BA21C87173D8325F
2C9EC92EAA809C72013D818C1DFECAF1A12913A87144AEF4CFB22CBBB1E25D9C
EBD050F25CDCD839F7B8E2E7F72CD384950A5F8E97A98C01C87B708E094AC589
6BAF348B62FCB8180CE9AA6F4EE2D324559EA97C6389E6E034D89208AC83B36C
1CF115D97226C7DAB53D41E17708D23C9F237FC0DB8C195DA2FF84DEAF5552FD
CAF4BC578500D5719D6079A42645B7BCA288993853DF561D2A3E7B10F0533997
D99C48DA1EF4ADBF6EB3AC6F213BAE2CCB9B3B46F75CC2D3037375FF921ECDBC
959E82A8E931F632B8A4C07B7C18D67C7BBD93A1271AA551B20973AD18E1E57F
19F69821291FF60CF6523DA9A7DADBEFD196512968B2B598426D93DD7163B096
07810A06BA0464A9EF6D1A99402DDDBB620C0868AFD6C9916FF4F83185A2B979
3C0F5FF05BB0833531241965694818725B3E86973F44DA2E1E7D41DA66B79EFA
B42368C1E7E18A49F138F38BA6A28F1505A27D35400017BA2BAC44F012E0C21F
36D805D6E69C1D5AA9065A99389AB44840C317798BB255CD1E86F00D3068272D
6A9CFEC484AB0E346D8D1100441A8EBC99491F180B593D8EFC91C03015906194
AEBD21574095F57BB3750B326383CAD3D107A3EE7F23D1E7EAA2CC22D50A1B0F
4126F62D11AB45A7BB7FCF905AFD557BBA97CF0CA0AC81BE94DFF9A52ED9F1DE
9BA32ADA1A5763C21447997D03B4126C63E2CC5304658864217E948356347E32
E3B099B3EE63ED33FC6CEBFF7ED9178571E86C0F4BBD9C5BA8C6254A9EF030A1
B61372FA1F6AF7941608B3412EB833A668793A28901EA8635A4D0BE3EB51D2D3
BF5464F81E567EFE2B461511D3A8E8BB57FFEBE9E4D3C15E466F527E14FCCAB4
50723370AD83AC4B420B56BEFC2373A28343F671220E5FAA4F7C43CF8AE2DA36
31AB809AE75E2682153A81FFEFA725879CCA52801E3863D01A516FA1E5715EB0
7C2A31CDF0EB03E3ECBF59AD552E22AF63B0E2FCE3F50538B7B1EC34160410E0
60D9F97DCFBB74138AA6843AE2C72311FE79E119F39E83BE82544F164C93BBAC
483D9F504F6014DDC4804567D0E88FA5E02AE7E3122054FFEF1F107B62885F77
C76D1C49118BC0381AE47A0B97949EAB8569BDA6F6FEF13F6C5D87F9C357CA8E
2424585B9D34982C57A7A6084315A5116D2B7E450C8F7B9F0E2F71B1A811B624
4B5C53088DCDF88A00EEF8F3A6A75DC54B2B25B0996CA96E050948F610C5DA08
16B1D33898F155937BE50DBC827CF85896D5F68A2E6480D4091CDEA3AFBABFEC
6BC5D5423C6D15EDBD238E100C4278907B8575ECA795FD6EE8DB6CB639718918
E2F670DE34699E89E0054E87164B9DBC498C8C1D19BB2544B36A587BBCFBE5A0
C3D02D2D1027489E9DF776617B305A9663EE18A737ACB3D9450D49A10CAD629B
8CDB3D982FF7F0E4479E68779E5A24BB09C67BB7D88121BFB561C50B86AEE2DC
767335712B454128704ABCE3A67D566EE4E20272A5D29194C7A01E9670250B83
FD6A066A4DF35F8FC879B425BC7AF11F67EF792A255F0FF1D76A792E7D5E3EDE
8949F116069DFE1F6A7D695CC757F6F3A103D53DC8B5A85857C00E0C18FB9CD7
54C38EE0F09542628A1D94FA95ABB46FEDEAEDDB545806ED3373D1E996347BB1
A6B3BF2F7810E38C26010B518CBF6811D1BA56F17A88772E284319CD46A2D148
8AA68A64B8AB10DC21592DA4582392B6D6306486F135D4528573A8F58C341C20
05926347DCC9475D79B18D8B0C64389956727D21989F71600B097686366DAADB
73A180C53ED21EA9DBB55BA0C00993758AE4AA6AC4CEEDB2074721F86ADD2500
0600F1FEDA370C5343D68ED7713A972516FDFF84817958094A2818164803E18F
B6CB61F2E6250150868450EF0D01DA1AFA8769051E420E378181B33ED7C64A7B
1630CA0BD02A8340EA0436C3AE0E9177DB0B8662234D75B379260D7C407CDC99
5AA3ED28220A8E590F69AA083C29FC5DCF53D731700B966318C2CF600BDDE77D
78A14BB2D623AE9B25D5BAE87A8001B00A1DEB43A38E42EBBF75ADE2B36F6BB2
FCDB9A556DCDA2B5797A217920E955913756FDE3935484972058FBFCFAAE1AFE
CE111C5C6505DECBAAD274A0EAAFE0604FABA742C9E773F06FD0313CD3141C68
5149BC5AD0083A61B82AADBE89FCC96B0433E12EB4BEA3F98516B95A3F41675C
FE0E6FBCED4B8A06F4C66667E5E64A4C938C528CEB32E055CA03F0D9470D21C2
B4E55DD18DDCEEAF10C40EBA4B8215A1CB4C826DCF78A457964D8BD550572F80
3A489F35EF6E641D2E7F79433A2741112EBCF5C30CC32FFA9EE30C15EA34FA95
1A39A45D587E68AFE9AD77C93E221FE95C46FE7B076D9F31AC526B1C6DEBDCE5
53939909310DF6625F7C7C0E8FF4BE51DF1F1CF1E19A1C0EEDFA902C7FFDF965
1DEFD76FB01D3DE998FC8ED80A04CBE4BE1EF0640E1E6923D78092F64BF72100
F25DA8CAC64684CDC2B756517C9C8BB6EBB0684B510D0D52E1FF5B40C5D8D5BA
B368B6B1F2855FA3C9C9B4A6D30EDE8AF8C17F845790627FE87EFB947F6EF39C
B2643F8B889E25019F842EBB2098E36201EC1DDB17A27508331A60D98AE28C3D
C5E64B92767760CD0A585BDCD65418F22546A2BD14B2E97D403DE636B819C079
3E324EE7B37159A744669C06CA8956FA4323568727F0166700F95FFA9EF04F89
C04DCF42416B43A20F32CF7B2FB9AC237B18E53E08CE9D969E1EDE94DE1F750A
04669460C5D69A481DBBA7B8090105941B5F023964520D0E348BF69C4CDFD168
10F6FB209F11631DFDF2FD32C072BFB16BD1BAF41070DCF646C5E95D8D27DFFD
ABFAB60376DE3B46D1236B81336BF5DFBEBF01FDF318773C0BA86C0D935F9E83
CE1430E0451654B5BCC539B7DC98CCAC1F5F0AD19DDD424509672EBA98590FD5
58C26F534087D1E8B7B4FCD453B828F2B97D0008A44E13DC1201EF62B68AE79B
B99A749766E5350D05660750404B69BB6937E3EADD7E3817F20E8700BF13E787
B9254EE9B10A20C832C4C48068A3AD0A618BD4B2070D05D46879CE3164DE9633
8FD6AC26E8E3C2D83B1596FF051B082E1870B69A2D7F536B826AC0B5A17EF61B
5F8872249ECD4DDF08B04C7AE9D883132A93EA859E75D0912B56EC4B4790A1AE
C77B80EE6B063A416ACB9550790198029F2205E51C0598C7E4F91B1730A230B9
886D898CB6B51822E9C6092E959B6C7302F861824DA6959EE5FC07412D006CCF
EBD0E08CB1CF69858CFD235685341F0D95B27ECA06AEA1C21645FFD6E606B1C0
C840DEDEB3A8F8A35FE58B2DB2251B53987F1AACB6BCEED9171CD817476967E2
55F808AD2824940B6F71FC815A42A6DF5A23909E98A97DD3D6B592487C7AA382
1B284B1B7E82C3396CB89BA225013F5D482CB9827BD2A3DD5EBD003CCD1AD26D
23BEFCB709973B3D3C72365A932A3B5713613155F9849A26457C8866F35447AF
933553E1733940CDBEC93AD6068F7B3496CC26868758EF8624AD2414D4B0117E
363B4A506F9B6EF43641F254EC5D1672F5A34CCFEE8809B3F4AB7E65048992BF
45AF7FB5069F980F33D5DAC4ECE3BA1CFD19AB406A33732E035BF15293757C3A
5B86E2A64E925CB20425FAB1DEA0D55F115C3DAF63087F891507E4E97F8EF1E3
E1A4269E5E436C7ED5A332E5B6F2CCDFEB403083F8C72C3743D2A8E02333C892
AC77F69DE732EAECB2ED339DADD6F312B1DB09D72B5278CF84E2A887109DB668
3FF8BE68BBC5A225DDA14BC937D3B85A9510F18204616B93AF627134639D9BA1
140336BC143532244FA23261C8E57E64AB4B91945C512870DB25935546B48FD6
1007E164E4CEFFB0BE9CADD113A1DC51B11AF5BAA7AB8DE0B44CE829E32241CA
1AE9D54F1E3710F18FFA2F912FD822B23E2C2FA45599770732EBB5A4C7477610
4BFCCC27C5DADC511D102416FFC7A1246653E07AA5FD1225FE74F0A08276F6AC
F34B17461257BFF74B6EAD3965F76B131E43F5EA1F88493AF91EC74994EEF9B6
05BC284E60DF6B3E87DC7346FD25DA545EA3EC1E624850276571E8BA2CA450ED
737AB469730545F4F77B15DCF9DB9473701FB19499DFABCF6B88834D87621FE2
3F25CA8ABCC94AE5888A7A4FD9A8D86A3FC8D3682760357CAF85198818D438B6
ECF6110239048BE848173FE0C5E2E36BD54F896CCA30A30BE4C182A62B35FA16
C624F3639157F082AE2BDE83E736F2993D8C048393BD80B5A7A62DA76351A047
D8D0C0A6E8D9DF424556BDEB6D6FB09A12514DC72D76F20DF2DFD495239B287A
4496727EAD8228289EF48A40723E39B7EC79F2D3822C6F45A6AE0B963CFBD921
F0CA89ABBEE5B7886F0CB27373524C3F9659F8C30E907C72052513A1B2080858
5CACEF9C42609E720657DE2C6AE6027D1CC0B252FF9ED5F0D2EBB74D2B5E1681
8D99B6F3E211E760F8C31A12F21A8962CC7328C62B18B0F3594FA089BAFFD2E7
3396ACDEE7682FACBA6F41812F2FE368F51654EF115AF46CFBC3800C3AB9EAA6
7159C81527B9512C40DDC92C489AE31BC9A983B320C5238281C41D9387A29171
C53E99A6C68B84EB9053AE4B552034256EEFE521828F2729A2542C2F3E67AB8E
1CC2D9BD297A515FE28844336F8BC1B406F3DDB54D8693523EDCCDA8B1329836
CC6136E0B2DC8292E36DC444FA2D2A43415B8C958B346537659450D64195B170
A79F0B217564A3574A9C02A9899CE0C16B339B68A2AE149E6A1337F71C381E4D
26F24F0DF0D44204E2524B171BBD1C60A1B5466D742363F38ADF7937A89EE47E
AF9B93F93AA1D017EE7E574B862576F5EA495F51E1B3A86090ECFDB89CD96761
02B0B9E22A4744EDBF299DB408B7B0B38F710FC77CFA2FC6D465F9F7962D9296
C044BE35646726B693CE5605FF93A95A46C4E63570D71786AB04B97D1F011E29
DF2C698AB39B218ECC7BB9128F40DFF15856EE6A5AE3E7EA1EA3A27AB7F970E1
E19B8478BDE1715CDFDF35181C68B2BBBBFF91738A9FCBFE2EEDCFB12B2C7291
94FC9A392DDBA187B24F6085F2D7D4E1647CDA9BC03C6995417D2236401A2A54
A603C6FA775C846C1FF57890925A192A2CDA1BFDD81F7A2FC15B1846F239D6F7
BC4BDEAB3579B57030F0E4B1F2BB020DE6635A6261D204B3F0A74072A491F62A
09D70000B012A17E8E633408FF890A4296F3E9B0D405E9DEBF3A7CDD8242A050
54A33560BDEE0EFAF88112A98017F4401B45E224A075CCF7611F07AEA3D3241C
59C9CBD23B740AA8FD7E2B2575116286220BEFFF198A5E1A69904B480D1C0459
A348BF25A41D8D8242D281945215BF52FD45320721B4311B75BF527B1C65BF0E
0150053C6C3A5B5E958B699A14BC349FF6B535D1F2F28A9FDBF618AB09A06878
E9B177DF9D1711C6653A12A443D87E1439D6DF3B5B32E6F3D5BEEB8A2D7BF5E5
8BBB72495C09996B91D3E78A7D824F2B9C42C3AA21ECC117B8B004B03B6B26C4
FCCC7A4BAC3D34E426D7D9D908236037C83A76453DCF00A0FFECC8A7D0D58259
E53A4B20129777C73E5DD8DC48E4F63B4D8BCEEAFEDC4E0DA7BDECA4F73DB4D3
418E4DC63C15F8FD1EFE4ABCCC1CF5880FC66196E27EBF4C189249BF0EAE8BDB
05A6B27B6C63082606B800BA92AABC297A8C4C8985FB5F0731836DBEEF53E3DA
E03208EC6997F464C5806D183FCB6961E41EB38EF3A1DD23A9E16E62E1735F63
CC8A90417E0399F2B9F5A7E855ABFA3AD67A8E4D3DD52413254CF201D41AC993
2AADDAAF0877959C5C3281660ABBC6E67CC3D12DF003A4C88B3080AC1BAC1601
B3E3676963F37DFCC943CF236B074DBCCA06BC8B36DE6E4E027CF555018F191F
3C923F544E8CA05E5F13E3736EB0D810DE8F5762581953289434976C96E0F0DF
F23E0C7BF1821E8FF0C3D790FC1982DE012412590E8EDFA7C7C27730E286B10A
5156CEE34043AE639658991460E3FA77DE5FE1C1689CEC8990267B1BD97D4734
CF37B2C1255D017F10C5DC4C6766BBF044D93283569A723956E8BE316942806B
3D48AF0E1DB32EDCD71B48CDBA049DAFE3EFBDA7D8FB068097B778D17B0AA1C6
72E2020C946F0F8E03A35F28A10E96B9FC9B3861D3CF617825F05997FC1E5387
966AC7D070AAE46948ED4831B915B8E21F640745A0AB651AEC62CB55BE2301E1
15BF38D18AE8461F466E20761514BD28393DF8BF4306AF12BA45A11E88E61F04
E09FB81F41C04F9614C80C79DC71ACB9B894B480838B3AE7E8014F6275169D09
72F9F9E6AE3609779859D3FFFBE4B0AC369070B36556D684E72B63A65FD95F6B
48EBB5CA290E5A87CCC25FB9212F81C5B58AFFD4F291E0BB1A9D7963F400427B
E2361DC8EF632AF59E869E50E4B1C19C7584C2B4762C593578F18D6B3B0B04B6
27449296579A698F71F5E711E98858B87FDA029F59E269611806FFC636D8189E
CD353813D58AAE0169E625B3D522F159D0EDC895DDBD88522D622B23F00ABFD6
DBC837F3A28621BCDFD72168C9A94A1CC822651531150D19D6A82A6C8D1547F5
0F1C9E2070F1C08A6FB62BB8CEDA31A2463833251BBF6F17C866D29BF46804E0
9498F2FBFEC4C5828693391B78678D55A6EE2C0B76081912815A07BD8E139580
BD712C34957D89BA64AFCA890BFC7D9975E7868798BD03D1621A4E5D6DD85E25
8EF921DC183915BD4018B63393213F88B4D7E78F5DE7FC8CB035AFF7011C2E91
E55534A487DCADD59B927C3BAB9E66418A1E355F230E62456C0930EF3926003C
50DC76A6B889A34AE3FB473A9052822D5588F103C1DF12BFF5A655BF06887701
81298199D42AD090CA803F192EBDA3596B53F2411175BE5833B5E7D6D8F6871D
CF3BCF7280FED4EFD79B47D3A98AEEC275C306A7837B49CB5F65C81AB6FE6DFA
F0B88B7C18E2A7B55A712E44D96E6AC1E2C425645F1F2272E928A34B04DCF9DB
9473701FB194B8B9B54CBB777A0C4F634E39BCD9DF12FA697547A3013A182BD8
5FD6FF9604A031CFA3A6A392F606F8CB1F9A1AD8575809E6C88D056938244BE5
4202D4CD8CEE2812CD1556D34768DFCBF39569C1E9DE66E782117E85B5C6AF09
A7411419DE06F62620C8BECBCA2FF92CF1638302CB085FA2645B981DD52F0001
6B9C935E5E1F90BB62E3AF1D91D522601A4F270C9296D36200AEE7C402E11970
2AF8A2B89A8D2A4E67EA998E22FF2CCB7FE3B5EFA38021F47E9E9174D32BD14E
EAC28079C194A1F69BF7E177D24C10B8393C52297C10E47710966341475B1674
45EF46838A6F42EB7D2B887AAABAA729D1EAC91B8C23816E3CA41AF7E0653FAA
A9B441F5418A9644A3EF5C67D5DE728F0C5CB84CC0F989F33B08991D5348362C
617D60BAA619CC8EE29FFB29CCACFE838D0054792168F17B4DB380AB1D2D1A62
4F58B3F17B82B96BCF4D14572B74A67CA32B6FDEB5DF164FFCC91B7B98AE8806
3F7DA8929899DB19905F2362C68C63C7536DD332253C8EC80C652D9590869EF7
8302242CC6B1E9FED2D48ADD86836975B97CAF380A62C11AD8CFA8BD9875FA69
9507B3C7313C319B6C2C04540081071D994C20364559C8D32C65CE4244BB094B
4D2BC0C189378D2C4AC28A3DBD5E78EE95D8DA7B5C49FA62D16518B70AC1E491
08DFB88C5C5BDAA57E22B1256E76324FB9F660ED59B47114E6DD3CD274C3AA60
5B955F6479C3CF56F713E495E8886D2374F6C9641FF738E031DD34309110574E
7F6BF35058901B372751DBE82A4353F31E3CDE7DED47458C19920263B1C95CE2
80BC49430A98E66D799C5BB9E360B38B2B1B3096AF402AE0E21A0D3BDE3A9FC1
61397E4A44F20A9298810BA63097DC841B2FE33F3DF526E14B87A87962965323
9B36893C07394CB0B3464921510EE5F0495F54931E74771DD33ED335D9CDE5AB
5E8F3ADFBE5089416FC842CF8D01C98DA208B486BAB3D4AF93FBDD449CDBDAD3
016AACFA0A25DFEAE221BDB9F04A80C521577A67D0270D58B7071ACF5340D4D9
EC2C49AFF77009F251B253EDE6A211595152F55B37825955A04C37A1FFDB9838
52C86BC494025E58DEB281D99C122510BD292525F285043DEA984E4C30F60AEA
5CB28055A156036D8A4EB4E88097C8AB749D0820715BE6CFA97F0FCBCFDCF170
65658E8877CD706CCB3B951210BB6A5C270DB95E331ECDB6FA543D1DC0E786DC
790316B19E5472CC057F1A74833D8324ACF1D5F9EBBE74E1EE2A9E15456C72C9
D5D06FBB7CD357989F5F42E6A5751E3420F4AFAE9417A20BE02912B39338A6BD
32136CC63FE410B9F8F2D991A2A930A606C06E15A1F25C0103CE90A81988B39F
1003294FD5EF4BF011D17FF7A313926F6D4762322BFE4586E0B11A3625B8B9C5
BEC3FECA063E69582215DA7727F101FB90F29A5179A54FE5CF349D11EB15B068
2CCB92149ED03E694B1EDA0C2DE240E1E8C6FE81A2A0F14AF43BDBC66889FC7A
37ABD368506F1CC6EC4F6FC2AF67684B23B68206655DCE20D575786F33214C4C
B8F9632D47E287F8C05470A2E632D36C86B9C62A0F89077C586B00CA7AB957D8
75BBB525A654C4E86B23A696B0B1A89A58F0A221FB59A9A051A6104D80FC127F
C170981E0F3F713EAB4A579B995858302E2C15D4CC61983C7A31D6BBC0BD90A1
F0EE75356074785DAEE60C6A8A50BAFCCC16EA690EDA117BE1D8F587D4562A1A
A63412B52D148B2DAFC283F857CD39C9E34A0C0FC4EA64F7A7EEF7F06FB15EC1
E01B72F6B7CE9325F3DB85B6B30AE49F8ABDFAB5753A7915E1B67265585161DD
4617A1C9AE715ABD62D69ECA3055AD27D520A7845C48E8ABFAA41E1070870F50
E2F298442011A8A76816E03B228E0D7E7DC738CC1D2EFAF174365FFD357CDAC1
DBBAC570F13DA888F46B6135BB9A0A5B55266F8587D978EC86EB8923E618E8B1
5DC71AD80D3E67B089945E3185C360462B15ABEACBDC7A3050B8D2CDAE12B273
06066A5F4C62285EB5468D931140EFCEE3D5F68C7B208FF8BC1E3BF1B21CFE5C
2421F24587324C052F4ECC66358B14EB2A4DAC8A040C8A8D7896C879D36B5686
E7167115FBE401D3475638391E41FA546450733B4E58101E7FCFE0CFE749B911
230608BDE91F9D5E80DA4560534988808763ABE67DD59A5D84341222D5C0D782
4BDC1690DE04EF56A4341D8F7CA37A5C3524990C52310810D3A8B0EE92BF6A4A
C7FCA094F32499AD8B25377A403DAD93EC84E6857D4B3C5AD86ACDE1745029AA
879DBB7FB52F25A53BD2B50E7B46181B6D26A490E94F731C429A6AD4B5BF50AF
BBF7F63F80E4F8811ABB42977F52E1D9497B9725EB1CF7EA61D36F34C55EFAA9
B0992C794F3DE24137B2FFF3157376A592F5C73A12BE522E1332093890CB790E
4F463F0184787223F9D238964C6C611173BB300EDF123A310A58AC385C3D3348
F29FA3DC99F38FBB62A0DF8887E01D9AD09EB8D28FD5DB93C23D6FE618BAD645
D3B968D16170959473425E69E473BE96DEFA7D0C5FEE87ABEA2821721D9BFDF4
7E63B2FA3DE30E28681AB7AF797660EDFE7471BDF64A6A0EE9EDF6D65C7538C0
6B15F95C0227E2A5A2C11A13A8142AF6554BB51010C5058837F1057B270058CA
A11851C6F5EF86639BCC66053824426BE23C9C3D05F5DC3151252D953C9AF56B
5E823DFB6F49A82A87882DC4F40F0515399AC03FCF72BF32F93204E06CE85A8D
077A10BA2730136C78DD7841E488CACF13A456031D90FC1D0EDEFCEE3A06766D
B1C7580C467C2BACF187039CA9C79CA56DFB2D55826E2E1423E8E28EBE8D6250
D70C0DDAD03F9BB80A99677C217DF4BAF7FA4A5A957A218E09FC2EF880109AC5
9B5E5C811902C2BC8ABE0DDEFDDFFFF5B8CC0E121FFE43CFAE3010A4B3457976
0A0358251155F7C94580A653D9C4818F5B87CA9D00BE285D6974464B267ACFA8
0E86070474643B483212A736C94FFC3C7DEF165C7E6A3A3DD7C644C1F8C47107
7779BC0A6B3660102EEC108C611A2C3FB67638A5315A9E09B468E7067189727E
474F6F922A1A341456C9DF9F5E4B046B5B6591413CBE008E89C8B993B1F4FED7
123EF69CF3BAF1CD0F769CEC90A9CCF88AFEFAC3E220897CC33FF36435506F37
8BC17980CE05D207243F6E1B6A2736DA2213158880EAAF1E5D7FBB408B6C22CF
A3C85EB00BEECD513BC98B02E3C78C0813A76FEA27789FA3C8A0008E40478623
3CFDC6183A86C7356F4C9BCD0BB25E144C2E32193AD5E6C1F5EEDE1A57BF4688
BD100CE0A61FEAB9840102C87F60FDCD5C262BF8E232C9281E5586AD2A4BAA65
E5376285955AA5B2EE48EAFA1832D152DC4C2FB8A6582950ABCDE88935AB153B
E2CCCE78DF47DC9638E3E88775467AACF1FB6F0F565AE8A2DA667C6F821CD10A
41E8FEA421D42BBDAE16D27D1045D6A7220F208C4F65D7BF4C62233DE8F40F13
56685668C6561FA1406E0AE4F1DA011D1465A9CCD1A6C1E56728201A8A42EC72
71801B3F9821C9D11114C5FAE18A981FAF02361E342834523E1FDC7294FC6C77
8396574A8CCA66682D2711C3C59C015BC907DEE5B86CB8017A27E311AECC69D7
5E5BAB725F14A84584AE1DD567B1959147DDF0D9E92199FCAEFE1B7B1E277541
3F8A77DE20D275320A9FEC4AAADD28EFAFE3CBF2ED1FCD70B4A6855E9E135971
0B65FF8BCF14F3BC374BD59BC809C19A9F9F7E71074F78E59A64D7B06269C940
268E34D3D010692E5AECF7EC98780B4DACC3E67CBD332EB57640CAE310F55A41
54A5F2DC55D5EB14223B4F22C4E986619D6EB41AC33001CB25CD24E2419C1A15
2A3878E1338F4B054272D4C88E571FBD2552DA43505956FED9BE631DBDF20DA5
60FBD4052E6C5FFA246FE4A77B4410EBBDE1668F9098DA4F3F84E474E0DEC890
1087552BAA54F8A2043A5F0E9F2F8F7E76CFFDA87E5DF52712A4F120E01CC44F
E55B0446DDF1E418EF6335B4CC95802DC0FF69F6C6CD1AD32DCFA83149976643
7D1F2D905B2F98B8E5BA94165221C8F1C4FFCC24B5167CD3FF9A95606D81A987
8B44F2FAD54B244B2B2415B7F83D30245AACA25483C596BF1E7DF9973B8B1CDC
E64421C90CC188197174347C615CE1A548444E5FC085D2122DE6877277283173
1BDB447AF63C17071D1E15AE082D01785F12F3D8858700619FE73201DAED0F4B
949526DA02498B35BE92E518A0BFC1807BE5BAB9DD2B83128AB2E6D2DB0645FC
600B1DECE9A2D52E757A99E52446A89024184D58F32A3BAC71E3CFE562F28642
C6E5487CBDC2C9A1D224C5C91C22473C7A4BCE6C0AFFDE079565A149BE8FC2C1
A0390D4F0AC0F94887F8EFBBFF5C79A6E2F29ED085E6477BA4E007DDE94A57DD
98DBE6240C3F088E5EE31E0A26D0518535EF79083BE9C4B25835EEB49D375506
9ACC589BD1863007CA15BFCCDD47E204E988A35DE6DE0F7B31F37709DE6A4A9A
34860698501372F67C0DF30C7FF2B337B412BA33B7EB236ED2CD73B6AC478B6B
544951C0C66698823E65E481FB19B8877B3A4B0DF10C24E905159F3AAEE184F0
EBD7BD81B8F36D9E7A852B91A9AEBF21A6B52184C18DD77012E8D1E6C9260E91
8E98068F7DDDC5025913D71C577328B73DAB8B8A9B04190B9F616223063E6BB5
F63C63B0B97189398F54C8E2563104256C99C93D0C49F331945609C46BB9A042
888A21AA4B4C40B4472E84FA7D2418685F15FFF7192BC40BD10816EED9D6BE50
FA694F76BF028A3A9F556B09DE2A8D87E8EFB5D8020C9AC55E0C69650E2DEE1D
769EE4B4D7B5CD62F68AE2C1C64794B71CAED2340BB002F3A5CA6A92F1A9EF2E
4DFDBE52D305F8CB7FC294ED9D6382CF7E4437991F13C9EAA744624D93CCB041
05AD5158666FE4826507B8A3AE2A696DFADD80960E63531E3DE721653F327E41
02BEF3A6C5F6B80B502DBEBA38B58085C15A341229951C6D398E4AA8CD2C8004
84A162D9FBF829D8A10602A91EBDBA1844E9D009FB17B23529CEA88EF67400AC
AA688084FCBF88860DE1B8CC86AED4DB8CCBAA1F619E59410475C0C143D17AF3
7CB0BA8186024CD1AF6C633937616BC08E7AFAEF93F5385C9412A2B7D0B9AC6D
3A1B97CA08BCDED2C8EC44D2AC1B980A3B3B2358C6DD06B843411B1BF6389D4E
191BADFD0D785C040F77FEBD49954D86242CBAEAA8E1CD6FB45EA11CF921E163
6C2F07D73253E65F0FD6D3D376E0ADBF19E536989BAA2C5AB3C294DEA8C61F8C
FA992FDB8C64C7BCCFF707DABF27B39BD0DD57ACE40E24B8EA621CEE797BA17C
671850972D3CD90EEE415FAAA71DB96DD119B118DFF107F244F6256C11B11874
096C854C2FC59A854B6832751ED72A2F4D1F27C812749E80FC8C05DB89AB3DDE
D5BDB6990637D4B036636A361CD4B79A7A84DF29E75E8D16FC8A6358DC667030
F40875F192BBA47AB1B080D6763A64871A3AD757B12EAD08184D6B5856036460
C8F3217F8D9E4212FE9C2C1E6853C108F19214A441861B04C4F5FC31A3135945
B21AC28778CBB8B83C29B27E8E4E7BFB5D6B978F8A39FE0AEF87FCA40F034995
5E87E7CDFD0235E3D675939CF5F592E658193D3E50DAA892258D8F75AA45ECF6
A05166E6AD760E16A4EEC932CEDC47892FCFC63EB837A6E6EB5B52540E2C911C
835466D3792E7471CBE413E9A3E5EDFDCF4DB66FC9E407E79359FB49DAB403B9
1DD011493829A9EF5B253D08CA01EC46FFA719D400BF4AC81292130254610D30
676772EBA8E3D20F9F0704D25A3E53688CBFA815D4200C4F4BDE6000D5535AAD
B32E83D328500A1BEA9D31D497DA6EAD445EB4B2F326C489B2502F5E9A4DA978
579E3378559BE68135E4A389FD0D34A49731636789D4EE197B09DA72A10177D2
4E5BFE4C5F4E952584938E11AC98B100FBAF6FC09750C0073838B84C0126824C
7B2DD10F78AE3D518FED8C8EC688D2BE4C0665D2C86D63
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Roma
%!PS-AdobeFont-1.0: URWPalladioL-Roma 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Roman) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Roman) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Roma def
/PaintType 0 def
/WMode 0 def
/FontBBox {-166 -283 1021 943} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB756B8E2BF5B37627E46
DAFD4A4F741A859BB5F7D7C77FC7AA96EE6AC93C06CA829B81FE31E32D59C6DE
B1BF3B6CCC5C3C9296DC86D01487F08AB668F656CDD88EB816AEDD1EFA47F014
FF598E78C978DF18F8F66057351BC96B48015AF2E09E3E318053E952E9AD4037
BFC7EEF9CBFD7BC35746565B7EFBF241639793AE357220843147FADB929FBD24
01C88A382F00BF79554D125C543455330002B0FE6D229830470C78541E78DAD5
3E7C1A619B91215AE025F81561441BFC9ADA446035B8EB9C3D69BA746AD0CCAA
049D1FE4D905DF3F48D22900E02A23FB23F6B571DDC8B2CF7008431C1EAD7F6B
D92A2C42CAED94F9714F44E3CE31FBAF23A064AA2A7F13D6E5378E28539F0009
323A0755E58BA7564A408B142C230672A423DA6A6E54ED162AFBF8FADFA75B0B
FC648D5DA6EC31251B62B9F619AD9460876EEFCB8F9D2369CA3055820306533F
3C1D47D5A2EF97619FC2C780BCD9540A820748369FFDAB9D52492F130C0AC3C8
E0C87377DA6C21F1DE429C15AA939877876F84605F6785B5ADEA97321BF29DEF
3692AF535EEFE801975F94645272142128A3FEC8B1BCEB6E57B83520B5C4DD69
36DB8CDEF6E49B8944CA31C59F8790CD3FED58F1182D9AC6DCB2D75B4881B430
C67DB769B4745EA54233CDFD5600BB2A96209A83FD04C13D4AA4AE27DED97D25
93F6FDA5F64711EC7A2899AC98BD8D8879A6A348265832994C3BAD80E1D12291
CB05924302B780443A76A09E1C27E8DCDCD87FFE3BE17DE0421A47733C2BD723
9C876942155834190F65598810AF8CAD9842F8A1E3BBD2AE3348BD8FC9189FE2
ED5643EC4D87148775121702EEB7639ACD80EF4F07542BBBC09F98F81FB91A1C
89C691BF38CE4239B11C1C0D9A6B864753E204C0BCCB093E139F9D6104FE0584
DF022C621F86E5BFE2E047FD560E8A89B3872C87F7811E9EBCA9CF182472841A
88E7C421E5CE69DAD123B88D4E6C0FD85C86C74435BFCAE28C2B5CAD57D91A9B
4473906D044085B5336B066C6D9CE994D2B333F470AD32D3BC28BA2D699B7AE6
2B689CD50CE2D458501EBCD2381F3430C3059EDCA22D9F15CA03CD18CB160E59
C0E960F79010DC1E9EC40BA6914F9FB7951CB4D5AAFAA135C17D5D64CD848A32
C71A5C856CC9C94F24B6C9AF854B83771678C0B0B4C6A4D9C05ADE69E5C04697
8751F11D2AD3F78D45115A0F0D564DABAC8AEC177C91C2946D5B9FD8DECF1E26
FAE568E3CEE9DF3897D4256F3134B7F3A134993536AB81B2E45EF42240778A79
4A4F10E1AAF04B24CEFDB78D3C62F09DB1789801729BCF2F196EBD7415B504C1
EB30A98240A5DBBAD1FAD5AFA9BD1B7B08ED668CB7AE8D8FD27767696AF2A888
D2012CD5E72B92E80B1EB0FAC4FFE1122AC115B0E9987359D656AB8E6CE48266
18615F0F6BFA0F998FBA3EBC109801F114AC328677F7767018909002301A0AFE
9D416B32570E543CB79A87ABE184590223348E51452B505DD0522F8F04594611
58E05FF7F59AE40665B1C9C4B100BE8334ABEAB252698E633408FF890A429693
98178E8E9086980397402BA2F164CAFB78E4914D224B57B06250F720769FD0F3
D31C6BFE42F3BFB8ADAB12E05085C22882274BCE02E58CCB2DD80A97CA2CC3C9
71D049B3CCA668E5E7DFC7B15FBD608B0262F7CA566AF899DB068706113FD771
A03C633FB7CC59DC52C83F609BB496317EEC7597BC2C48552E6F3E76B34C04A2
1773E2EB42020B9DA1C53FA40FE42FA89CAFDDE49CDBAC5D23D5D91FFF4EE43C
79B2D1BE3072D6898B2707243F409731FFDF5CC59DD39D8D40759EE9B3BED754
A63D9D962E225BE4CDDBFCD51A4E1260CFFE758ECD59EAE9ED878D047D2E7467
A552F704EBEAF9F9AF6A649DD0F7E5D013A694453D99349FC4F65130127A3BE6
7847808336771B8093FF5CC9FE8D9AD16D04DE108727FD7C001FC630378E0843
451E4D9840AF87F800D3B6E0248AC51AE90769453DD157B162EC914D673AA42D
3DC00BB1E2FA5671C1DA26CAC3FCFFE7C6728D9E330928C1E5FF577B80FE1C82
074518D7466BB2B91FDE11773B6435A5C58CB39775D460226F20388BBF95B334
2044FBBAD6904EBBD089B189203DF723F44B7870557B23B9D45CF28667266402
E11621A5A623CAAD1FA80328613C1D1030F6CC9B504E1FFFCCA352431A0D5BFC
FCFAD30F86768E3BEC5E192ACC1FBF937035DB4920F0B8ECF0E0617987E8E672
F4865524FCC099290D716C9C1BEB9A81479EF18DA2237CD71F4CF359B4AE356D
1DB317D48BFC971B79387EB20F148A6D598FF2805240F62B2393161B2701068C
DB309F3DB39CA8CF2A2177502BC2879708341E84D32AF03079C8A53CFF146BC9
BA85094B7AD0D23F47F26B6BE853545FBE99F703A6FFABEEC41B415182F40F52
3E462687AE0F3B838C3B4527EA4929E4C6E6FE9D66123C78D762FDC1622DF8D7
6298C73296E42990B31A07577CB8A9AB3E9D95324248249AEB37B5B9678729BE
B61E702A78D3660E42732DC0CA8E68B4823E482FC5A3EBF6F30C1D2EDC39FF4D
BC037F2C19602304394C529C4783A7ACA621BB7A2850B9D40BF976BB3F13781C
6F65C0854708346913A8E0C73C256A2B140AC79767C883413632D88DE8FFE4EF
7005FAA7AF982C172A2E03F8F09397A487334FDE106450D2E633583994419B27
566260F6ED768BD87C1879FD06ADB7C99B976EE2C88AF259C11067EF1272CE4D
E2AD8E509B7F1E51DC0EA1314D41EC6841074A8E0DC7DF3BD0BD84389B4D97DF
A7B1024E22917F39E015E59EC31B3EE964CD0E9A173DFE09A8210577042DBF4B
F45B9D80E84C9200B574CA2EFC9F6DDE8FFC6DFB3D21373B5766BAB99BF06D24
1D07496805F58E624078BCECC9384B0D14AF8EF62A0A7347F6A3ABAEF099DB30
85D6BACC2E900088AD6841C7D22C0071F5BF6F6786D9CFC2BC8E99CD9A8FE88E
81759A3C57F31A1B749A92CE78B4069D631047678177F03AD7B8BB595B3A9549
660A19A1E6464D99B6F77692F226175A38CF69B612B32BC4A432F6142FC8CB29
49498A322E6C2DD254985D1DED29E1B72F8EF51ACA4F77E2C0A459FA2AEDE315
E9364411DBD79B6FDA788B2A4A0EE7735795304A6430A70EC98E981E7921962D
745036951CBEAC78234AB640F5B4E5B6787D5E769003941B363A7D885B414B59
1354D461B2681AAC169B271FC609982B9E69DBC55E6DD283F1D3A52C5BF591B0
A9B27B9B609B64D559B0F0A75EE969665E34962ECA8E4E071F214E6FF63A3860
6D791E652BA9425D440C556AF480C03BFCB416F0F3C758E8D4A22604726AE9F6
AF49B864CD07DF756EDB47A8F71C3BE0DC673E8C2374CD62184F41224E08003A
D66D4825C650D6B995593B67BB57B6D5F857BD4C118AE533F46E819D11CDE003
14D4E0DF2FB49F8BA556DB5633EFC8C67C61E95290E11A6BEC7C285F0092AD48
ADCAADDFE69C00E187DFEBA20450BF2D7051B1C5C921293446A024AFFA9AC0A9
FBE3771E8C46BD42E14DA219B27B514F98284BEAC44FBAFA2ED3C350AC0C64B8
24E7E38C93136CBEDE51AA6CF0186BC094CEC2F97E5005FCED9FFC797E6207C1
BEFACA6E743770557EDCAAE9A2E23ADE6D0B92057A04BE4F2F53E89DF89C13B3
0A85ABF31B62E3BE1E806C7855509CD57489F07108D995887AEA9D20B3C1E85B
4C766F93041FAA0DBB196B0A220B8E3A9FCA62D47023463DD07C26FF1769A4C8
A2518CFEEC51A393401A2C3E8EABE227B936313AAFB000437E042266D191D963
D97E95A2589E5DF9D6FADD368A715AC0D3B7A1ECFC649A61E39641465400B651
11C0CD77AC6662DF2F9C524527DD20505648123C0BBD2C7DB1F1CC74B4A64602
A7207A5E4B76E2E09A64136BA119E4F7B9DC42002C4C553EB9111573C1FFCC36
79ADC9A0298869ACCAC8EC6AE482EE93B3A900D0164240FB570FE1D7CF1A12D1
6A4EE7037A492C6E299BEFCE25597AE756DA5CA9D1FDA61E88C998834DCE29CD
3505992AD7680BD4723D09BF281CCA25DD384DCDD067444272BD8E263B7E189B
065832EDFE86D243B72B3E700F97E1451C4DA6A0946805D0E9BEA948830E6987
404A4ABB37B2BD32CF9286D250ED22087A14C454EDD9570EC1EF7BFE2DA4B5BE
5CFF57FD2CAC717013E61F8FF3A115780B4E2257FBAC3970B2B20819C87E85D8
16CA5EBC25D24A2FA55862DD786E2770228B5319E19372F8A8F55F7AE5824893
E3F2A4776EB709ABE1ECB515BA32E9A537E4183EA50C25F204C393931F99F40B
7D04BA3D5612F7522AACABC814AA2DAD380B69A047B8DA4F052F1D50AA8767E4
FAA063A02F0FEA69C9063EA1D43063342040C1351D1BAF3C46AC27CE1449920F
9A073DE8A77D3E67E54011D9DCF8C70A6E4AF6B269BAE0CA28563B02CAB57B9D
C5BF98B15B08D0B6E2FD051D5AA7DF9BCDE600EF35D20AE7CE47AE35A156DDAD
111959E0AF61865A3684B6E0FDE48DD0EC6EAC821F83722848601E71F3318F41
061465C24DAFD54593AE7614981A0678BB2138370763770C3BF284B76390DD9A
A7963A47EF2E39A813FC4891B49EF46BB96E974FC51702C2C33127357E9CE2E0
925A350676B2C4890EF433B6612A7C8D7CD3B041C16FD67CD878035F25FFDF86
EF1ECB8BE2E564A375F6820E9117E037C77F024BCECA515BD60076098A654CAE
2B7D54F8A7C1B4C40FFDAC0040D9EB9C436FDF8904A4BAC6FA1D90B17A57940B
DB45DBD0D04A282E37DDCC88E6B3E92C8F04DB2D952FF423341BC32B742E2379
30B6498C50F36EC39D1DFCE54BBBECB23FC1C7CDCA7D5229975EB19FBEAB936A
5CD8DDFED8FA29EF15E654020F34D2E4564D557FF2F59C5E6A27F6FA044B2856
E5573D30CBD27D95C4B672323894D5B24CDC33D18F40332E781289C284BDF5D1
E26FD6A5236B90CBA876AD485BAE73FA5299A6343F5838C666B61470DA712B94
7316AFA38D30B70C958A3C0D7CB61535E56121B290A62E6F51A1FA52F08BAE1D
E76D4CEDF6C1C609350E18E00FD0752A640EAB1BDC36EBE59576BE157F0840F3
EF427451AA0BD9CA1FCD7D86C31D12776C4CAA93CEDE2B7FF63FC9A763254F24
95AD591D39A5CA4B4ACE447ACF9876496B13818E067D3EF1DBCB5E4FC89568B3
5A3AA86DF0E2354CCF5C5EF4C9F3DF525CF8B66F3DBC506B313D823947D0051F
18B5373B7CA0A6537478517E6456B0EBD937AE2B584ED999960282C49EE6ACF0
944E02A74E923BA1B8451EB8C8663FBE2620AF8DCDED6153BF5AE98A02993C18
F5228D9C3519B73CDA023468630AF059DB826E567081D625B60EE20D1141AE2C
28F3C3D62F90C2221D7A8E39782ACB8A908C5E8C355DAB38E029492A3761D716
5BB086AF5244AC88A48C5DEF86D09D48A6D111C1B4DDED2D1718F457722DACE7
A51B93C9AF2FD3107EB16E658A5ED2AD984AB22B92C60EBC22673030FCD12153
EF75A00DC20A649218FAF36BF07045D62BDAC3AB80DB4844F2C3DDA83E0D3865
ABAEBE8A6A325CEC720FF99651B8EA2DB2812E7FCDBA672C3E6A26B4F69672BE
3616C49C07BEDA6A23C990FEE5DED4CB035948752BD90CF4641D3A1AB90C8C47
A8A338C4F7B3F6AF8E6FC439F43CFD47832A28C93F537B8F053390E2ED53A475
F388C614331792901E33FAB46F16E05C447E85BFB421A319D7DE21E91DC93BC4
29BEFF450B6951F120944F679A2FD2A0910F421C621232A49DE26F3F7182BDDA
A77C93DA2ED4351666F90CC1B24EEFC1D47A92BB56F0352BA829E167AB5A5F7D
6C95E27EE33AAFA730E8E2000E51275CD0A783ADE845BF88E18DC3731E91453A
73CEB92BC6CFDA2C4C8749702D9BB011C7D04A81D8A671BA39880E2C98150B2A
4EDBF125CC1C30D674BEEF419BE8E5B70A0023068437AF28BE161CF8FAA12AD8
73C74850FC8B69D15E90A59C5AD07CA7E3A6500E4D89B09DD5563FEF3467B4DF
7732AD755319FF7DFF97FA9E86D7C5F02F2250BEA09653B74753FD7BB4C479A5
9BAA3A105282DF6A35151D7C34EEEAB5D91E09884555A1C85E26A087B2C9397B
1FFE3252825E52935EA24E96E00E5F95EBCECE33C86CCB5C80EE1E1AA94D1F8C
50639747D4FC9092E14B0BA7554EBADBDDBD21A64F1A8AD69F8E5C9750C4C99B
979F631BD3814EF639E5FC79015FA7625F2D535767C7FCC48150F1DFEB71B17A
B6126C864AD7A343F782B071F59BB055F151B8486E0E1E5D62EE921BA1C11EEC
B26A0473B30C8E4A400571DAB6F722080B1908C5200EEE87CC6C676DA85B3AC7
8EB1619EA7E09A17E7892CC8930B6C0481EDF2724FDE4A5B2FAB1B41D31D0D0C
E89A319CD781504EA2CCCCE5C888A572A7F9D3FDFB32501CFDD650E0C997B175
48D1A3E777E280AFD236FE46EBAE04002C119C74A5EF039C8EC4523BAB1D12DE
774C78A0BAF50693838109D0DEAEA56974B27AC623150AAB3E8287C307F553A7
69F6124346CD79B5F21694D87989110E575F71214886E42C0E595681980B7728
5AF5BCAF6C0D9233E1D1F61B549704DFF82BF14931B22B465D1EA917B10B32ED
08E70482F0658D21297DDB8E781B16E78E2D2932F4590EDA5DF4A1E25783E9B5
CDCE5F2B1CA7379A8627F62C3D658462322630C2D4515FA048047C0B78FD1C24
4BB68376F4A6B72B91DCC5B8A7A8C3B3E175B1D22F687066179B05F4EB955747
2998F574AF99DF6CF36D15257F758B5D150CB3584CB2DD40E8B29EF1F8CD6F62
21B5CBB72AFCAEB3130AB232E69939AE5D6FC720EE76C2804AF5DCA6A0F79002
9D97FB8286992F49CD0A2D2644A1F10D20FE170CA56A6688B2F97A82DA55BEEF
A17485FC2D8977D3D8466485E76E3FB313B37C455191E057F5D6E69C678E05F8
68C2ED17BD1FE69671678BA5B3A01015244779FDED72256089CF8C3FB1769452
632D38F7E2EF4017C6AFC828B9D4E6FA617AA5E4D5A49724B7C251841AC84485
E28084F09311819C67296CB735C41F862CECCABBFFEBF0F70C0EDD576583A6F6
192952FD53DF52FBB756C7D21AAFA482B4A7DD0E27D8ABC8583B1FB0BC61C722
E20FD71907F2CF57CAD8667DFD674256D084155932533218338E38694FE57394
6F9445D28DEC20233EC224762E467D2C62B3B23045F09209436C7EAAA7F093ED
8AD1FF483D54921DC59103E42C36B213F9C7704512110EB66A0EA595C5436389
55925AB08B3BEAC8E02C097DF4B2A85C797DE5E7C25DD24D9889E0CA5E640AA3
6E6BE2E5186292AE697DD80428CAEB99606BC079F3A0B8B5F70D97A0E9B896DB
F8B707129C8244F42FD757CE24139474F1DC187D03B7892E8A8974097A0F3E30
FFE8EA6D1A87561E6E4CD9500856589AAE84BDB3DCE4EBE2C249E7CB351ECBF0
AB3D57FC926C63C7418B4BCFC127CCAA55742540433187CDE5C0831925ABCAAF
29E069A1C60A2F0B1EA9B65541298379A98F8FC8169F6CA53AC196D0D29564C5
44DBFCE1ADA35F64393E93E3AE7E97E9BDD216C1D27D4C68E3F319A59BD87CFD
884D20698E6DC6477B2D359A05F39571E4B523AE3C895912EA1E6C6053599475
4BC83945F39AEF223DB2AC8055C6553DD7903A49977230F1F85044E95BF43F4C
C39C1712E057311DF474799C7449FA8F5749DBB7A7355AD0AB8AB3CFD09DA194
14BDC43AA6155E2867706E51CB96E8561C64782374B5BB113B860B56CB0362D3
55933650EC8C92E3CD1667F35F9666BF24818566F026E25F3508C48A8BB31377
DE3B1B911616D9D83BD9B3617334857EA92C2DB592CF08B3DE2FF46BAC71CB65
CA8AD5869CC9FD7C4C194AE8D5D20A780293D479FFD5CAF4D703926F1BA042CB
A121403FACE3239AD76BEED158DB3BE2DC4BA1DC216B2D085F251E51A80D32A6
E6302E20A88B91EAC2D1F8961FBBD2560C2174032BB57DF31DAABB7DE1EBAE20
A38DC804C23244D5045F576D9C446DD56ECEEA07228F0B0DD14607112ED9EF0E
112CC860A42D5FB50529EA6CE284EDCD95DEB8969FD1ED07778DE2F62958FF40
9D37332AA4BA88CFB197C0A40AB5B4758AF32EE889194AB0C6FCBE00A4E85371
9DDDB1DA9475D34528238F35683C726119CC760DD7A81CDDA23EB58FAEDF9409
71FEA8BCF0734157F326A0C9AC332202DFEB04EBAA1CC102BE870E086BFFDB8F
DE34A307FD04BE442CCD16DE83E99B0F4A87D8D42B5749D9766AC956F58B5B0B
4F975E059C972EE14D1E7FFE556472E7DEBAFE008D7367459352EAD6B4A2A6E5
02E9B50D6C82C0B57F6B0404398E6DB1E7C694EF5199C717C8C05CC414EE0EDE
65BD9EE02D6D796E9C6D5613EE1854FFF474539ECAEBF49F8132D20817ACC970
06A17CC574E6D02180555C3095FD9E572AB7D0C13C6578611E8AD99341A3E576
154F231234B648B32BA57CFCEAB6A6E3A6D00C1C9B656A24515D104D18F15154
34EF6D0EE3E54A03B90556DB2C486CB633041D98B8D792DA3C3E096477F410E7
A303DF077BBD256FE9B411F0576E73726CC811FABB2D296C5D616001CD8F00AC
3022DC1AE865D0840524EABFDD96C37AD28AF1C3C5F56B4C0BE1F118D054A2F5
DC5F512B21F0518B9E3260EB81496D3BAA3ABFF06637586AF518565554C4D7B7
A625C1350893BF0B820A95DE4DC41C544552F707ADAFE8D8460FC48F3329A04F
F9BCCC871F588436821AF7646E0A5B0894537524606711423149D9F31063C636
0DEF03AB0E82C608AB03CFF2B0BBA26006FD498F7B8A680D209F321D7FA34172
CB07D301C31338A30B2DEEC39CFE18B2F8F9245CD2F5FDA66CC7875CEC5973F9
5A018C1688918DAF16B548189AD8068A5D55FC5333A0AFFC7770240FD125D4EF
D6852E13BA39C74DE51A1513B2EFDFAE341E5FFF146C3A78D480FBB740B15F02
D4717E3C16139F826C96D7322C7CB5DFC496C4DD4405547DCCEC62D67F7D04ED
14BFB32D71C74497E0AD8568753C04F9E8C4E3E41B1B7331E5168F4A69F1FAB4
8FC852CE7C53C0FAFBCC5F6542BA37152F2C34EF89C4C892A9E4F0A041247DF4
FBD194FC6D1ED8F9E0AC14D1C5CA1FEE4603A58DA94773BC1AA35B31C45EA8B7
525DAAFF7B70A5414E182FB7D57AEE1526874BE44B8F5E92D2F88DC8BDB5CF53
E44C832B9BF0E529D844262D01ACFE1A26E6C7F496EF2D2E5A6DE68916EAE505
776D90A2D1A68B51C0B83856E9927C936DF7FE8A81A0259809EE9F92F7666047
2C5BA5E78AB435FAC919EEEF9BB535B3BB2DF00419F59E7D9B9BA37245CA14A5
41F77604ADE5CA870961C65D9EE861F61D0090301FE39015FD53827C84050FAC
E29DC5A593B40E732D3FB96A73D1DFEC96B8B48C55D6D0B9CDAD690F8976A671
885087F49909A6399C1AC4D093AE96F31557A70C45422D1795581A3D76B9F387
D719B0005323B20AD59BD541AF29CA3946912402BBAA2BEE4DAF43002692041C
4FF7B281B04DC1C56AED7E3E83B767E4E968204B3BAAD1969883FC2C330B4F75
B2FB0D5A087CE736B14E6BB73F491976F265C098A20D5BCBECB3BDD3E0907D3E
933A0341823727FC16B9DA0C6C6DDE7E4D3BB7B830AC7CFB155A9C9190E52DFA
CB6495547922C9A783B786A3D5D0C5AC21EE34434B5EB5B995BFC4DA81D143F1
6110B9892219EA62014336DFD7D79CA86DC60A2CCED7313934648F7B62B09979
398052331F5EC24981C310D03C6340EF20A6AA719A576FBC7F0793492CA7BEF0
6D439417455C5DF4EBD8ECACB63331266D46E6D7F7EA561AB9F7EB03301D7B3B
E29063F022AEC92E52EF84F8688C860B050E0812114C2AC669D9B29B5D11AF2E
820DAF8348E3DE2CCEE6BADA0AB5872EEBC01DC90D8792BB447F2171E48432BB
AB96BED8C07A9CB1B755EC5E1B8A02D40FCF2DA924BF5B620DE38F5002F02D3E
7B31D9F386F774FFBC77AE08490A2C3AA8A9E31BC80848182189DC0F82F21CD0
C6E32773E3FA0A63C03DB348ABE792AF9648FAC371F4AB8C8393F296A63643BE
3A12E486B6E5B6D3E679A7B5A8CC8D2229A01DD3B6D30C54086625A129417765
AF2FB181CFB8B23F517368B7FAACC8368171CB3D67603663FD812CACBC72A2E2
D5CE9E8CE989C37F72E489ECA5AC88FEB3F4E9236CCACC568FD3C6321B99E7FD
62962C1775B1FA42E81FD60DC2EBD6D1F34285D3FFC8A29E97DC693C36E979D3
7D30D33E149AC29CCF86082B8AC66776AA4A613B77152BA69D8B0AAF3741D6C3
BB8A7A743B5130600F7A9EBF2FD426349C40750E67098665B3E230CCB32015F3
8908E4B20F2D83CBB78FDB6CD1FAFBC688CE7026803F091EB88CE191081DE21A
F12C1240C57540E73362D1F9A0904086EBB4A9E7C9D1BB679CBABE49EAAE671A
FE6FC58C092FF42C6D177A3E42525D290C4D9A6C64A43245F40EB62410681E61
0001264311840F91FAF4C4C43E5E8E02E1321349FCF43C2543AF9C4D1DBA6462
B88F8ADEF6A2F7DDE7A2AA7A5629DB44B919E2A7FADA3984CDF065D65E460535
6F5DB4ED03CADFBC4EAE3A07DD9BACA2C23AF631DCAAB68514DD570C325B5667
E5B46B778EA3CA655ECB6248982D43CF1487FF79D9763AE381D94DB00C64D515
0604969CD6B9C3E7748C9C093FF36C008CE70291990C201FA4DDF49EE7703D9D
FE30FC3F11D35789E6130614BD1301F1248952EEC7DA08433612F9747925B278
F9635F04EF3EDD5642DD0A220076A1D820075A2EBEFDEF19D1BFB839EB2D21E2
2B0068557EDD7E8F34C75470C6307544B6FEDA40136A0FC19959DF9D1404A2EB
ACF2575A2F30C6DF5FA2097AF77F579DA4E3AB7105C5B4C77C17370B26B9202E
70FDBB79E2F1D42FFB8C7AAE9E7CA25ACFF49B3E7509D2D29D0449BC7CFFD9CF
2413AE3068A03ACCC242DAFF02379B2BECB9CEC523E107F43CF0088B45FC024C
331274204C1E9595CA012D7174F75396E978EEB7BCB638D463F45D4F460CD581
94330D0FA2B075EEB8999AE47C52553CCC6465A318C7B26AB146C815D4C840AD
14A936885F8A2AD39A4249EAC07ABB4A2C47A7E990DFFAA871B1EB483604B6B6
95C88C555CC71F6A231446A9555339E79EBD2EEDF95AB3DCCC975AFFBBBB3AB3
A16D5585F6B937DFE5ADC3891BAFBC347344B9C64331F1C027E69B233A6BC54D
F3A9D8301606D669A756AD707F40B5E4157B29A1B7032F86ACBD88F88A6870D2
712521238F74278EA7C87F699E28F04FA753876BD921CC9830D768AF93535893
4908FF78EC89C3C5BB170FDAE7922D97BF0BCEDAEBBDA6BE7764CAC582CEA8DF
93FCFBEBC586BCB872E666A060E4D9241802B7288B90644CB6F9CBD3D6037A86
83539060782AFAC56389CA5AAA2F25BCDC92F98CFF9F3D5881095B96FBB30E83
372BE7151445216C26286A1459620A95758C87D68C62C2E180058433952B6985
25612082298F0E6E36968C8EEEE9E4F39F192B2A2CD3C1D603EE3527EF55A975
94DF3F6AAFDE81F65C9BB3C11F8E1406D0B11F7745CB40396BDD78BAE6679AA5
D0433A8473690787DF01663308A8F9E2CD0B91088F3DE113E86442C14C4F1692
6330A6CF2F05717B6A6DA0AA29EA8B96B90DE0CA87BD2E3FE287FF27B773081D
6642B2722A5D383DC3DE34556BE4A7005D97DCC398937149ABFCBE4A62B395B1
0AC189665735038CC22BE54D3F0330D6D4D62C14107B5BBB1A33FE2D6BAFC4BB
81A046D60B90189993C3D25705AC51622700E0E6AD7ADD6E0BE703E27E41B39B
AE86D5ABFB951A678B9FD0C56CE5552617C2B4E2F877A88F042931CAF75CAB6E
3BBCF090EC7CC3A93FB2A9E6996EA36D92DBD2D70B17284CE3F6FA6E71C3E1C5
8F8F3B1C647F00D147F33C89E76E4E8816F141CEE95FC8726ADC87E473C1A8E9
75719C13D0B931DD6FA82A5526DB59CB617F9DBA0ACB6E42D82C460F5522FF5D
4604DE8BF1664BE2611277299656A37ED83D4DA7FB85DB7526FBD9A0152EF4B0
1165E5F2EE5834F2C2F487CA8BC069E60E68EBF0290AFF7D77E2813E25B30ED6
B92B62F1651CB12743FBA7F80BDFF45A5C9C3240CB047CC23B3FB4762E5742B4
88416118607F8BFA186DC0A15E5A7A95BCA716EEB7D089FC50CC4816213191D4
EDF853F6D6ADFF67656FBABCA9841C59C936C9825E30E3ED35C779D61A907F55
CD9DF168F864F5F613DCE3811C534CC0AB36283E654327D81B9E131EC1F22636
5C749CE68B2F2F57DC0BEB0CD3ACC12BE72EBE063CEC68FFB3A8516B9A52FF96
083C1344502AB5FB46ABCE1F57F017B0A8CD28FCFD7A8F18FD4AE0210D6C2C06
62DEA4E1A01227978C9ABF2CA3F6BF90933A4F2969C25857EBD7AF81C215B00A
4E583588848418D342A1D4D0259818FD06ED79AA77C59E4B75B31EB720411FC0
13394E9A848702BF442D0F70FD30A1DF211A3795A9C98D8732EBC389BB647B90
4716794C21725D8F5B0A803AF98792D9FC9343C144A726004B8A4073368FEDC2
CB48F1DF34BF6336DE606FC20C11895198870B881BBFE2DBD53C0DF89B963359
55749D247EC067E191DE88CFD0A4F1DD464E25453351B08A09704D45B259D7F8
AD8F8A00E390D5F6F47CE1FB3E1E056247EAD510229AF29335A22D1843427153
A3ACBB96FC713CF30ABAE4631847CC2BEBEC083CF0C05C0E30F0B34457AD4530
EE68EB7338E7A3A97D8DF49C859723FC6BB43B7CAC8106C77D205785F3B25092
8C75E230CC48F8B90151A7578051855E379F4A7EDE97DBB3B270AE62BAF31D7A
021FF5FC228787DFD54EB5BC4501CB1E5F4CC8301E6AD1235AF7930C066B760C
97EC8F6B00668612D22789A74F3A0D4B1E940DD82659AC261BB494DF002CBCAD
24E5C2541FC6EFBC9DF203DEAF03E1A561F77CE42E7C2D63C87477A5962E4A69
F38FA95396D71D358DED2E819A887FE3670ED1EE9266472ADF32D718BE4E69CA
373169E2D360575B1C0EB608155D42F884B4A0EB462E423410C34A1D83662892
21B88187EB148AF69215A68B94A30088FEEC79DF2655DFB03DE8115FC1E42587
858922A5FEB7466C509BB5BC7D66EA925DF47B8343ABEF68745378AF892C68B6
248E69690C9AE1F66FBAE371392DD0991D792252723896D6D4105E43D207AA80
52854792C3AC196BF0405E05FE5E81A7EB8419BD2B190977C8C0FCD1ED2F4E98
B59AAD06E09E5F1E29B150EE1126EA8CCD820975F8CC4CDA46EF8C4F1EE17B3B
CD49A9B85C1DD123C0CA8C5EA2A259C419B2F978E1F4C7958A2747AF7ACC0E9F
5B34A0105D03681EBBA88CDBE87590B7DB16E7B1C0926FB02DA992EBCA7DB813
D409D20109CCF64B31CB5C2D1644EF98C958E130CFCB54F3360B020BE5FD7DF6
494B041CD5D33E6FB38465455CB336AC63334EE679CF3B9AD41781F30A5EF42B
04A1190B5884269D9271BE468AC0E2E6DD2FEE9F11D5912B7B2850E6EB4E3AE9
244EBAEBAD35AC7918DD4F490BE4C5A42696457E3F49734C4B5E51C7DD49FDAE
75FCDEFF3FF81C94BA66EAFEE2C6E3F1871E8ABB33397E62B13975D92183792C
38BE21C113707DC8D1BD6C1767A6F38278897ABED09C033D1CBE1401143D22EB
275D822B9C53ACF173441D317884684A5DC123E6C6894B6C00F8F4F6193C0CA0
4CB9750C5036965090789D3B90999FE509785E7712462C9E603B60608D70D7DD
6058B395AE725ED9019232C234505BBA2AF4023F60BBFEF460E8B09F18BB7291
3812FC14C81C578CBBC23C7B47CFE64F10B7EDEF1FE75F623A1C4B99C4E856B8
177310964BF98E3299560DBC638C18B1B45EA6127CB79D5ED5831866268A8C63
765AF536D13A717D91EB5B8F0E20A4FDD0F854A8430F9EA8A70166EEB71451A6
BF9B7D75F16F8CB4EFE729E102A5444626A25A0D897275EC81B0B49A2BFC9AEC
04569641B3C20EBDA3B87285AE27D3DAE73DD13D36293886B348E1712065717B
85D1F1223FC31301606743E08E35657BB121D124E270C67F1868C2FE500CFF85
EC69342AB07720A199D68534DB16D4360BDC79EE357F953C701838716EFEE2B8
91B74EB3C3EA073C4787027050773F7D4A509EA7AD0D2111E416FF8565267586
592927BB426D4E01F2244633862B102690C83ECE81316518FB78BBF223A60624
9F30E55416AD68A4C4005D26AD12308464CD6818213F6379899C514704EDA860
67E126D3EABF3F71E88A5FA89E5EB76914057C67600CE6AE50D79B44DC75DE0D
08D9CF9F5ABE604A21280674F5C2137FE13E0CB7A4566F608E0157F694C37909
5BB6957ED41C4946C2D52923C657CB78716FEB4C2C21631D59B961602C8A4804
73826F762E8B958124E20CE31051EADADA0D4A422AD1374AFFF084E3F644E187
9C37A1E4CE692616152E8FB0D17159B13CF2EDF7B119E13303A40596F048A31C
49094FD6377BC0C6309835F84E7D62BCE26735CC4CE79578BEC6E6CCEE03A6B9
AE1AE673AE78881F6DEE2625A680F3356FF0514C109D673AA58E7371A6A34DC7
DA5A0370F0F2D6FDB8AC90DD4C9DEC6CE2FDD0986C76336D808BF4BE4D3CFEEE
B3F00F92FD3A44AD3A6D7F87DF2BD3338F89BE2624BE292D89FABAE142923245
5D8BE0727F924450B7A5278508BCCD47E6C5B05B7FFDADF7ABA151CC237C0FDC
2D68D8904C9481CB7B525BFF347744AE6E85EEFE74610AA79831DF5EA9FE72CE
B1506888F15CC1218BEF14B148B2B5456B6CC965F3BF81EA6D504DBF0944CFC4
A423BCE1E467226AE0B39365CF469925EDF431B62C19D3A6401941DEA15094F4
380B740722FB2B181059096C657BE453A22AFB28D18467CC43FF7689AABF7713
E3898334BD99CFBE66C4FDBDD9B9180627931212A109A6CC8D6FE62BE6F89D50
06719D81FFC9FF3462A4C0F771593F5CC541BE24D02AFF56B18DEEEB89908D55
ED7906C5484FB0E9D44FCF6EDD85ED16B267CF579743FCAE8FABBE29ED7CC4F9
7EA3795353BE25CFD3D05E95601049B03FFAA653F82E2CABC8596EE39E400A6F
1CB18C8409A794245BE7A3DC5CB4A6C496001027372C9274BC2419DAE45E1DAE
BD6177B43EA2D6D9E95F9EAD282A511B44EEDDEEC3CF8C1CD3FC01FFAD306E65
B71DA25362FA923A1C770213F5546CEDD67E0CB859485583F682844189D0C9E2
1C9CA0416C17F3FDF6D16A395CEA43B9314242D706B380EB0EE95F36A3ECC7F9
32472CBE67001B87081FA67D4377783BD5D88E46E2668B96A0EFE7944D817E5B
C73377E7155A03A55E587532BAAE9DE070E73A17613406C711B92AEF8134F99E
A91708D5756D66B87C838592437274AAA30B1535E3FB56E88BCC646F39372421
5F535FE991920686F6574C8F67BC3774D44B5FF7010C93C6FFB55D0FA449D50F
D591E39B6A5C032629C85724CC1B73E3AB241E4E95C8D83382142D21572E18F9
A47F8CDF87E6666CB5E72F5BE5CB4CCA91AA2F7760754D8ECEA334EE26725672
0D6CE4B05280FA712230610C8D83F4C9F5CDE041E156D38BE5D5DAEB02B26172
1845AD34384F239A820E20864EA841182EDCF0999AA37879A65DD2F8F54E9F7E
A25DD2FF27D291FA5AFB0C215B9E38FFD92624B0E9C27A27B59664E8566EDD89
0ABF52B03EBBD31E2C5929BC1BA47AF05D473962EF4BB086640B12E95FC462DC
C5CF4D2C399068232A1294A29DAC701F82D7956E57025E7B5C7192144B553769
823BE18EB50CA7FAA2F815EE93C9E7F43A6BC18B43F57C4832880AC41C3C5F80
6CDD64A34CB4203DB0A98E40A9372824884E391DDBC99A51A0D075B9E592C1D6
151D1ED96373D0AA761F9C4B189830EE8D1475703B18423080BB2CFC8ED5E4AB
1186D810025F63FA10B46493E9849967F12EE3DF3BCD0239BFE22BB8ECA12177
C7C7E607CE160BD216209890529F382C932FA279612164BA463DC07140EE2370
1B050A96023009555378A4483D1EAF9CF14981D7AEC1634074EBEC25F725FCB6
40CB4A217669C30B543B1FE9A5F7B3FBB7159022C4F80A9A6AE4D3398538D919
BB73128443F23612B6E3040F6515229FCDB2A6ADDA63E9194BF16CD2D5A59260
473DDF23A85B531324DB9A2B30D4CC3DCF6B0746C1339D7FE3C1ADFC392ED586
4133A65221802ACDF73DE4C090240CC0667E2ED796A856C96638ECF1BA090DCB
C0B3445F20AE69B183BB63329F37871E4D537100C4D89B538E492DFC8832D5EF
2CCA3F99BBC41B415182F40F523BC9C51B55E4B99D27A83093730BA69532D86D
D4F2F27CD463E537B72974527BF071302A5B32E6F3D5BEEB8A2DF8F6FD3AE333
BABB1309AB3314985C5064F395EB02341C42B5C31A3AC1A26F59B1E1A0685184
75EDF093F71337060BF4040641A572BB43593818527039AC74080963FDFBCD68
4792387AAA48CD3D9A87D445CA03234AD544235D8AF5B205854F9BF1F07AFD65
2CE63CCE100ACB9E0DAD6181F82F434EDF67317874D7B2ED2A4995E08362A8B6
0E85AECCC56074FEF94482491DC499382C93A60D098E0FE2568235447928A5CC
0AC171FBC47998037CAAE89747064C5377945680904224686EFD2C717646CFED
9066B427CBECC79D637BE3D0D98B8A0F2CA6D16F64C3CF84D14D70FC76799A57
B8009493921B84A6AB4BFE41314FA52F003645BE1139A5F3332699713A1D0E26
C392220832FB00C79B93556A1DF4CEB57A1882F307F0EE099AF080659E535DD7
2842FD7FB86459BD0F10B0796C113D22152BCBAD4DAEB76731EE262D684627DC
8F839EECED8A0313F0AA2AD1F300AA4CB2620D7426002161F983AE95E542E87C
5536F0EDCC75AF25592EB7E7829E4EFAE3C6BAD0D1A5CE858A863A9AB484C68F
7021E9A1E1CC9750DBB35B5A632ED8AC2ABC213F81757FCDCA8EC6F0E9EA338B
249D34CE5F96174DE5818862B948215A40A87CFE2F881D6AF97D9BCC70D18E3F
C72E8A2CE3051BD437DD2BD1B2F366F2CD09BBEB1FA1FF7EF8999DBA1B10FD88
E772B497BC5C493F0DF9044517835C5A18B6EDACA49FE842B9179B5CB596CE9A
764D8FB11597FA64C204AA8AAD5CA1B30A7F6A0635F4D60C3D5A5D5AA54D4566
C36A1DE47BBF60FA142CF8E49FF59D0132EBA0E54724514A96DCFD18E46AFE62
F4E10693029CE085ABDC77E8EBBBFC63669B0778314EDF4F4361872DFA2C65EB
44D5CB662BE0B2807DDC74CDEFD3E5D7C8FE54C9A6EC3722200E4229571B8DDE
C4B23A97D080C2641931E59633708BABA1C0C2956DE7BBE53504F2B08A80874C
F0D889281F4761B0DA07C7AFF39097AE400B8999F052AE0A8CF6038EB3DB7F33
C9BAB88C180322714B666A2F5FCBA48BFB38EFFF20985D32343A81099DA63D30
2CBC3DC51217D4A4CC87B5398776E612686CCD91C077DA5905E8B396E749AD4A
357A9FAB35DCFB3E4BEAFA1585B4ABAAA808B7C5315AF784DA0937C74083F42C
FFB4D070311E8FA6595500DCA48E4802C8E4DA4C7DDF1590775AC2166849D5C0
346A43F8D80B4839668C824F6336D430519C2A613FC95D777C6F2508D429C625
8577FE6067582BD32430A52F8A9957642C677B94D8D5F61228A754FC694EE1CC
DB9201C3AE0FBC304E6157804785C5361EC052773C282975597CFBF6D1652BCC
E43458A67354D479220D828688A6A03E80DEE3F0D3A776F8BF6F046670BF3272
A4D03D6A518F3FED0B0E0857A05A69ACDE989B3FD5A3840CE2CE6486CB6BC760
4D8438A0659071C8A5035CA40C63F7E5C48AEA1FB37AA154BF47FB70798FD29F
50BEC1BD115776BF0430FD9E381AFF1238CCBB7E48A1B1BB474DFA01B0F4CFA3
A15609465EF425A6A412DBD0725908B76E47EE44ECE830955D10D3EEC871AFD5
7FD3DF1D9E409FE5530340F8347DB627FAF051FE7E452F3A888CDF0C93B874F3
F22F169A9AD2A517E036175E6D4F5DE3BFFCCAF634AE7A1DA162EAB5D1BCCDE7
4BFC2C993AEAB20EA224ABA4D376DF7C94218A51887F3881C8F1E9A673CA957C
08962A3BB0599D512E8120C9832B68823192E78065FD67C00111FCBCD1B1310C
75AC850F341F510ACA9F7EE84A30ACEB4C36B5E59E3AA4C8B47CA7BAA05B3F8D
B5ABDAB00E5722E2A8ED2E74001D2FF527944E7283D8869CC6930E602A64A1FA
91CC0354EDC51768351853990FD8153628B292E4B5B3B7D889C29A9C92393330
6B66C43E2EE403E4EA6C788A6D156C470460104C978F4A7DB5F97644E7D2AAAA
47BFC5A88A53C4784C85AD055A30E8B6F1A3C9DA8C4CAF98A5AED4DFD9B89820
B2E61735E237BF1042155BE10F056538DA09C189665735038CC228D0E698F31F
12DB0007FE6521EFADF8B1A322119C487AB4A715E0EF128E085E9F64DB789053
3FD8C727765354CCF9FEEB521723DB349612E6C35BCBE54593D6130DF667C8CC
A89FED056BE933781F5FB7061E41E35F1C0AB793CA068C676090F93D6A7C9394
7F0EB14680A3B9650D6C2163B73A83DD53F4D15F219219825BEA068392E9EC13
AC072328E1B32287D1724301D3B14553CB0D9C6CAE3D2D13B6009EAE101A774C
B61844FEB21466DEA111589CF8DCDC48E4F63B4D8BCEEAFEDC4E0DA7BDECA4F7
3DB4D84D7FF9FF20D50D96B41727A72FF76E7DE651DE14A8FEE68EDC00A8415D
70BD5463DC64D0B5DA53249395935EDDA7967B2433B6BD77628D7DC92221438E
1C15460ACAF7A943A90C34D2B74537CA1B5456842983851FC92621C2124A9CC2
E373ED1F6F3EAEBD1C8C533E943977A64CEC09D678C2C287675D73154A460057
914C456336CEDC50294747AC9860D99A71E821D8F966478C97F5D32847C31C1C
86B8FD8EF3FC186A8EA4C9BE51D592FCDED36569621C746CFEAF186B9198AC67
4D0A76D7A11670C28C42B4F0D4BDE28886E9CC715784C7BF7F0AF6DB24367BEC
8E7C6E53006801C01DB6540EE667071CA1862051F27E58924D1BBB4D7213FED3
D8F19FB7B423041482B0B05323A71396BA0A0F314018423977C9AD585854C18C
8769792D5602695367F970C99634BE71947B7F69127488F604E972B742BDA1BF
A3919D1AF60386478AE1B70ED89D4C85E01BB799A33BF68EEA18E6E2C451C626
2AF180A3D7E8EA917D15C635FF2D186730EE8EABBB95F16A196AE7CD6EA69488
611B4C5600BF38AE514B57CBEE38464997A04AC9CD59D4389E5A84930FEA2A1D
89133341DF01F1B8DF542AB4A9C67F4235B6A9EDA108B81C86751B9A51B1E417
8D1BFA4A19900F255FBA5C3565C224048659070ABD408211EC4306E522F00CE3
3D0B1C4496607F33B53F72835DE2302E8F26BAFA9C0BAFF236DB27BFEF207C1A
809558C5ED205EA799C3BAEE94F103318B37BD96C92F3EBC764F08E001995B42
4E274A9E80D9DFF8078E771D7BC60FEA8683E7E4461F10B8C0035BB079C538EE
56D6388010E9811B2898D889A581451395C7C58186048383A4AEE0D8E354195A
2563759DFE0183C8D67B449516ECC1166D06C17FCC1069527F86804DA275D8C6
F885EA2316B074577EF9C645314BAC0C5D26C1076AA31C8E89466CD1665DD42F
A9522F630CA899A5D78A360E0959622414C56C541F89DAE02563F58C45BF3342
24054344E3518B241CFF200230A393243751601C71E2428CAFD2514B320E0E07
35F2C1DFF4FC637A1C6B75840B1007D80203F5561A784FA50039F27C4A24359D
F2BFBBB57643B5BAB4968AD61604146C1727A525F170429E4E782A49D19F6B0B
68FB5A8E9B4C62FE9472309D8D8CDDE65F5D7D2174EAF373440459E22045F555
CFD36864F3D267BB9955363250F71F3C51FA1AAC078799AEE0EE143A1D054ED3
528C363419A479843C9138C3B44A67986C994880FE8DB1E4F9011A31625B095E
A8C295B1791A63D99BFDD0F5F1E8DD468DA18F2157D278FCD3677B4963D40058
BBBEDE3825D87A096BBF595BA6F893DCE4B05DE49C03FB70AAEE659B8A4CE41B
89961BBBFFE866D5935F9E83CE1430E23FB673A69E5A187369C0ACE19FB86D96
E2AD3014FAF7A201FA70803FE8198A88739F487A7D1F28CE391BB33D39C638B7
44BE562C958DCA8384F8840B6FD878D4698818B0C739AB3A61FB3C873145FAD4
16AD15FE50BE2BAA3DDAB450D9BD9E405AFFE33AA2AB8DECE43778A0DEB9119B
B0F669993849FAE22600A436D8DF015D0C47E2E3125CC2F22EB581D254165ADC
4C980F349927924B24C111209701244390C199ABA21AABCAC412960C8DCA687F
B2321C2CF13BFC9C90FF5C9EF7B504550A98C06A18D3DC68E1353BD179063B7A
789EB1E6F3A07B777B22BE5EA7B6D8F1664DBB8C7F280053479A3A8234D93B30
3EDBBE9C97735AB209B482F40362CEC29A918CCB798C30DA069C1E3F30A7492F
5A13400556D1D07217CE900C16506F570143705EAC7671FED1E50936B0CE6E36
4B62411E6DF77D4A4DD50CA09F0C41A99E5E09087A899EAB38D8F7DC98026FA9
225AFDEB3881D61C63C96F88FDB8F030E5A0F5DC55FA8945D7D12FBB9D0AFED8
0E6DD428327A61EA31DE7401D40D615568E38415587F11D077DB6CA8AA12BAB4
89A8B52A5CFD4B3F9941454E31167E0B4F95148D2AE0F8D1F5A18E58EF34E90A
3CE6DC3B46A17F3A954072436EDF6062C288B2F31A5A236CA3129121BFDD9987
BAE111AE0EE3530145D80BA781034AC9924EBE25091471A2CC5F90ECD9C24F9B
0E0D9C9070B9A95BA835F6633C6809CF4FCAA9BA6368839E28BDBBAB087B8002
1E6DFB7404C68FAEADEC7A3585E22450051F02D9FF526022133C806A56FCF3F6
97731220C5BC72D97383520A8D659DFB9AD5AADAB981FCB0EAE02F6AD5FD332E
8EB3F2F17E5A96D70F2EEE133A5BC035C5204D8D4735D506ABD7BEF0DEE5075B
8D1D613E871F71A1BF8BD447CC253F45195A7FD56D6E5785EC0E9A300D49EF74
3B86BFF7586288FC91F7D483368973B4F97A2B3005FBFA4CC93D06501D8CBA5A
41F0D612AFF28A7F5886A7700176F2FBAAE12FDF1DDBEC895B4230D2BD7CC43D
DDFD9F8A018F7632C6FF74B7425C2118FEBD4F93648EF06F0A8A2CA617FC56A7
1D20C2A1BE548FDAE49D71676C7741DB3BD2776D6237CF70C5CD217B2D5E185A
0408DB2442E31F4D770CB25BEC3D8C88D35CBFCCB0492D58B6949297EDCEF91B
D00ACCB2883C238464CEEC2ACEA8517F2349F889235D050AAD47488095F79F40
1E4FFA74C4A2EE4F040B2B0943422DA4D8FE57917AF0165500B77047612DCC32
821EBB37E06F58E668E99B0DB70E17B21E5FB05F8ED68EB639AB010D8A85F144
46D687A95F6660B0E1A57D35D9F658E7E70336D597458E9587769875E0C9BE67
F94CF23CA63281544E52A85EE47AEC1D56E472BA9B2BCD2D4DFDFBA82485402F
024D0192DB9B1E6B31513B51D777E62DB69D1624035EA603A41D0330060D101A
B742C2B01B1645E7F68F4D7F15594DF749D91C8C9D165823E680EAE06368BD96
63B4F56BC9585EF8FF621A776470E259A74F4E5D1F69A9FAE2015B064B84A9AD
801AA973F29333AA84FE814413F249CB16EAB8E169A5F13D750299A42F2A1C95
760268931E4894F9EBD7BF48C9947156D30FD6463A66C1FAC47632230FEEF76A
31927D7EC8CCC9455B3B10D456CD9CD1212C9D954550F074999D730E0218BEB8
FF884387FD6139DF4475F0E6D1ADF2DC457C0DF8B507944D6C299ADE35C16278
C316044DA9D28C9FFA73040204552831B5FF9D98DA3A6543E1ECE37D98E0E27B
7C5C65E16307E3E91527B7C09A39E3259212C11506BF9B6A325692AEFCA3FCED
7E3FA90038A8E5269C4F92B936C43734FBEC9AA9D5C1C4009EAFBFD5B8F05B95
999C4006297E853D7D50FB8E721AC7AC6AA16403256FCE0E4833A04A07F25DDB
4B05689A96F97D87DED60BE5BC7A2AFAE540BF6A958AA752BB7EB2E5B613CED0
E4F01A276C94347B16994604B023394E38AED620D051D65F02D12BF6D8CFA549
2E016B5FEADE1A79B7A59B5CEE7963394AA040054FF276EE79B28498186059FA
A4CAAA2B57F10269EDDDEB3734ECA17435CC7D1FEDFB90527424FE0377B380C9
1E4221A7AFF21884374836F95B710C906166D21B9EEB1BCB96E99A5EFF3F7E7D
EDC9005892CF0F56D73388241522D168FCC5B7D77E57C78C601A18AFF760F5C5
6EAB3E002B9C87DD917AC7317E80A34C5FD9CAD3DC403E755FE896AA751B3427
A6E057AA75755CC48C0CAB7B8BF427263564D305AE4AA5B339C187F5B69EDD55
D0816E1564BC2AABCAF87E5CF6BD7F8200633086E24E8DFD54CF2EF70184838C
69BFDD3041DDC26D95402EA2DCDFAF0A3AA2FF2D83D71E32E909F9CAC048BC31
5FB1ABAEF7CA4DBA4AAE259453AE4890E0A0661025C0FC110CBFA16E0CAC4D5D
0D353EFFBEB24E8AD004595C2D18D35F419CEBD3C7EF767A008FEEA0A577BD7D
71D80ED580C43CB652B49C310E28C89786B83D5D386790D0601F7225F751F9B8
EC7727C7F125985291D45758670C591181CCB20DD5BB1B8DCFD74D4CED86B6C8
6A0388803AC62E30DD7AA019C49881304B941755DB3395A60865244B34C5512E
A9F26128EC676D022E280DC1EDEC7AFA2F22AD14E01909A088BFCCEFDC74ACDD
0A59B8FBE2097D649E8639A72DA22CEE931EE0CCC2F643250177392F60E826BC
C67F10CB37941C8341B469A762227505D378C7D956D36EB75FD52D81EEB6FC88
FBF7F9E89FC51F7B5810D04684CC68BF97BC7B0A767828A1C95B0FE40DE4584C
F5F3263AE466DAE1DDDA98F159E0DD491BEA57777AA9B9B552CBCE1A4C0B3CD7
FB14F3CE30DD3ED0012C52D61ED2F68C6725B825DDCBE887E3A9D23645B4EC95
6D9485A1797B24FB3CEB0EFAF58D7A5EE4E1A522876B2F44F3344C6FE72C830F
1546A90EBB5AEC5E8CC6D33B79C8FED825F8A191DCA8D0C0663D4C7D9BEFC84B
506D9123AF483153E4993565CDC476E2D9A1D582A1975631CA0CD61D64CD7396
FF0FB81CE88B204E11DD7B1CF34B125C273DA04CE664503E5839C3C75C24935D
E48B9520A120AA2C5005BBF7F0C3547DE2E570BAA5C293BA5F1C4A34A87DA26D
0CA722664C7AF2319385393D812A00D8916E0FD3384E11E848DF44C5BC9C584F
8CC9EB0E2266C4820094319F5F0449CE934F676A2763D5664FCBABE9C56CA102
DB4E8E797618786BF2BBD03E4DCF8DF710DBD619A1B36438549BFED5F5FADAB2
6E61B1616ADC4A50182FF3878B0BC074C124775404A9D637174260A2DF58052D
6DDF621E6D8917ADB118756D3CDFD631B8A077C7196B20B8C81E463AF590C230
7A9387A609A49FB528BB4F7EFC697ACD52E9E5D6AA1C6F813D6855E66C6C7689
8B8FB45B1C9120C9D856159DC8841F891E1A749084C0602F8F79BF5AC99B8634
5081F9FF66A66A7FCCE9FBF775085EED88EAE8608354A2E54BF4988C70D6794A
0A9EB171133AD8E5BEA82AA2F9684B9926E389CE5232994992B827EE020F7244
570063328B82F2B8E96D9FFF09511A931DE7A8633584026333BA65279E4FE95C
D51ABE1FFC9788AB2ACC42545D57D852E7275B30E5CE211ED6469DCFB38A4DF1
69F003D84DD8AF8BE279B576FB1C0E4CD83F0B818969B5DCF743B9D6A69C201B
A183608EA4A812D14EDF76076A41D32DD76C94DFE0E400838F71878A9ABA5F70
487447935AB047648203CAFD9813E6F8C33093E6E93FF621C7A740001EFF4FF5
0EE7979470BB6EAEC60796ACA47BD82310A5B38E947B9D02BE9C2283BE558093
E17AC282198DFA32C905AA15BD4C3EDA9C473174CC8EF2B0DBB2B4E4E7EFF2F6
A503C5365A2CF76F79026274B8C24802E29FEC7E5575C236BF302E0393A6A59D
E63393DA8114EF419E8A7CC1D95A51CBF7AF1BAD1026B0D43D192EC0682BA0EE
2ABC64285A29E3B897AD60E93446EF05224831FDD2590B0CA58A7FE9DFE73992
139E8E7127703FCF5311083B89C8FF440146BB1207E1D34CD9BEFC629DE50915
18713C86805E314AB7E2B083525FFCB6EF371CE157431443C4999EBD2C21F5A5
DED70C59E0C44E1034665BE8CE3B35FD153D593D8DD2BB14DEEFCDFB7BFE76AC
4A4E6B60361593ED9FE9FCAD310B01668A1223E21AF12BC639D1087B5C707D5D
591FEEF4EA668D769614B4A056D5FC1E9277F83673F3DDF3D5B10BBCC6E339F3
C5E6995C5ED6B3EA028ADCF5964D0D8F2EA2AC04B2D7199F9A22B068D6046602
74E3CA36BD9567280F34B6D8FF3DA6174634ECD223173E0026DEE4ED90AF9720
0A8FDCF1EAF14149A671EA297AA9B94DF654E808309FDC31004A9B21D2E9962A
F867D36141B23F24BF077422DDB3FEDCA0CBC1966319349E226FC5584B9FC598
444C0BD353A2FDE9A8B15DFAF386A4EB25516ACEA9E3A2C532D3FDC49D2BB519
1DE76204891AEF2AF7449E612CEB4E8B01F0B3257C6B75A9A1EA49100DE36C26
08C6AD68E9B1DE297057FF8B18ECB99B334509D7C6DCEA1D2F1E2151893D2A81
4AE916F8E3CAEC712F07DF6D3907A3AFA8593151D2F48698585EF276D4C13FC3
C263DAAB1C6AE9ED386F1D7EB8DB70BF5CFC1E4FBE560A4C1711F32561509E1A
1E3DF8340A28D9616D4EF70C79A7038E473F43F8DE5C036E3AFD078AE312BBBE
FADAF80655E4AA41587128D7090BF490E997709852B315E537153EFB96442D13
4526D155BA9486F485F06760F312DEC324B31B308C16DD30CF19E94D61E3ECEF
6E44429EB1B51D5D5521F6926787FA1BF650763ADC8C816C58B25FA7CE303664
E2E5E4481CA1D4ECF953B66ECD78C7A3FDDCF944669BC0560F792A811C071EA4
631634AF99E0FC16E5CB78628FAC3FB07511DD6ED312BC8008462D7E9EBC0DB2
A25D4F18DFF9616CD305EB06C3970C69B6BFE638EFF5A0189D84682BA8CF66B7
A71B6F80F804ED40B0B62EFA7B7A9FDB181D64BFFA8D7082086C1814C2421A6B
FB8B8FA077FFA4B05C6DBC243F6D8E0239BC3C5A5CEBBBB4B3D53E7657ACE673
1937D7B95C6DBC2E209D408A87C1061FF76BB177F5EF5C6839A0ADCE78E10FA5
840A1AC0E7C8CB16E975794370F55CC4EA2F7BE2DA6ABD40A934F196EB175259
2969DC130407EB3A8E2065D29FA130C09CBE6272D544AE73233FF3AFA4A083F0
0A740123B8C605FE5C43404EC74926AB87BB8B5345C49D6FCB0B9A6DEC42A76A
F93C2E855BCB1EB59E3AFC9CE255465575B30CFF17683185703CDF0448E6398B
9639FD58007B2B5EFC1ADA4C9CD3D4A7F130A07650344DAF450F31F08AF846CF
177CD5E75E638F60FE1C47BBDD5AB912D9D0B78BF68D69B1EB5F425772D9EE41
586CD8A649F993F7625A92D1DD87D34487904AF4695C3FA54897977D46896DFD
1621CC3DA224004827ABB835EB598C9B37C21EF4C8DDD54C8B94AC5121FE5A7E
B1B247A768CB55DB8A452674903297190311E7BE8E27A91688355628A76D2071
7382456F24DA3ECDAD88BEF8B3F71023D401AE5A3738887E7C67BBA5AD942819
02A4EE78E2B36126C803C73B073ED92EEC7AEBE5B0313614B8099BFED90A604A
30EF102E36FB8B9991C795D03BD2654B861F661B41F9A5B3EAAED7D333EDD859
16615702F45EEE16D8DA7F4CF40413FB2531E1D869FE94CEB922D44D99E87EE5
1A4F522F0B07178E21294AD4CA47E3F0BC6747625E216F8AF6A5C675D3C0B1CC
FBC6257A6803FA29A2DA39E714D7487C9E0591879D2EBBF3149159AE54830DF9
8E148E2984011B279D3A3193B9105E44752399F99D1DEC54E41EF0537A319354
28263BD89C2E84C514E5F8C7F08E7CFD16E5DC5D524233A1576EDD7ED3CC53B6
578B2EEF98C426ADA8CB59EDEC843C72EC608138638015576A5747B713F1C049
732EF76B04B1984C48D0B3A8CFCA804EC2EE56D74061C601B794A6A2C15C6D93
DE927B4928665DDB047825F6727BA78B62519719A3C68B98841CC5DDB7ED180C
8AFD6BD5E5B5F64401B19D7F46ED4B679270119DB1F6A53BBE51394CDF008A58
C27234726A60948BAE68EF7924494A3E7968CC8B26EF86980CFD079FDCF4D9BE
E5DA87B88AAE8C3169475F6B02BA457761D55A689B7CA85864714DCC2C63D414
EA18B87E8AFA4E27EF74D788A69A3F42C8D84263652C531B53EC0FBA45DDAFD4
A732DD6BEB7ACFBB3B5869907C283F6026D6865DA0E6B352A0B859AAEB8F6E4F
F92525F29C9DC747572840FD7B03A047385E70E9E6C9A7CEA474FA91F1647239
05C8A66BB88AD408DD062E4ADE2B79F8253044A8D1F31B8E86D61A549F9516CE
670123842859E78A5814068E0AC3D9D4F49789EA8E914AB621D54CBBF1B1937F
3C1A3B206CE530301AE9387E4D903AD6DF9D70324989B62C01AB70EE72A26695
F08FA9D07669D41EA1D4EC44CA9AE62D66DC7EA00229DD5B90EF8077DFBEF261
7932BEDE676A74B3FF300245F165C73D5766C333575E4156F8FB7066E73F7C56
871C13880D962A76BD3615C58FFF4264A2C08CA119C938AD17804D63F672B369
2FF01775E0BCE6F2D61C4105B9FE6DD6A907894A0CB3615F067A553CF54FFAAC
674B95C0C2490644338916CAF6068F5C166ADE54C349232FB74A0AD7D4F93E4F
610C883C6DD4B9168A847B80DDC95BDFFF8F3E163FC9F1D8143FDEED5A07DC81
A7E41AABDC61F6EFBFB1DCE551798A6327152D69AA89CE498670F7EBC7A528E2
15DF29081E715F009C48393E891494F2614375F294E669CFDFA9C5EE3E7B2506
E1704F18FF4E231BA79564C86A6EB10890E70859678286969BEB90C304077614
C90CC7929225B15AFFA8800E6086044B67372AEBC846EEE394D91E2AD206F359
FDAD5FBDE36CA58681B42386F592E8E7C3C3BC394D93546A29395A5B44A7D826
D6A3B37F314E56DAC64CED6D0E6EF70CFF9FC4716EFBD51FBDAFE1BD4291E827
70FAD98D4D438FFAD1F2DE7ACBF61C2ABF2DBB0FDE9646FB43EC9D93B724F69A
F66066A3BB968905EE0A29C5EA97039204CA7C438CDF8944DD5A06C2183BB653
F2F687A145EA381C5C6CEE01A0F96385FE65C12D230ADA862C35235F3F757C42
ADF4BA07F565D0614943AE9DC9743B9AD2604A22FC0874C59750794A162BD6FA
E91BA7D9719C5B4D0B978D5261DBEC70BCA9AD8C63BD3C3214ED027808BC40D0
D0884C7DA938F57F3F359C40D13FE9501EDE03CFB0047835A2000F57E4A83F06
C9FDDFC940E0AE2BAE3CF868CC7155D9658E0C2DEF08A6B185F2EEA4579B0313
6B9F8A0A9E986167B65610F2973613F25B7F46317FA25BEA88B81475B1109434
4696A911D0A5879D956C6E08C622B25A832203A4A46307FD46C43998E65AB94F
C0BE974B3CA5F9BE51E8EC3611A0FAC8D9E271759B8EE5F70DEC9FA63994A797
32BE6050710B324D8B34BC9E8111C48E7D1E17F4D4276E8E84B94506A0AA0966
9944F0B335EF0CDC5D8CFAA975D9D49EE0AFD91FA26F79E62249F555C2ED7A6B
6E724904DF3E2685428561AF01C9E075852E93E3C31B03D18E60FF9C3D77E408
BE34848FEA0015CCBC8AA65D1C392F3DAF4AEE671A495103CCC9DF27F8D4FE68
BEDEFC3927DE8BA35B0F7422B570C4D8989693B9A6C11FB294ADCB4636B5D792
5BB57B00D5E0F0B1B80AA660A5E94118793353295131B96DCC5683B909BE311F
34323231DF4CCA729B7B7D9229A789A1359A834C7E464AE7EB92AD77B3601C68
581AEAD5260AF21385AF4CF12A24D56A4EB8350FD85B9C7AAF3E70BB3DBABC30
0247E6BB1160C4DC3110B9C18138D2C667FC21A118A7F6AE392082CC08F97F83
C4A3348141F4169B306CAAE4F7D873365BB9B817A766BE5CD8E1FF8A675283E5
75D6DBD45AACCF3DE6771589C17A48E7D337FEC7836A23144E7D6844E653CD1D
638663BB9EF17BD334D2B685B7717DAA9B28115E53AE30ED12C8A90857531D22
C3A969A65C876381D283B6087C8B97E85B4885BCEBB6299ECE3B696B9DB452F5
C968A5A594AB94E536B2B75F91E283F277E57EAD406A8E0156120C6F98A3A6D9
8DC21C9A7478E848DC2A64730D4464B93B39D1AC08DFE2A329A28E4A0C47EF02
142B81EC06319B96CCFE1078A202DBB6BEB81D73D49C85F5AE53CF67FDC5B42E
2878634C8877D04133358B5488972480594A148C6C05519F74F998764FA3BF55
8CCA672A37CCD175D6F0C99868E7F9EB5A7CB356B58F423D9EE22AF28BFAFA93
CF20F3820C871515716DC22E65429CE9AECE2EB7DF45A2AE6F52CEE4A6B0F947
FF124828616BAEF72FE4ED7A4A589A1AD2B0BA6CB2B084E19F3FAC55D626027C
7C28D635A7327436A1FB84BF8A24406B33720880BF46A0A79DCE50F9AA1038FA
13372E1650A6C12748894FD5AA23E60ED532A93519822D0C3CA45B3E54554C27
835CCBE443F6587DDEBF9586A37A7B86A9A9EE1357B967003411223CBD35A34F
26FE76987D7C980E38B5D589AF3A23A3ABBCD6C5C5989F698707B9A650B643A4
A1C8B8248C9A69B0615134EFE349875A5CA39CF92B954681CA6B7EFDC3ED91DD
BADA2390A04AFE475E02C5E45CFE1D9923D4B0E8461AD1C3232B646C0BF0DCA9
0FBCC7218978922ED35818CDC861C82D253B29DDBAC9B03F48BCE19D2A6DD031
8F368EA22B9249E1BD00C14A1D2D7633D9E79F368904702F1D6029A3B28DE5F6
9DF43E092F4A0B6905E25384B0C3A3A15E106E1F073C2AC66CD66CC132A4C9AB
E83C2F37A636E457C4214A38B1129F21FF3C5420A0CF2E98577C30E2D48B31CB
C6C93536CB08D522156A3D5DA1E536A2917FB07F1BBE45C3396D876DFB32FDA7
1D18EB02A7DDEA5ABC02B4645358262D22A71DD3BAD004B5B648BCBD7CBFD47B
0F7E96FF54DDE8238E75EB6B2F299BEEE2D5BB9B10B58B796FD83B92247B2B36
63D5A567C2020B5DEA618D15351EB00750CB7AAC6BD9D7C82FD57B4407C753C6
5C4F2823943B24520AAD1AD20D14671651366ECDA0475F32C89022707CA37196
E887431799AC694AB2DB4170E65B50C4685DE0993A81D4588898D8BD517CE238
B2B15E8967EAC12379C490CC16AD153B6F899C64DC6DDF3CE0C289FAEF0877F5
F3E19A39BD4F1C53AF1802803BAFC4BA0DE9E091EEA714600447C8E6F9944AD6
9FCEBB2A09A78D58EF7887B63F85177F60162A8D21BF3B16C0F1057BF4926118
3F2544856BE26737C228600EF0C279D33F1FD946B6A564EBA2B08E7FA74BEE27
B1067CCBBDEB16F695842A6EFB2EC9A51784830019B5B1BC386721455E15DF48
E2A4958472692C318AEA573C28DFAC93C7618C99ACE5DEDB260F1A5368BCDA5B
D72AD48E3B5D300B10C76724524A0E544248AA547040C406263E4AADB3C1A31D
72D187B1B97B5FEEBA453E542CEDD275EBDE1545914390C9D65D4D58A25295CB
4B32EEA86A6D068E7C233FE04843B6D844EC7CEB5343982C061F0B3CCCD57684
73E14E5D1ED96EBB6BFAE7D80FFB6437A18690105C37FEEA72AAA1FD63D99C2F
44466915C063150CD24419B40BC91BD5B052FB74F24E7B73CCE463328D7D655D
6955B8E3B9A923E87AD36DDD4FEFEFD1F7B25AA7B2D17497E31FBC73B48D70FE
1FFFA103D99A29AE508CB930AC27AD91C44C28F1D5EA368BD9BB64F0BAC75552
E80B42535DFE2B429FB7F22D01A1EB82A3719D1C4CC63FF38FAC6AC39EAF2316
E41EA35C331A86CA72FA9A2F56E5C0E7A26B3816E80681D6F7DCF40321A18BA9
D9272454DCF2ED9C32A131A6325D60FF241F3D9F3B0121C4DAE3B2AFF28BF5ED
4BD1E99BD502188E0029A9C72FD80238722814A7A0EF9C1D506D8CE8D27911F1
FEE1DE3989F798C08EB5D1B3F85B81E34E4EB92EC70E2801E6E00023E4DE02AA
935126E72E876B049B1A1CBF8D702865BA06726FAF200D58D53C477FE59811C0
DB2B5D65DC582C48A8579B1A766DF63FE9205C7688BC39132DF357EA5AD78C7B
08D48A49AB4515FFAEB1215221CA07DEE19F40F0CC10143EB7BF01534830E2A5
EB7932D48D3F8BF0733425FC0B5079DFBFEA8E1D359E739EB6FE04676191EEF9
8A818F94C4BBAE805F78D8381EB1DEFB4D94634C55462F941DE00884AC6FE723
855A4BC7574488E974173C9286FD289F9FD0156B52A60E759B0F9D2965AB940B
791A7DF91EDF39A2DB1B508CA4115FFA608E89387E8944DF6ABA580F76A762A6
1FCF6603549782522CABE4544D922953D08CA80B3217C83CCDA5A03567187866
2C33745ADE8BE97E41D54EBB158A0EB0CE7D6462B8EDF2E2ED2E7B6C1B403115
83C14F86BF0C1341D205C4A302BC6018EAFC18B23C9DA7F3340CAEA6A51AD34F
C8CE0EF2834E32C741EB9B83E2E3A08580D1B96BD7788C3DD28AF49968EA7876
DBF3BCF0285EE94DA3680AA790D7D5463C602F6DD0D0A3797AC95DBEF7ACC6A0
72FF36C0CD547073194768028D7F17B4818FC93B8CBCBA004112F2EE14324D24
A9CCD5F496D1D32D93DBE4BB3269B6D372FB7D241D13197B1CAA7F484CB55B2A
7E8535065FF0C37E68271DC70E5FD81E9BF29A46A11743636587F57ACED615C2
118100B715BDB28D85E553AED44A046DB18F7EEF1CB029E860C4F35BB421124B
EF09D580D992B97B3956D640F4B9437E6140D03E9B58E8D66A2573291FB2339C
18EF9F61E628C0C6282AB70D77839D356975788E74828864E448FD170E440315
376E8AB81FF57A244049873C3417A9577549C1181AE8F6D86825561ABF48ED74
29231D2BC087D94261922DC4A068F35B9EDDE24B22A1E81989586686B99299DE
F2D10B04C21B66EC30D34852FFCAA4065CBC86258BFDED00668377E685710BA1
5D8328FF71F57C143ED50FEC3876DCEBC82F0EB08C081EC7893440C17C1F0235
7460D6A1ED6AFE1780D60AECD6E7B25017910A92374B8E6EB979660666CCF6F0
2AE20E53F4B1A971F699D59E5E6DF2E856D36A9C9CC291D5135239FB2FF3B667
B83F9316782BFC9B2B1021D80767CE66370F16927135339F03DBDDB54FC6ECCF
F093FCDF58C15A7652F530093D3A7995452FFE695D30C4B4FD20B69FAFDE72B8
AE1FB0423DD2B41CC659D86F6336314E49264EB984F84745F9404B0A68DF26A2
3DE2F256EB21595E79CB1C1919BCE596EC3E34BB34FAD174610B83227C4273C5
2A8282182F7A34EE467C8B08EFB151836E4CA18573192FF19543A6C265751566
85C3FDC27532C9A1656D83940D572232C4142FD33F56C24611F69F422CC9CB5C
856A00559FDE37BB4E3366D8AED3506ADE0CD8E90F7E6B7F0441F4A673C75B51
89F287383BBBC6D4B54A2E859D4F1F83C73C4EBB8D8E247ABA2A9FCC3345DE4E
09623003005A55E0EC96BE4D58C6FAC3360976DCA81B0286E2ACBE51C24B49CD
D92D8A56C61C3F0FA1745CE06B8BC3B0EF5F143E8BE148A794140A9DC334A889
CA76CAA1476338B08A6A002B359F8FBB5AB15F35FDADE04A8B7933A63B46E0E5
078B531BEB9361C51C86FEBB15424BA2B01C0B6E83419055A187BE05C1427292
144DCE2667FD0478A99B9B268DAC08B6D1815B14981BD2E09A4812B3EC564B5B
A015C61A27F0529AE03CD039834503EE25D6FAA7BA2D55A961CB0131B85B27B7
494CAC0A6339546551F5E6BEC1C57446C2BE415890DADBAE96515C2ACEADC35A
EE244E9EC4321E9608936F43F708DB2A8072898C89811EC12459CD6DD426EA0C
7169FBC72AAA89C9241A2E8567AE2F4CD59C102B04BCE453CEB5EB41D1EA9F1F
5C989871CCE60042E36890D15016EE69AF048D114FDA8EB04F30BA1CA36EA49E
D1EDC9286D53F93735375E22357BB1A8CC8D2229A01DD32206C70E70972D7ABA
19B0D9FD411DF1863B98B1512DB215AFF41C6481C2F2EAE5D1F679B0DEBD9FD5
2EDBC1920CB801155EC3B42534CA1FDDF1D3A5BEBDA2D32F39AE1C5DC7F2330C
C6C542F3CA1E66817EFD0CEF1EC71E7184E40CA4B33A26CA98901392C6FB4BA1
B7D7A781654389481011DA2E7346E79525B621AC8E19866C9AC820F5DE0739DC
09367C7A598294C3270812A33973E6B68FC45FB73C3966DB4A905E6957F0EBDA
20C1B3AA9FF76CDD44EADA2AE71A0FD2606B7FD189B002F03F5CDC3DB65636A5
823A756658320B592C7B4CF75775391DBD4E22CFD04E4A3D73E913E712EDCA20
C6E3133261B48E8DFC0326AC7ADF9F40E6901A9DD631B0B1613D6533D5A6862D
7145148991F1CAA55205D20FD6E222845597811A91D88015DF87EA1815048ECD
BD7BBE337FC410E29E5521A55103AEC9B141B3FF9A10A3F549FCF76B69BE3AB6
BD6EFD36EA0702A22FCC0DDFE771F2A6B5D9F1AD1380B317027BF07609E9689A
3A5E79A0C723E1567934F8F10FF1854F5CE3EB154AF6BB3238E7EFF6E55CCED1
373D0CEC1415652DDD30AB0FE8E5327C117120EB0372300E4E7A9E892034835C
D5265A428E23D025EB3A307FD587FAAD5B85FB876118ABE3ECEEA7B2EF0C4336
48646F11A4D711BDA5B5445138013DE550FD2FF942A3BD8175EB0FD7E97B9D05
73E0EF47758C294C1E98977C539641D26A0E9F57603AD3EAADCB92C02AE8695B
AEFBE1C841E9D475E0260F8C6398FD1F0762D0517DA97E6E486D758E76351214
F472CB4F3E1D8B8599761F14EF610E0A5D4AB0376A752108F2945C30EE6BF15D
78E6D777A6E80FA7D3451B9406EA3FEA4734409D0E999E8CEB01F9CCEFDEB8E9
46B8E52DFDE09DAACD7755859F8E78BB9B27F1C5560C5290515D56B0ACD7E5EA
D8D5F5640B8B220EDC31CE830576936C7C66129C40D3F923C2BF548C86B4F4DF
C1959110764AA3E7CF9EE7CC74FA9B6AC11920D57DCF7C56008112694498B5AE
1F699547D469359D5B8D632C936173941BE6A9DE6228339974BBCC33DE521784
380340D42AE0BE88835E4492C8323D3987D86A40E346A3ED52613D6135E4C3E1
06FB977ED05E4B56F279378FBDE6A6F41517356A9AAADDC5EB902A288B565BFE
447E610DB1F1F3E0FD00F4EAB5FA7580D00BCFD0814D375050DF31EB3B87F641
D6F78560A86233ACA0FAA46DFC0E8A0019D8BD6E6D90395FF671267ACED1EA72
9FBBF3D971EF1B18BCB790235491BFEE28A3EDF7D17DF37E5F3D9321149C4ED2
A5B14F72360895E86357BC438212F49264AA270EFC903B43DEF3CA6B19B051C2
4354156D25EB6C48179D1251AA0D4D87C914BD013B32907DD379B5BACB2EDA72
3F395215DCD7BC8A1F417F4C75AE4850C6FDCBE8B8188614502298452BA97023
3BF8664073B1A139AAB419BD9E54C92A22EF69DB781DF7D53C1B615CDE9D7E93
ADB9F8DAED8CD3F3136D2AB191F63F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-ReguItal
%!PS-AdobeFont-1.0: NimbusSanL-ReguItal 1.05a
%%Title: NimbusSanL-ReguItal
%%CreationDate: Thu Mar 20 10:08:40 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-ReguItal
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-ReguItal known{/NimbusSanL-ReguItal findfont dup/UniqueID known{dup
/UniqueID get 5020908 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-ReguItal def
/FontBBox [-178 -284 1108 953 ]readonly def
/UniqueID 5020908 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular Italic) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -12 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CCFB357288DEF82BE
422B9914B075E7EC18835881AB22C2A47DAAA4EEC0A8DDA1CDB5292531E5261E
D8FBC087C00D12D9BDC0051529207238FFF92500581849C386F8427D44353C41
FA42972E325397AFA55CA5189B1EF4979F06711E406A219DCC46C88FC82473B8
567E47B75364FBEE1A883FC42C9CD2E1EB581D4D0C25F509BF595314EA222031
BA9606F17E3E4931D50AC6AC2B63711B0E85A6CBE6FFD9275461474D673694DA
B38706890D6422CBB2B499C0C89A7AF218BD84FE0B13D689EB5930AD0DAB5C0B
55F68356C285EDD85B3C0AFE1B9001572AEC0C3692958F7F3E16DB0C2D0647BA
C1A4EA2EAE112F680B33AD9D59962FBD63BED5766186A1C4C21F500B374218E5
7CEBA25638D9F0520E789B2F39CB0567D6BD72C076BC76095B60ED5E82F33E9E
D2448B364626AB558A979368B0F1495D8C504EA8B6E291E781F5DD708FE9B5D9
9CC26079902BF1EA845CC6ECC973DACF88D956769DBABCCC1F7C44B3B1111732
3CFE60583458E93FB796A440E43018C4CFE846F1C79CCA0416E6B446ACCD1D05
A4A682928674FB388BB109497BEE1F0AD9EB289AD984DF057E8A27F23601CC25
EBA38ED89F18CE03BE3645F75ABB0BA2D6CA8746A0F96518E865AD53CD4F428F
601B06E05B6B3F27C3A62CCE52668854DB4DDED614791C32F31A1595BC2D3E16
772C0ECFFBD06A07A1221AEAFB8CC91029C159B121F677C9AAFDE187994135D2
741BDCF6B4442E6728BD38194DC406A9F88D3A94E458275AF47E670A57FFD531
F72836EE4932C0312FAA0C1CE257FBF790B4B211B413770AE9E73A46BA6E12F4
A58A5CA4121CD6A7A7214DDA473850650623BAE8D7BC6F4034C6B648F329EADA
DB8049C762F7D3B273FE1AD47F072E6A69282866FE0F37107E9DAA8FD7EEF483
7B825A0E000E57B711220A699F38EEE6BD832C6ADD8CABCF7A9A5EDBA83116C9
D9139619E407AF339C1A479065EA6FD7A58A466C6230CB5A8F8583955E0AB271
536098804287DA09D1CBECBC283B2810D28A1EDBFB2158886231E454146E77EE
C99A662AA0C3B597123548EA9580E54EF1AF866B3D2246EB50B888ADD050680A
40B0DED04F57B4CE47288EAC8F6969FA29AA6B28CE5FDECA6909DE6337F5ACA0
2E982F9ED1C700AE0D0BB9B61249DDD8BFF65B53B51269DFB0158C60C1489AC2
AC1DCFBED577038DE80F87CE86751494320449007EA922B5924F53BA2402843D
BA09637FBDD85AAFC17A8E9B0CE1A9508F0F8E5884AAF083013AC5189718CA0E
705F28AE75ED2CC22B05B89ABA446304EEAAC280A94CF9C9280C98EABA19973B
B596EEB41C7FAAB530481B448A8CF6D526BDEE9E8866C5568DD10AB87853A39C
3B61627ECB39D5BA7F8E095B9F852E5F33B0545269CC9F0661D553F814511378
EBB3037BB0667F0382E4278A7F0FA073A6AB3EEB512FA661DACF8693BEF31C59
4F7D0F9390F99FFDF77D85D430A5383B428FC35C43EC628F59BBB3BDE1E3266A
AACF6605C71D7F13530C884868B786877240EDB990146E42722A3E390BA43CFD
42CB619C13E780CFCEEA3467F386ED5E9AE14D14267FC316FE58D449CFF30363
295A69B1C84D0EDF3B3387C60527D4DD22759C6E9DB82BAF5F542DBC264C611E
8965F809E39FA698B4DC41EFB25923BF1C45FEB275752E8A78854AE85A2C9E06
150BF341AD571329C7FE54620EF33C54AA3DBEF801909A0E20BA00ECE65C8B7E
BADD835C6B2888996039416DB8F8972BBC28E3B140CA2177374C15A410AC5AC3
5FCB375E20BD3D283BE2AF95BFB4E4A0DEB874CDB1570739B1A1A213262E4D4A
BE602B7F9EDC42C7811B019225AC2818085EE62A83D97B51AE36EE7F3B6F4EBF
ABE477D9887A58CBD8C09328ECF83AED31CDE59EA5BEEB329C7CF451B078B5DA
15C628EEA482A28A5F2C66DFC736C8122E040AA8C686A4465F423595DF70A3F4
2D9F8C271574BA95B31985C9B36A75CC7D6E82323759BE4AD684645EE7B9B4F8
ED1E7403FBE594AE8A28342EF2573168158585CB5CFD7C7371CBD7F84D861981
9DC4314DB613D600EFBFB697040BEA7DEA517A4E1BA2F39AF2EE0C9C4420B53F
1FA7B0D02910D8D1B1204A434A10733A78C688867851E4F01551966A7BC22E83
0AACC06130F869DD1843C3A3F84AA4D1B94D461D4555FF82F9A1184ECCA49857
A84825112B939C106FFCBC8A0699E72B2752BB63C5B44F4AFB048C0BE02B5194
93C9EF9E8EB98188A3C4DC1BDF5E94E884B134C1111987EAF725F2FAE6756223
F2FF5B5218A141141DF8F5EAB72C6A92B829D5CABE48FCD921549023CAAE77A6
47138A1D777E139FF53D112DFDD2A29A1FA27744A3334B0849F10A4DC66D3263
FB9E97AEFFFE3D143A32D0A3DEBA1142B755E8092A186968DEC0AFF74781F045
E3D3F04C1EB47B3CAFA5F9B349A66D8D038B0CA1039E5C5218928C48545178CC
A9F557809FBC392175CAE6FF2C681EB63737CFC5F9824A498E7782CD716E472C
288EDF4ABC389B3953E69D68A6FB87968FFFADBC116DBB45024647505B2A0E4D
D6E501AC6C133194868F1656B1A8277DCD54A4C28F86A22177CAD4713DFE7706
1718C6A0EA73E1BBB3517FE06E6D4800A613E193D58E0DD58A8335A7C8A86DC2
F51B7C04A65503A9DC027977F40FD1EE66FE8C8051449403DD70C7D7D7523B62
1B2E1A6F9057D3C092DF2C82A6DE62FB47D3FBDB508EF57FE5817C8975D1588D
E013CEAD9F84BF88ACD77440B5FECF198A914968AFACD1AC37D5AE379F707D21
A1F84BE5DC58DF824313E9DF591D3E095028107A4819178AE3614B1FF27FCF17
E9CA4A5FA1FAAC35A75E610BA3656C384F6676D46958055D4B21F8C2A7AF7D30
8DF1FC775046092D6D0C8DC12B747D978EFFF4D622A503951370A990996291EB
AA0812DA807E53E8565D3E159CBB2396298C6C8D9C50E77CD3896039AE57CB9F
09D428DFCAFB4E532C94523F775B3E57348D4058463B7C5FCC994F5B74B4C5A2
2A32C71D8B62B9055DCDFB74F0649F31202182FEBFD02397FAB42803034C6024
DAC6547DC0492AB71088E8290252154EA324AEAF405D7AE0A9F12EF6CBB759FF
3A8216DE21BF763CFD5166B895395606CD89F35B677640DAC02A1BC309EC26B6
F47F0F008D17D3DBEFA13E23B4D89E4E3E44818DC60EEABC2371AFF6C76F7847
41356E4E0F5F8715DE351FF01B0FB1F3363012D24169A05026C5351671457C30
DAE5CFF82214B90141ECE9181ACB414792A74886D4F12C13BC20DC74BE200B23
F5A892AE52DE09BA3E6BF928DFF95E1CDB4CA4B0970A6E429AAEAE701008B055
31949540F89EDE0E374A15FACF69AAC5CEA9FA2CE2B7A482DC56966B85BEE470
13DAF82AFF1B3C3707C6957C148625915421516B6798FEC374AD278BCB736402
619F29226E81B8F30D3A68CDCA9B16C9DBB51D17F8F4355046B9D7515ADD06B6
B0CA5648BF552A7E140422487AF680B02706163074504C26A86F1D32F97F3B73
21C292A6BCCA67D6ADACA005F0B5466537A6EF9398704BD712D3B0227BE97A19
5054A765C19A6D4DBBA66DEB2F7D6BAF0890DEAF20F5DDA9F336824605EAE2AB
969F13DE762192DA78DC2FF3098918E8D9A2530D488FCF622FC0B06A30CB3390
C51554F88AF2ABE3D9B7AE8CA16484008A68C0CCCFF8B6DB374975EB982DDB82
883C9898D78A7F078257F058D5AE50D7C6CCF0ED453EC56D8C02441858E60E60
B11D0E91E09FA6C430C7BDE300C80C91F21F59EAC8407717EDB21CF232ED93A7
0B1466C4B30969C02B507932F07D829096B4219F021335AC4E769B634B444014
87402CB9CE2F6365FF8A78B7038B3C7108E45165F54CCF7B670E360CD2D58729
C313F3A86240434E43B7800F5BC97F20AF368B287A4377E76C464A4BBE69381D
20CBCF9061E564953A84538EFAEA698BA36951C32DF26862C4F00697958AEC52
E880655990D10D0BE871906D3B733EC38D37A1A4A22108927B465A28BFCED308
561D20942E22FE4C7BB89A4555C805972ACCF8B42F1FD13EDEA1336340783434
43F432D4EA74542EB7F00775A032CDCA557402F61F2E4A65D704B0F4B92C3FAE
E2D56B42779E56E83D71483814EC85A22E62357BC8C3C44F943997460807CDD2
4B80DD3D2CD0DD73FB26D8C09485D09C80D55E78A2D9A8E74A861D7578C5990A
4E0624209964E6D8F6B01DDE03F12962894C43655C147F58BD70EE96E7CD1476
75F9BB57EF321ECFACD3CC59A434E6AD9C20F114B495BEDA9AFA7D1140F97E2C
2B2F3B58F40CBE7D4A3FBF0D640F0038276E2DE10C0D4BA64CCF9F76ED70F418
2C64A1752CC1D1E2451BED9BA8094509EC2A3D9A0D9AC3984096F5927EBBFE3A
9D0A7D3B469FC4312F085C8B73D674CFFB69559CF7FCD0B44D53DA1DC80645E0
27C512AA6B06440476882F6049C18729D0FCB2426D44660C96546DF6C112A772
DD8EADF3B6ABFA23840AA57843F469A1D5DAF8EA33190DE6831983737A8E2520
A1785D67D7E3A2FDE0566EDB9C6F1192138353148BC3210F99E56CFF613D2846
81667B89194BA269D8795DCD1A301D71E8616DDC28B156742CAB0FBC1C1BF4B6
46BCA02D157B662914252E01DC2D9F93FCA362EE94A50D42FF32906485CADC65
9B0D588E8ECFA2A0C5F015907805C0888A51370ADA63F6E2BE00889226A7210D
E7D56D95D08801CF296DEE0D180504803976242A1ABE7C27826A7F44F48509BE
72F44662B57C484662D0C50AD7CD9AE87AB5696F377FE8339F4DB25638A8F8D0
4D5666D57157B992F95B41B31EFBFCF16DC6D91428532E4F497E36581714475E
9EBB5268B7BC569E6F373E4FF2CFBDE9719449EA58D7660A1874CB497A47D1D2
2C7FFC588F6231A91253D8072458D93356269DA85DED6FF119FE1A513120360E
7B09F119E9B097208362930BACD46F3501E34A5E8DBF00E40421B63D8A202C03
27436F27716AA7AD4CACBEDEDF29F15198A40F30742DD9376744246D10870483
43C451B42A2145762E6A93843E0A644E019A62AD42BDD961A3B5B74A0834D64D
FD260E15C4C9EABAFFB6E565F7C2322C45D4CEE445EBBE5BAA329472C752A2A1
0440D2DA9464DCA044EAF3D932CCE7C96B78722CC7A445C8025D88A7B4A1ABAF
8C78646007EAD01E356D96C5B58492B223CD3421623AEF127DB5A0A9E6B01A66
CB2353A90BA3862ADF015F6CC8BD3D1AE729CFB6661833A3686E5514C85D5278
E37024BAAD1E654CC7B04AFB385BF033B07B0D00D7FE079D2765A6681A7B92B3
49BC107BD17C85B0DAFFFCB72B1232C2C2CEC0B945A0BEC2658D9536F04BDFCD
318B58A80FA42215D39D7FB2E71A14455C19963EC411D52ABEB5C9B29152D834
D675618057E897CA0B70CDEDE77502BFBA4754CBF4C58D0F831C9CB74B25A41D
113FB5D588FBD55BB5913BE1512C62AF5E8D5909818D9461CA3173F926D37BAB
7B5F981CEBFFBA7014CE09A78BA724E1FE7F41D65D32E7EBABD2C3E1C2953BF1
BB9A8263899358633CA71C96C0E46AD146E8ABE6A6FB30A576D4BD0D096DDA9C
2EBE67FAD7F5F9AA7310A6A71F43334CB65C96E53CB475986C7E3963A95F7BCF
663FA88EB30CE5B31B9D8501758D1AC6A8BB33491E47FD52DBBB632E43BC19A5
DB4F495CD4A49D73F0D2CB6DE86EEA8365C1AAB13B27DE93ADBDAD1BED53B00C
0E1976D7322AC0711F2AC489D46A39B62A4CD1B91A8606E3F4E7E5BC25160271
8FF92D9AC944E0D174B100A90F1448AD9387D8294CF4B347FA556F52DFF69A38
BD0070CBE1453AC629DA1294552554E4B51AEC6EFDB9C0C997115175460A0D02
615DEB52D9610A28ECC0F9E607F4656AD4BEBCBBF59FBE06D5B4D206BDF39350
14B5160DF3381211B55912EB442990CD116621FFA9ECBE3816519881CD339977
3A659E32394B7C11209F308CC8E55F5E158211B156CCDC38DE5E363692CDC5C8
CDB095843DF188247E9B3D39A476388157DC9CE531FEE7321B962EB4C553FABE
FEA17EAE2A7DAF8CF79B4B9F6C1D5A5236C10AB2AC81ABEECD658CFE1AE0A343
BF6BC0FAA310A015692F74E6FECDB149704435179F4312CEADD8FDB656496343
A9326AF8F94945455D2D1A91A0E08115BB02AAD6E4A7AE2961B3D823D7BDEB6A
BAD1DD00643F3C7BD4EC774660541890E36DD31E1B559356C6AAC730CDD9A862
0DE3CA5E51F8A8BC25D7F87E1069240E57D8DCEEC29E950ABC61BAF9B11CC725
087B3E240A4EE8A5DFE4CE330278FA29D7C858AC56BF346CA26F4B80F924C53B
2F27C2651B7BF601A9409691F5D73CA3400ACC6A2E01E043C0F64873E7EC4FFD
CD5878D0BF4DB79F403365B8430351D709B250433B42C15CA79016C57957A6E7
8409032CB6555216CB8ADB569AAFD730106092EF0E075B3BBA9792D56C2E4799
DF0B5D7BFA889D1E55B6BB221D712C94D6267E263B0EE5CEB394380C696B5A25
A3648A31890DDC9D3687976D1DF11E4F4A7EE858ECF985F4F7778BE5091889DD
54CC16F8ED807340F4E10F37EB9FA6453D479FA450D68F70294CF6FF54C3EA09
1CFAF3E92C3FE0C75D70AEEE8B06251E0726C837068A8A24BC230BF4DA5F2F05
195CD2AD5E62F4C3D35156CE917A4AA549A552FDE1608CF4EF2168101E95DF2B
3C8B7C1E6ED182B99530ADEF2E6FF3BEADF6A09AF24494F9BD96BE5D686368EF
F2642DB176EEB534BBA14F70C90EF6D3D0AA31C3041B50E0E61F652C433F36A2
14D2BFF273F1286B48AB8A7449DF6D9A6D6CA6BE77B4FDB3BAE39D91DA623246
C720F9CE47856B47AD735AD2A74325AB65DFE72D58B6C3D9DD710846F0D705B0
0D8A2B439397E8E076531BA0DB812DF8E7A457ACF7F146BFE81F39F73F45C3E7
FF39AFC74A6F8F240A93E27516DDB97EA5BF4F2ED984D031E7C5627A1625DDA4
518856B27CEBC58F3974722E6D34FBFDA59B7A2AF2D1C203B0DAB56658998C51
A2FFE9161FA145B6A2B445FAD952AC97CFEE0D914E3A5BC8F9D0065447B06808
A0BFD82C5CA7281E0D61FF211002775046909A8B46D72E74FB785DBF62620406
00ECFAF45496F2B60CA4EA3ED75438CC747FCA41F82F8DDA4C1B5921AD32019C
8818456011F7E877D3DFA37414F79B99805FD282E3230B276CDDA5EF6B205567
AA92B46D0310832ECEC82622F5CE5B2BF1072A90B1F57EC1C426ED6B34F32D5E
D0DB3F8A54D1A0A9A69BAC0C6EA2352A3987737C55877FCD4D340C8DCD333F33
02391354D1C639D2D0D56704B7AAFA29AD38D27F839ABE545A79CC466E6BD201
32662646FA02B87A9484363999B81CBD6CBABE234749620997313BB2358A3BC1
B6D809C2DD3BF3CAE999470D74ECA025BC6E08DD717BD7FF515D279817BC8280
08EB1EF4D7917AA5C938FE72EB4F0AE39733EDD23C2B9776D3083336C96E9E6E
9E3EF4EBDA3D5C8D255CCF1FA6A7F5939F680D8A0C87717F1403FED220826569
6C70EC7BA37A9251D731A94C4BC9209BCB8EC1F69C219DD69DF136090F7EFCA4
8E07AD3F57EBBAD5B649B90D249FE0881DC35B50F31E08D3199B4621681F0AED
0F2CF02EA70D390031B3E8CF9D250BE9DDCF4EA56C8D7F4727FA7933D5178FAA
3361420252F4A321F6AAFD85793046FB406F945EB4D7E260DA3085D33CFD521C
F37E8B6C7A12CBA05DD7947CDA3FB234B882AD48D91A56BC8CD9639D8C92A043
1624642E8BE8CA418D16EE5EFA4BE2E67EC4FFE5C3C3AC170A1E374C308B73EB
0B35E7BBE561696B4C83802EFC7792B6C22AC823C797E4EA6272D9F71CAE59CB
CA86B9D5F917D6359AB8A02405A30F62101BC53F2D2EB8EEE5EF1930B1B8F4E2
08CD46F0A130C1664EAC5E18591D981C7821DE02F2F903D764B85536692A41BE
9630517943C55FAC75D2C27F59658D014B764AE60D3CB893D158F5926560B245
D8F50668A8CCC02B89880AB2A8A9440EFBDC2A5C71DE0824F45EE94FB8D0E1B8
2A8CF0204EC6EED996EB0661D06B72177CA8B3D4C176EC34D9F3C45E5B5226F8
27E3371A54217C10E7F7457AC676583237AB0D3B9540ED7F92108218C082FDC8
18F3556B183B012D62BF7DB56F809378FA5A5B749B3AB5FF11FF81C6624120C7
FA1480AD4E9AA69E8FD09137607475DC08B62843B9B3266FD997A0C81B86264F
017133410437C1542EE82F20FA3B10BC0327D1F75CE16E6B2E42CF683E6504EF
C83968426018FC75BE90A26F4057DA780213DA9C1F26DA3C92A723B8432C97AA
2D8D5674157922364FE3438B3769C9E5F4BE1F0FE1B766F6921D2BCC20A0FE5F
D6B296DD40ED5F37E54E252C44E79CECD85615952C13037A9DDA92A555F053E9
7F509C3910D7B277D257652843C264C584233D567DD2712417E6BB1BE68064A2
8E54BD8FE9574CEA66448B1168A09B73291CA7B64CBA9149F37FD83F76DD068A
A3371535F6CE5B15FD35814C6EB11A82F13428ECF5A51E8B800406EEF80B61B9
CE93ABD12814EC856AE85087D0147E824A670100255F0D0D32D3799E114B9BA0
ED98F71AAB0F49DEF882CF1891380CC7B93D22F38481B400390B4B1F5D6C5A7B
B646926DA7FE97A026227F1DBA6BA115E1CB637A54F712D1A88D63C13D3A0A73
7BC46A466D9498F4A74B5019026D1DC5121449EBBA930B37B887BD4A3E10C576
678C7631962A1305DAA529213092C0970F16E74663508A35B379D57D90110503
2C04AFBB7B6BAB08935BA30F8C8FA317773A4BB038E1DF24D1B5FB9B277EE7D8
D83637D40D54D62BA0C8647860B4E9D68AB51F1C72FE6D6B91F7C35F70440A86
69A4F64CE7E632DF0D1372135C8D1037ADC114AEDD924F8EAB2A91BD9874C9C1
28DD7AD69D796190CD764711381009650A57450CCEA232066BF716AA4BA7B47E
11947428FDCB5F34F17D6545C55C37A4E650FAF705A46460A40187398F4D1ADB
8354DA5F0B090FCFC99B875EE5DA524D194E7A612491EC4159146D02EC69AE97
F9FA30E6339C150411C969850865A3984C32CBB909126BA7627D9B4FD39EED36
9D5EF4EC660AF63EB34EF4DBD7CA1C07A0320794720F23972E0054BF27A0056E
6EC013863B4051334B2BC536F0F5CECF6630440A33D8C5CA095ADCDF788FFDBE
E432938DF01A15BFC71248A5A9A373D2DE70668E49C07DB4FD0271CEE32F18B1
52DE2E75AD6F0F6164784C95B35A22CB61A46BD4B66899BE77EAEF10F9F206DE
2F7D072E6284F18BFB014E60ABD585868711DB534E15338D9EB2ADD963E71F38
C8BB2777EB22E50826AE043C965CF190A7F84D18C523BCCD895829F91AD2D09F
8768AFCB2A0FC179765018694A11DE4623608C4D8C0A0B578BA453651F958AC9
94832EFF9778F04AF404BCC32DFB84D98A4D77328BABFE4E2F886C9189AC7C0D
E96E8B2859B1BA038241202FCE8C23E6C6548C28FFFF4B255BE35E8F2062992E
3394D1922BFABEA183B97D9BB16BEFB5B7B1444187EB11F5EA222DF194CD90F5
AF363C7172BD6A7A51462AD67A51C52741240430A957CDD3BA6E1E5406DE93CD
8215784E3C51726358017455C14330F66A3A933ED5D9254ADE39D1B5A73114A9
036C5246035F9665CC5965BFE932AD3E6F614711CA456014C49D0A922FA112EA
DEC79F825726A0F797FD2F020A3D0D7EBD0CC023F83360A44A02D07EBB976D1A
8712FF8306FCEECAAC503B21B2D7C0C5A343C4F9AE457B12F363D8DB85372BC0
615C7DF512C1A9503DED8F6C9A7F732583CA2771F405114853826C8E04384D47
D5191BB1FDE4503A135787E2C47E9A0C574CA78E50154F5BA940C68DA29026CA
35DC6B6C1E79F4B4FE162CE0E2502103175D9684E157053382F57BC3F9FE8F44
AB1A0EE8603289BF15B3BC0296A645286F332211F026EED61AEAEB2F2FB059D5
978182194CE2707E2F40F6AB44128EFE030C77E4442E3D3B6F38ED90C2F29C6B
EBD535821149EB63F56B1679EAB482AAD5F427DD5CA82B671460384F5412C72B
91E935E6D000997C4943C08F079E6AA5B8C8906147EC00DA2A993B03F8EC0BA1
7187D2E9BE9C8D7EC9F888FCFA0F92D649AA8E718254863DF9E7FCE594086F04
74EAB3C761D77894C36F06163EA8277B35574D5C6B52F94FE27201998BAA1C0E
1B9E6FE5BC405AB47D8418A904755AD1CB655DCBBE5A480534F8D57732E1F345
88AD33C41EA1F39E4F8E98E8B538C595AA9A418BACAF458144BDAC6C1A9242A8
C0D10CD712806FF2A9CB6B9F827220AB7DFE198D2F037BDD11011F260BA5881F
0536A9186A248632006F54E9B493990A19BDF5065860D0ACBF9D13AC2266BDBE
23FA81142B2F68664734615E35CC37F019577896200F12AFB9E369ED710A7B88
81F795CF03E77D96BC52317C0AF1B62304D5A347FADB6472B72AF45D3EA3EB1A
4BB781E304840F65A5571DEA611803889A7BCBC95D9619984C6AC021E8523521
218E0542B70E23DFFA41550D9E575D8A1EE35D503B4E6F3D3C52A9874FD330CA
CC8AC05FA9791D797036C790D79F08691E197523F26A66A42A3BE3203AF86447
CDAA37BE9930CFFC404657430C114EBD9C66FD56A328A861F78EC9F5EFB29D29
58B236F17508EA148852C481BE5A6DE0F8809DFC1C60E62580A073A735EC79B6
E11151A4E695215F3E365DD48495D1A66A10C8CACEE96180479B9AFDB9CEE384
8E624A0E16FB978D5F13AC03701D24ED47A9DDE4930BF8B091DC16399AC7ED16
8559226A4B8C16366AD8CF6C35C0BF3A31608A57A1C4C3D28D52E9C40671D1C3
310DA5B372E0CF20F57A84AE3FD1DEF6799032FFFE4EF6CA302AD1E83385C801
1D19D18A98E9FE6316A252650986EA61D0837FE8DD64BDBBA3842D7EDA02B7C4
ACE436AED28595922B78228765FD74D9305E914A2BC170329169171363B2CC20
786B65B544181E86CF7D5B3C750BA9609C02BC464613584491FBAFA79618B09A
7994EEF220E65A2173DEA69A3D33A41B8C7BA4CB1BF0785044C3686F3A127A5F
C76C272B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC12C1051F17
7F2E8FB0269F00A8A4C9F61FC3EA50B8009493921D920566ABE35A041D01F286
5E2B3E574A9E9A78E86BB5B788713FB8001C0435A2AF29BEAF8B3559A6C72748
CA7C539201BEE06477DC22B9FACB1CBD29E5647531F694BFF0ED77A7847F7C74
1A9C3C1FFEF085A5A87B2B8DB8234F076977B28129676DFED92BF005A132A12B
0D5D3B9A4AA4A2C04E1AFDF8A6B5866B606CC19287478BFD6B8B213C19B39853
2835F26AF7F37F7F99E30BFB9F66A8A8833F7D42174025AAD93953C9F599E8AA
5B732D60633B59C2DC5C080E7881848222220A63605F00205C205B35DEFCEDB3
2E261F8BAE46654CF523D136CCE8B52E83BC623D906EC7632CB075B9D013C926
6B223C04EE5CD63D144DE465DD11AA26F59E2B12CA1CD88BD95ADF73CC036BA1
DC8D789B86226E38B0DB3AFD1891643DF69770905D11D3022EEEE058F0316E77
0CE494F5D25F4667FFDEE2AF8A30E836B33CCA7986436F2250BA687F453D4A5C
F4E61DA5C2E238FAC478170AB546E2F49FC971F94007E7CCFE301062DB793BF0
C98D73A11770D4FAD1B1B8D4D0F6BBFD2C717646CFED93889EB779D89DC56574
6F129EEAC3CDF33EC8821B502104FF31590F567D1D45E3E92FA14AE1F634F3FF
687E1FA14432BFB817DA2C19F0C868A3487600CB5DC8C1C1417C3167002ACA1C
42FD6A3D4358B8623588E7D3EE02742930F99516B2597A022D0A53242609EFE2
6FAC8DD9F8B47025E7F7382C9A9E7F700F306AF2E28A1E1E66A349D53C5A5004
547D9E93E0A89BC49059B8112CA0DE3C6E33CD720EC4BC07E03072267E8ABE97
69AB6F8A4D5C2A8B0ABF3FD27F2823662C07A80565D4311B23CEE3EA3747DB06
6241C94302FBF237C39454C67E01F68736F187FA748D79F84B7CB450A9C45FCC
932A106B5B2AC85293A25872078E4CAEA2436B0A872F31A131A36FC8FCD291FC
EC5A6398F275C8CE4CDA5E898889277F0155E365B518E36D76BA889C4BB94D6A
F4BCCF762EFA3343D9C71DCEBA2CE212711445CB7F88B44D610E558EEEDAC38C
BEE1908987F62A68AA0133ADD133473E155533410E7973C55758853247CD330A
6B61E039648CF6E58A173FC3D7E1FC670322A4E259A6A165FA1558FE561A784F
A50039F200BEDCE7F57392C3D41C5698C9C8F8333B9CF307E9154793EDAE22FB
A40092AF1492C9BAD7095BFE6125C188A53FA2D0813AB238367A14F0ED1EAC26
E444B6BDA89CA11FF988ABB796B6595823707D1A37CD0C8A8B3F7C3284ADD469
2AC17DF0F50CE04DB21BB8B276691749E2E6F9BB3074DA40AFF782CB25E02AC3
566126F3605C5D91AC7F8E69FF15FE9F998D6BDCCF481FA69BB6B02740E8E674
BBF93E87F057BC472913D788E66AD436C8C5EB667A9E200B11C78F1226D5941E
BF08A7D237E81E39B47A6F25B2EC9290B2883555ED7DC703B3EB5C0F679227B6
E811F2C38700DC5D6EEC5223F0FDBF80711A377649E17BE3301FB1AB1AE47128
7800936B812CBED8EC4E0A114FF329C5D7372EF249FA82D2745ED89D47EB2E62
91A6066F1FE1971379E043F280BC4E314A0EDBBCCEB0029773C9574297BF4E64
D19DE34E73FE10D63BED7FDE25317440E34D4258502F4F01C52AFEA66570BE7C
7BA8361C07E06C4962417A31D0EF695F8C92EB33721D2363555F9F5034CD2955
B664FE75192F33BB8359030780CCE9A99B4C2FEDD3E39F711F63E15A82F4D4AC
55BFB5357D5AEE55D7062DD9A9AF99461B1F89B3CCB0149CE5F85208AA40009D
0682CAF5DB0821AA0F1378369902C813DEFB1A46426E7E895A9862CA1C8E10A4
8D3BA9DCE374762E175D3F06009092F23B871D14D3A3FA6A803B2DEE2684523C
FDDBC23B89F2A60DB25A27CDFAEFA66D2F0B1E5CA6EC76D9F6DDAD37B32EE662
AF7460953FC0A9A530058532E346F581AA85779C962E6F13E571E159A42E429F
A897523203F60ED4A87309FF8BCAF803D7FAD72A7AF7BDBED08049B0A868E226
23CD452F23ED427E439F0BFB8E51935CDAB083DD0F237B28825580C2306494BE
4FB721E4FB04F7B5D6B669502D0EF1B69371902CE4CF8AD84A8282A03C237DA5
78C6008FF67D6ED281BE7B396928F948E31B89CEA0D44B1E9FD3E9E8CFBC339B
8622C5288E99872B907D5A35C31A9064C3E522C63FCC1C69DEA3873E2A39B27A
9B7920B10E6C7E03FEA1BCF17D34264BC6DFB07D15896EB030D2ED4C12111379
7CC3D98833B67E38262680EB4AB9A4D92F1BA39865285CFF7DCBFC096FF9F878
5CFDBAE4B752D854D86A959AB5CE42952C956BAD194A222B76E5C01FD5C08F27
B2244E1A7579BC8B321BBF4E89CEE48E539E691F9563A45FF67FE0970DA66609
24EB00426703B781A4692BF21909880CFD73B51A92E3E71ECE7A5A78D48AD4A1
03B97A4AD2883802EA9123BBFC76EAE353656AE61C931C27705BADFB258D56DD
54397BC47A4FA41BBCE36197BD8EC41D02C86D0A246F40D007715DAAC213B3E5
ECC8E4815EA573573B64BFF8B6251FFE5B2B7E39C1EE2023EA55F8870E7AB26F
14CAC642917E47027D2FFF3622B08C61085C4C58A91BBFC23E9BFB77430B8E5D
C464877BA684728D00ADFBC1468216B87B7A86AA4110030E18F7DDF321AF4A93
69AC60D04886D106B7365E7E1622968858D0D7D1F81A5758FF302C10135DDE74
E372502F535B2564F43A689D9DA1043D288DEAA0061901488C87D0064DF99B96
25EAB93115FE5106981F8761334720113FF02B2C734749091BE71BE45DA126AC
BDA9EADBAD6D7267995C72ACC0658E69A52A6E2ACCC59A84DDE5D5FF995DEB55
0BA053D6247D7A1EA4E4CF249C4D6BE413BB4D85E540A2DBD430F2E13570DEF2
DBAF6FE031D8137E49BE7E6673C826934749F4E07B8873D2E9C085BBB0276E7D
D887B4A4D21B7E63056452321CAA003E70FAC2CCEBCF8C130564BF2A1051D652
C1E371D57B511B52A4DB8F69D76C3BBB4523EFDE2D57D0AC1341F032BCBA1621
34FC3DADB6F9A8585CA35C2C450B5929783DA0ACF374733D7447045CB9712553
92E03264AE22D89E237BA953296E261956E81E96BD0CD5578D06CC5750D58B6A
269544DE0EDDA5DC3F6622C4F6AD45B79AB065ACC2F7E4D7DAB7204E50CCCD98
11AA538B321BB38E8F55902C9EC476F9B2EE69DD0CEA6C96698D5ABEF570AC6E
3F7414E4A0178644141AF62D77BD6DDFB4870AA4D119EC0513337CBA10469159
C63D6E7405783E6083A9639E040D701308F5A7B1EB1351332E27F59326A0A835
1F7F2C2BA91EB34D339F88A479552B63E63C16C7DCBC63E21CA1FC5D9DC70E8D
4FDAF007FB75CF356BCAA37A03CFAAC42EDE02854928D8B2A098E599AD6A65A6
D08D4A0456FA71C7501BA822568B532D813B0B450928695E9575D4D7859E9BE1
E33DF229F06DF8B62F78865CE0CF14EAE384D04F1469DBC6488BD47129EC3B54
E7DDC902E2CE3DCDF8C80B693FBDC3DA719845AA9C4BA8AC40C1E24DD4CABD06
4949F2D6CACC91A2805DE4D0637913EE6EF6D06F8E219B54F60156ED2F7FA8C3
9E6996FD508AE515E9733EC2663F078AECD4A3FE4EA0EEF3F387D58915979287
566CC9C12AB016CC1A385134D437548E4C54000BC2B7B3C82693DEB59FAEB3A1
4C1547C6C46C24FF3513EBCE73528778D2213CA6DC3A62BE2D64A05860D0930D
7A6B39828B171915FFF4545D5E6198DF7C495B95A559A30B7AD6A8E69ED9BF06
3C97F2FC7037C6298315176387820D6BFC7BDEBB1F514D9469502241D4200BD4
8956D9FE5CCAD91738167051920AC09B4478300654190106A0FC93815CB4580C
6C918147E883F119FA4C55ABEC6BC7453597A1F20DDDC346E1C4E776557BAB07
FE1FCCCA6BC89C2B640350DA641882E8CF028D9AAF90547532AC20085EDA0954
878BA291CB5A8ED1D7D31F7E07940EDA64442DA362642A1A99DCF3174A09E363
E92A941DAD5522A7340ACB021108546A91AA73DA236FF75BC8F82F7E750691F4
EF3553D8C2EB7B4EB54321159995FEC6BD1C3FB187DC631FB75E1EFCC1F3BEB8
4570B174F1AC34066FC85E9B1D817C9EB033E2089959A53E463FF0848F0D3340
465C49BDA2F0F4CFA3B5C4BF78895E49CC1060024CB6AD2EB6CBB557FF78E2E3
1E719F09E30A11D59E74F41B61FFDFC11B994026158682DC0961E419A481B11D
D6DBCE6D9BDE22E484411419D00B1866C057DCF5B291828655219A91A0D3A9E1
220179791410EAD51E0D560FC8AA64D15026F238AD7FBD1CBED73A4440482375
276F63498B3753E584B88FCBEB0923B520C78D33BACD0F4D7464425A14721060
2FC06FF2D22289B4B60A5055543FB599415C638471E3F0B4BC3C827369728B9A
9FAAF727F2D8577DEA5AD2601CC8528DE5DCDDBD96A7A874B7A19D09E5861D01
61A5BA285A6347033F91D4FD32A18A7687FCBD056BE7B48AFBAB36C1B321266A
CD41AB64E8B532D16948476E51BC121201EDB91325356976F0BE8AD721AA200D
C2EFD5A45D165A63CDCF3F943248AA185613CD951AE78530B529A4C9D87D8C0F
067B363ADD8D950954906ACE661BFF051D319558F8B12EC74AD23D8D3D60FB98
D39D081ACE7B0F16F6B88A82F3433A0D6F1609D293B2C290543C855BFFC011E9
5D8DBCAE2C69269876E57BC90FA93B952682C95ED6BE72B3C6131595D3DC1DFD
8ABEE453CDAA93635387938B15A9B4D9AB27969B9EE559DD4CFB14986FF38C0C
8C7E692CF12511FB64E4BF228C4E27F0D0D9D9E876B8EEAA45E99467B403E3D3
365D5D83642CC03565EECB5414237F785ADC65A2891FBE4C67547D0B04F12387
82DCACFDBCB0C557A770AA08CEEBB392D23A9DBC7A1ED981A08AA153E5721FA9
71CDE9629C0B16424CF3609285DAEB0115E4A51AE657FA9EECBF40F78F9F90BE
865F80AF8E942C020D924194E8BB270EAAA64FE96AC960F649C3503F03FEA2F7
BB5979E878C00247A2A770014BE3171FB869E020BB10C217EA56B73B3034AF14
1C6F35820FDCD315338B75C476D6979C21D513C3AE22EB1DFBE8CEA5B88B1D3E
9FE077F2E6D4384B66C9C1C4BAD529A1DF63D627B65B48F8EEBEEC854EC912AB
B2A53BC811D193A3BC7B6EC64939D3D6E6A1A003FA54DE39A299C62FD3E5BA2F
220DC7C268E2745F6031096EFE39B6B9B33D25D887723C783726CDD1DFB8ADF8
DD0F062494D737455C90BF66DA676102B0B9E22A47B3179F07BD6BC5847EF24F
20EB9678DBBE7B8E969954CA461204B22B1AE6835763341248A8A54DCC147B18
5112BA48B1753095A1C8C289237F91CD787233E82E5F05D1F9603A60A75DF973
E3C7106DE30A0B9CD49D19E58EBE497730FC52DF3885E8C90350ABDC75BFF945
955888D41D0D1DB1E9F77B0F4A5ADA9A983F09AC0165119F26A192859F515767
634C0D2CB1E8E61EE84B1A7EE9280D92FF8E92F55A1FECC015E68751D944467C
4EB4BC84542B540BC76744BC166B910158B6A7D0E01C25CA3751047547D99EED
11AEFDF7FE421D3E46C232426B248A6FE29A67DC7425C665843A5C1C938A91F4
65836B6FA5901C139D4CA2CC57C72DC9889E13896C77E1A40B6005628A858DDE
5AACB3B40C2AD6E5D0284ED30EEA68DEAD0613A6DF550D67D264AC0BA35BFD37
418CA33E36DDD34410152FAB8D553CA6B82254A8EEF9298AA3F4516139953CD5
F0B6E47F01A4AE7135DA135D95F14036E96A912C05D8B9AF2E07C435021D4EF6
1D2B23E1B1CCDBC21B847F26FE751F19938EF20506F787078D665673C1CE114F
D0B841274011EEA4682331D0A1D8022BE8E273029016E62D7D5AC2AD93CD923A
E993EDB97DF199549D54074BDF154E6648E88E262354AD826DF6C109462097EC
5D41E652A5879EBDE327B5D838E28FC4A02C675A0A133B0E3AB45CD7781B0133
0ECBE0C63E1E1A9AF637A0A13816D0C805CE17C449E86870F56884B4C46264C5
CD44C1277E1086E303779B2C1ED610B6863C90184974028AD0D8044CF3076F17
C43F9D158B9CA2FB79A41310EA730FED64195A91C18CC866379DE46AB4329C66
97373B2BD37B09BD7BE26B975CFB5F1762444C565688C495C80B4E8D09C7061B
7020CCD3459666098A732E9BD29260CB18704C1D80948A046343B177BFFBD9B9
4C2C36B59779D01E0DB1283CBE95CA4F3136174817930D48396C3F6D78012E21
7D4A7E4F20013D963F9223E162447B0EDA4735E853492222749A53E22583C9EF
6119CD80A411CC1B547D0CA1826CADED1576D5099AF5931B22342D76E796116B
6943E00696C1F12A9EC05E38F5EFF96C763F51F4D0FC324CFDC7CF6CE88444A1
08D1A5A4E8286B4B4DB698496B4364AB0224D742B9669478E3FE2C09E55E2C21
57806EC5476E3F287E4DCCB83B672BCCE43458A67354A4AD890E1B365B09C911
EA2F345629C402BB27FB1635A70551FF9C8A68CE1ECFB298AD5082F7719399F5
EEF54EF19C9F06D41BEAD5DC72DF55DCD42AE252BD593EF545B9C5175BCF8CE1
39D83042CBAC0F5C409F4067A69B1AB8BD85E4A726D5F12B4487AF460C8F5480
C7AA0DC61F197A9CB5C80A00332184637C6FD5A07768D5BC79376ABF5FE2011E
FEF3B181EE01AEB67909955E5671C075DD53A5A82FE7F773815B2AA555B8F4BA
9F18E5AA02000F39551C3DCEFE8BA4312F68701672288E32152AC676F9B1F252
F8D0ED029E610CFDBA8EB3E01B6C409CB1F1A3363D265F6CEFA9C4E9A808380D
D882F82522B9208A27D9CBEB7AE62EC1357834C33171533E5F8E86BE7222FFA3
9324B4F42631D0F9C5CB8646C0881B533AA8F6589181367CF07273A3C8DAF461
AA4B817D6632F177624D1985FB5F85BC040258DB2E044A6DBC0975EA6AD0C814
A7B802610A0BF6A7DDBD2B1241785EE4E3C12C981160BC6A87D4C57E549D3DD9
776FCED36FD33CF7539006B6AB0F5DCBB866F3148AE22AC1F787677CDC3C2F1C
7B62D933C3CB3F5BB87F30B80F15A0082D1D59D9E92F44ED41B7F20AA6EF837F
84D697ADE9561BC4D60BB88BAEA87069E8089525CECD505DC35CB17B6D8F433F
9402B3736A7306B002E46CE2989009F8939A5EC6CF04D1DC8243B0BEE27BEB10
C38C8C46EA13240CB011F26992D05C347777468AD29AFE99D5ADD7E44FD970E5
9DE86300C9507C936960D450E9BACAEFEC61BC7F7154AF13B2F3824F6B8860F1
5433FF73F1B5946D74BB02E95232779187E42A66D7F484E1419B199244E016A8
93A4A50057B21E4A915539FCB9B90534D6A002F128A373A8DB1C559B2E8D65CF
1454B3A8B9591B661400E4F79E07022ACDC7705AF290C5F51D28CF849D07521D
E30F80A6CFFBAC0CA1E1F8CDAE6384AEA13283716F280C3478C8EE4EA63876BB
37A4C12D57D654286D5C2C2D8E6A24B34217D101BAA301812F15E107E366352C
A729681CBCF4F3103842514175F7DA090ACE882054E0EB170199942FA3B8659D
BD711A9A3F3A3C8EF9DCDA92FF0C8988FB0AF64B7ED5551A36C7A0C3E0FE565D
DBD45AE467A782725D8B3E30CF0797DA9633E9C9B38EF5D524E99EAD57A66C58
7F16F3B411DF976A59CD4D305F731ECDEBA2A8C7B93F359219DBE8E8696B8F4B
86C231B10100D1BAA6B29F192CEAAA9952F797DEDFCE3088529A5C2BFE6B271E
FE69C67B6E0BE2CFCD54154EC1B30B31896777EF5E98AD23F40DE32DBED378A2
775BC54B78E23B62E3A2AE32BC724EC6D503D2169A554C874914892CF60002DE
1A4B18DE71F20FCD1AEE6F788FE84E1E85CFE56E137BA47C2A14D106F5549782
4A7C4E03D2E085E8303E92D7EA80E70934CEF2CE74F3AA90547463B5BC5F2ADD
55C7328A64128F5382C1E0D36501C2DF856473032BF7927B553B195C0969E2B0
7C3C41940853BDCFCE63558844C47DA07083AE8C707D6B09FF12CC28B0AA92C3
74835FE5E4D9771C3B3FC85C7E9268843FC75206DC4DF0437FB1FDB38B9B705D
17714970FAF1BCA49C71C91D08ED840E0463E70026AF4814F089C2CC0D6E1077
482AD3ED894C0EB343A1410BAC1733ED33B0F2A697661C3F613F2C3C1AB24E83
A0C6B713F85BF0D32FC3D6D4CC5E4BFE4E9D29995E7394516DA7AAF8720ACBA1
140F20C2271A73AD03D05086323E120458EE71E7F1025AD1B1E82AAF4C6244C2
1DA349B3FF6ACBE39299E3BB6F19C84FF41C50FEA576517806231D90967835A6
E4F8124548330283650D1E0BC18886B7B715A2B85807A097237FF2DFB625465A
D2370DE5A2F568D20047D3770122DF91F7A925C141A542EDAF90ECD2A3E0234F
AFC2D7A42A2A824840B530D926CF7620EC956763B08696582AA2B21BB19053A2
F5EF0E3DE70AF82066892848F2A38C929D8C88551B6BBDC1AA45A7F17C718748
A6B1B0F4C3EDFEEEB46A6A9EF7C19F8FE627E025B8DCDD5031548498F4D0B01E
C6A7CF522CE37B1D5578229AE5A0D81EAEFEDB5487328A36443936BACA2D739F
BC72E9CAD5D34F8CBAFE07347A792DFAAE89265D8A7C919BFFB8A59AE9FB7ECD
2159948A4D1DEEBE5C96E7167C5677BBF9E0EBE962708C2404584D4C9015A031
DA8EDD085ADF1FFCA02E888076022231CC5302A15E42306F2EFC9223A300099A
DFD881127BC59325900C8F1E8F4EA514F2B505365BB9BA797CB6E7BE93EC0873
BED1B883452CE0E9D65D465D372B6893B8270723603F09A88E08685893F1520A
A122AF7E3EC8A08608286CB48B527FF8D8EE2BE0E4A2DA8702A483C79A6A3FDC
8354AC70D0E07EE09CE597F8FCE7F0385FDC814078FA21F05D3CC6FFDFF4236A
A94706360EA8F76E84366064512D89FE93D92A68BAC15C3D0AAE3BC7DAE35AC3
F5F43155DCAB2B635F85832F67A8119955F651A02B0BF52DB7D3247A3A141388
48A65DC61852339A386F316DE6745B3EA8B8DFC450CD9D417FB632E6DD1F5D7A
C8BECC9621055781C4F7EF586517257ECB7D4ED6F65B65B78B3E2385AD671A72
7CD0D502BCD57835E49E8BBDC32E23AD70C6121E8883DCF04BD2912FA4E520FC
790EB971957CDC08787E6E7E7ABF713C2F2E85D5BB7F55E437E7779B3162537A
A03AB6FD0D5B2467590F4AD8E80EAC6C0C8CE9C7393867BABE4AF9846FCB285F
A5D7E21A5548290559CEE6C3B6C52AF524CF0742A5FC9DD615F07E9885CC6B05
07153D254739B6FAE08D9DDF77221D6EFCDF42CCA8381F22EA450CA2E00F1358
D83F6783570578DB49A361A653F115460E860FF5288A0B25CD6D7E0A0D45FB86
60A26612C9863B81694B781113B33A62051916266782C1BD807B7E3C49694412
A121F0F59A9461C71BCD4DE28A7F3F8BC5E58313AFC4D5A655C45F65290A3224
4C48ADBA7851271DAA8E10DE7110A48839DE1A2093452D1E3AD0A8EC8240719A
1A9A48A4B66B59C502D7105EA5389195A59676A3A46A64A6B55A4190AE6380B9
758588BBCC3240C552B2AB2ABA7EA288D6659448E1D895C0B06DDF9A351D2334
237394DF21CBAA1A715BE5C3673598A55CCF63716A785750D9106D0C266759A8
E255F34E426E865DC8BA0628ABDA822B496FBAE5AC925DC5D372F9D9C100A11C
25A95E9789BADC69C41F5B1AF0AD603FEC50B0F41E7480EEF006FF92AEBA3E78
F64ECDDADFC23D095DA22C82C3A2BBE344D3D8B49E75DD48F6368FF0C7925D10
BCF0817688121AB4768BDAF1FBCFEA945D73932710FFD84E4FA3ED927A8ECF6E
0633EA9018DE9585CBA02D28B3D927D3A268B80178D73D45DE99B1D4E7D34761
C7B86EF8A41B4FE0934B56219DF18D7137D561C695C553E4936F420867909AA6
FAA940F0C02075F44F0B34F2CC8AA7E607FC97ECDF403BCD3BC892098FEDA8E0
BAA78A42040E8A237D084A4AD8C6B83400446E0C9111C045C1A7483E27189BB3
4022E58FA703A6908B60E016CCEC6D3F2C6001ED728F40EA478B4DAD125AD837
35B5F2EB6017051E92CF7F7136FB6339A1CD242031A588742E41168F7BD6F794
7C4D9C05092A8935A4CA499A826EB67740D4008085732DEFDC00A38FEA633D7A
085DFF69EC290ED88E50CD42CE39476E49CBB6C2EFF5C5C389177B63D180AE2A
7514B8F6AE624268E8573C136AF88B519F8E237A579CF5FE2A8FB27AC63265C5
9F3BD53A4DF84E8804BF0DD87F74A1FACE4BE3D72B1F1A3D4A18D6A546808252
67D0E2DE5B5FDF824F091C0E3CD94994470947A314637598437127CEDFC2C1AA
655143CF32BE36CFC6883A12C4721455A00D43DF72BE7A02A4163FF3616EA0C8
FE765D2E8B25B626F6BEBEB691FD768CABF76FAE561B093205E2061B3654A24E
470C23D800A1F9C1F6271BE1498D1AA109B3EDC53DF1279C8A009ADD9F01ED32
F9580150CA94A905D64361F4CFF3E1E5250C06C90821EAC4CD5E349B678CBC45
62A4E2B690CB2908BC57A43ABBB311DCA53837CF42F98ECC89FF719A6EEDE44E
6BB423CC00307D0906AE8D4A88192393C682B739EBE04A11FF7CB2C0F569E5F9
1CD5D3805BB089A29F94554F4B02A95DD4FD06A8565E8447970FEB5D0B69E6E5
A0B6C7B21551FDF0FC864CB0E9F0247510E377089B2160F26F35ECCDB62E1203
D917335FA10DD4CCF7438B75445A0099EA067473FDEB15B9B2B00B725ED0B162
27C827107A5D5CB3DEBEDC1EF0B5AD61E73EC7CD608BDDA8D11CD5A5F17C59A8
36540AE75742EAA85F1CDF8D0181CA73C56CF1E5823032F0A6D6C33AB001EBD2
3A5F7FAF34686C99C9C1DD1124B86A94F69CBFF36154F8622871E4BECD8973D6
92CA948E282B5EE0BE2CEE1F9CD23CD9DC38E5C0151E354118C1D0549FECCD26
ACC4F7320D3E4CCFA7C1CD44E7671020B9D2406760A4443CF494BC176DB3F432
C853333BECF03011504B3DC9F53DE361C91618DDD0F63E7A1C8A3016368E6A3F
6432CE71CDF9D2385D2B0AFC33771C1563ABB27AB6E7466C9E350DDEA6FBDD6A
D2A77EB0C839B29C108F4F782E44EDCB3461CF948D9F07292B7CD6B5D98C4BF1
07EAF101520DD198A459EEE574A68FEB4E69D1E037CAFFA56C7698C31347E3CF
9B6CD7DC4057D2427FE90303FACF6564D22476E758A082E96AC79C7FF1526F19
4B95BE765DF824C5D1ADCB0F610B2F3EF9F080C1D0E1F85D2CAA4EF56EB6ED9D
9EA898831F213FFB5FF6F117D53B4B6CEA771F97C41E0A2DA01AF5ED946CE373
A893AA4E30D1FEB0BEC626C25FB4A48A70F9432AA43C4632064D8C5BBBD0744B
720F49280558C3D3C8D2F6B4147B88505EDF70A92B75AF28FB6253B826466A1E
37011AC8D9591A574544DDE0938CC9BC9427A724E22D55753B239FC5CB246B5C
515FD67A06B6552F3B116508F79D90F4F59AB471CF2A7D3A13DBFA467216AF0C
E24FE55866CDF554AB8E24B8BFB56F60A6D5FCABBCD1FF721B0BE0DF73CC4675
58427D9BB98E1CC9AE0CA58FFD497178664E106AED49DD9AE5E5A0196376EADF
23F18052D5E553BF92BB66E9002D608A9250C7A72E586315E1AF7B0420FCB6E6
03BEC34C32BF894D70BA623D049836A816872696EC933FEB409901446D3A1215
7DE1589BEEFCC5A958BBC273119A00A4B97B2180AB872386FED41BDC2CF1EFA5
BA6F959D38510FEDDE3175B6B25C397AF1B7EE957AA4216342E9D7131B88A3D5
0082A9CB14582C29C2A38EBC3B5FCD3421AC6BCA641A5020158028AC1FC23E2C
73209C7817D9D2AFA2CFB207578995
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: URWPalladioL-Bold
%!PS-AdobeFont-1.0: URWPalladioL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (URW Palladio L Bold) readonly def
/FamilyName (URW Palladio L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /URWPalladioL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-152 -301 1000 935} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AA45ACB42B05EEB99F8B643CE3
F4B6449ED5A733594F70CCCD7BDB073E630C93A502476CEBA5741BEEE5938FCE
3E77996A2C56EBAE52B2701DEBC95E363E995ACEEDFD1CF8EDC72768951885B9
84F82225B3BB8E9522E784197B8AF13D70B2CD113F7501CD9333EB9A28CD9D56
824E9A3A689741D4577777676015723D17033D2815122B32062451E15DD271BA
6831FBB953F03DB40513901CE59ACCFD6C2D6F05E2B6C8AAC7EE97D4C56B8F52
BCADC9DC83D5C7C45F5C6E60DF9F9471D42B1D6F45EF98EBE41997BEF7D56981
8F9AE898AFA16089A91654ADB0AE2631539262C43BC5206D6CB73867B19EDFF9
024F9C3C7D790946F34742A688BFD183A1307649A36F782DAEAA2D8E581C911C
B42485441FCE5FFBF911F1D9988FC5C601D09514633B415378648CA65F2D6F40
F7CC23901787522154CC33941615849C4E5F2600BE11CE10B78AE007EC0E5137
4C66EF207977C2C2CE5FD8E70A74DA9968C71790516F1489FB5A2585DF9F5E06
9552F391999992E23975398FA0F539A299EF090B9CA16E940104614A4FA8C6D3
495975F6ADCA90522557B3F02FACDAB68EBFFBB8579876F09895D723E482DDF4
FDAE645CD275F3A8DE44AAD1D4C2987B6CD35FBB18312851D858E2F382FC606E
41B7B9393EA57A7FB9903CE835BF1F8E67C15EC8AF980D14FAB1A56EF1A62E14
5433A36160111440DE43D4C8F28013504ABFA5BE40DFA52D34AF251629A70368
73B22EC87849070CC52FE3B74D259E603996AAF50D77304A8B6631C652E482D4
C36A5EA242B3F6A979331BB593EDF29F2D9DC6B35BB39A5876E5378E71CF09BD
151E4B759D53762BB109DE5D452919DE87197C14A816E6970C6476C8A4F1BE28
E6FBCDD677D4379E9D96A978EDA97A0F256534A641017C46F0637A6886CF10E1
EBD75689D3CAD47F1ED6096F825036BFE59A50A550F0FCC978EFE560113A6231
60AE7DFF1BEB6846A97F44BA6196DFF0E9AAAB0F3F34EA25A98ABC50DE2C1812
47CD8A7E2F2BFB159544B845133FCD3B9F46D1C48462A806E9E614D5EB37B65F
BDE52075686731382196CAC3AE3161EBF89944F88A19A5CDCCA280C5A47CEDDE
B826B08AC1581B76BE95036D3797DF9D68406C79A4B51ADF64776AE9BCAA6D51
1362E7A00FDF2C9A6D40F64DDA4B706FAB728B6F6FA9302B4455661480719E97
CFB7A10536081E4E417984862DAD762591F1E352EB919871CFB4FED1E41534E9
EA6F14F0175F0EB194260AB3C99088BA3E5E99D1BEF8FA31DFDC7965DF7386B7
6196E350498D4D6E99DEFF547629910A67E9C18F5860124FD1504C60DE06A7F2
96C7A9189A9F1693CA17FD09A3C723DAC77B64A494147AD18E43156C122CCE4A
7E64C9645598540B0F9587295C79AB17E0EFCF9DC7455C52B576DFD557FB9241
9B6BEEA4296669B1AC6FBCD6A36E770D676D2D16E9493A2BA3C610F889315EE9
2C675C4AAD0D289C2CD57F80252D5611A196544197DD7994C11CE94999233291
6E9510F18204616B9A1DE160E081B140D7E73D6FECA39D368A2FC841785DD8FD
E082F797FC2A67358363FF20B5A0762AF9674CAD72D502790E60C934AF2992D6
1E00C8FE8253111A1DF3EBCCB9386DAD58D689D1231E310E26BB4DCB5FD613FB
052F5A18ADD75DEE6D2906F0E0156E91B6124ACD233B3A6A150FE90102E5075E
8FD84410360C848D236984ED2EF0F728D61E02422BFC73FE205DA17C15CC1A2B
09E95F87944EC709466D81A03DB3E4C30CDDEB936D191264060F3AF475E30592
F5B5B257D2551523DB672509B279210024C81D6546452138D6EC7BD602ACC3BA
92DA3E39C2E82786077D93492ECF2B562A2004258F47856731D2B3347F514E97
3975AE8458669835299F6A6966DE25D75B644AE2C16B463727A8AE10C1D99B77
19A3F0E4A1776137664AB17FD0BB8F00C310010BEA88078A6C436A069AF3591D
C15C2AFC4524BA4A10F86C01D9C9641201B73FB8B48E107D6A48A8E490C7DE36
CAD6DBFECEDFEF976AE5071223CA6D67758A6FAC4DF0DCBA0EF81E7AA860B96C
A41C168548C01EFD540B6C1366F6AD6AFD1AB243502A86FB184B3C7D9E62F397
DAEE458E60E6058ADDAA14EA5738881447869AA4C14468B701EE11DA0468E18F
946DF99C0E14434C6DF848316629CA47FF9B07038337966F12D383CADD3191DF
D0C105CB6FC5F610237BB3C6E242EFE7F516B4E2977709EDBD3DB7AE516C55E7
42F598B1128C488F11D9AEF8DBAB34EE26443381C8DB3FA8EC5D51CA73EDF779
8A4397FC6B28F7DFB72F5895A6B85986933AEDE8436846C7B54BC0DE554F4920
881BA7F72D4D74A987FEE10268166BBE2451B7E802445AA7F37281BBC52D622C
63C6F0E7C375CDE595F97ECC93F9B1D7B4DA58A683260D37E677D919AF1F8D07
019257782228E4602776546AC8B18751096B35060915B9F57FF72458E4DC65A0
377A0CDB71B67572401CCFD3A3D6E666B4AE09D0D0BB7AE25E9C74677117EB46
041AFF25E4F0660D6F0F20FF1B1FDFE85AEDEDB77D1EB3D6DD2430D0A41D0AED
339C6B43972080D9DD4F225BD4583692763255C545927B84D3AF737D197E5A81
604DF9507DB1DA56A16B74D2B54D37ACAA1E71668ED3E9929056DC63595F722F
D8B2FC228BDC222B99AC020743910999695ED677A030032EFF6BE57E0827E470
54DCF627A2522C130F2A36EA68D564A3AFB3F74B7DF109DB070404B13EF6C6B6
28B895011B8D52604547AE45ED0194122A2571DE7C2864EDC5DDEEFC3FCE4F18
304EF90619A325153A49EF7F70D1F11EC100496411DCEFED612FCA55E38C825E
12DE734E46461C5380FE613F4B4BCDD23644A20A65A53D1ECD46FB16960BF6B0
C4DC425EB4436AEFCC9AC31000F854266ED1B940429B793DA06A0738F6D6A6A9
EFA0398C3B1799E2B0F9D63A046D4897AC9BF9A43DC450D2E9A12DBE3E89200F
A6D861EEA984B1F911A4B2491ECC44B826A026A5F6E38B3E5253808D085F08DD
8BDAD380D59E9D3A6A52A4DE356AEE02D2932ACD588E1E18810BCB009ABEBA12
5A0E424131144F348B1B02C98798499C86B3F8D97655EFDC4FFFB8C688AC77E0
E69575F0F094D14F4872A4381DDD93FD4B7EE1DC737637D9DCB49AAD24D51D7F
34D7D316F01DB5019156A293155BF03A84F0DC42F030D2CA5990AAAC05B707DC
15A1C697A6ABC3DC73400F28D669EEAB3686691127537A7BB9D22D58C67D0B24
E3CB20F8A8AB86D914D0494A56BC659F221A41399692C0826EC7A0F4A11399A9
2F011BBDAE2BEEF7EFBC3A06B6B6361BE870FB9ADC09B69179C4B086E8E9F53B
1C5434D234A1DB0E467C4DF98F1962B30F47CA64B41F0C7C9DE90049CAF442D7
063003D56F447007DFC22ADBF491AFA1DD38087B9F6472BAC7F2E986465C9634
6BB2F441647EB2A78F5F8AE7AFB98CD96A4DA312BA7BC15CDE4DC12EAAFF930D
E7B7E4678AE9D960DCADA3F2C1F10FE36A7F29F05682A045931E3D900296DCB1
2F1107CFEF0CF271A9B8B8EA9847667B3F8630660116D3C2C6E7B9326E24A0D4
7D6C5D1D65EB1583EBC21520FAF42680772C1BA775A6EC0E8F93E8BB74CB3573
8074BCB9FEE4077CC0C49C421C60E412CA2AE3686F7DFA49F81BA6B221FAB4FA
645D1239A7FD2CC98708E04A5AB714B111D8A8FE81B7B4E7A62C4655FA5FF17B
14F01B02C1A4E8BE81D84557DF7F63CB86D666318968FDE74D853B2CA307C7E8
5E607993726B85493030E61D657AECD8ECA86F892751636084BEC4B58DE15FE5
DF3F8171697ACE0E17FCD4DB6551215FB2284EB9CE2186AC3ECD991CDB27EFF4
31E35DE91F6E006F7F2FE9B51D241B0605D97E749129275EA44B6534030889C6
7A73EA4A63D16157EF53666A283A705C0C09B3EA59EDD7017D760A43EE901855
9264B4542F0D0AD915C655E6010089C30BA92DF39D330101E863AC626F054008
FC5CFF17EE180161A5BA285A634784B5C38BF0CE1D0963CF4E395B415F9565E5
74B571CC7AC0511ECACD8027F62B014CC1C4571AEBDF9A96304B33046CABA812
6159E23DA815295B17CF8CDBB25A764E791F472792176049E2FF66295CF70CB2
28FF6881433D7BC0C6309835F84E7D53230814581416FF331CA9E4C9DEC6268C
E12CA57F515C4274980EFC5F14DFE97D52B20F76B948F478C09ABD8715306993
1B83B3329DDDD0C40098F49EEA51EAB70ECB41FCD9A23DBBA62958C95D3ED14D
9BC386ADCACE96C637068980D233F9944A4D7AA8338F2F4808BEDBA22B582B72
D5E5035336CA7443425E0A2B5D78C5D358A79508185587EB04D3653F2202F44B
87FCCB04639F56AD4DA6AB5EB4D7B85771D39385BEAD4418C925FADD7DF27A7A
AEAE52FCE3DA1801C5FD382FF6A474BC95D164B029EB8875677A3C0E43D86445
2000A3ADB919976D4DBF71AAFA2F80E13B0F72B906B5FB74FC58F85457115165
146FA9F686824DF8DBF06322F4750B903BA5BED70CF63CDD5FE1777A0BCF9412
7775162D043878C4B20EDBB38C2FB7741E7137627401EC2691CA8F3E0397E9EE
664FD1E4BD9B1F3B5D089DA0D686041177A85A10F67548B03BB40DE7F8FBFB53
C06AD25316D62E777B51E84317CD46A056091A4ECC75363A3A1DEC9D2FCC391D
E26EC8B2485AB8AA07E4A3E4F379C85FAB6AB8765F5A69482FEB60BAFFBA0270
D67C6B2800FFA34AA39F93FDC7792FCA47C2A410FF5D285C29201514ECE55E54
DEC7D90695769C530E9277CCA61BF852CFBF54CD7BC8CDBD81578F75771117A5
DABB15D3636FB9D3B2C95414CD559F65B1728DFED9A13E39976C99B380E11B24
D58247DE6ED8D91F32EBED2672A3B75FACE39A67C7E42FBBFDBD098BB8D82C03
8CF4996E2597EDFF1D2DE73B4969D223D544568AF2B2700297C43DF1DB154A97
C0CCB80022DF8A81E319A023A368D0B2AE350504DB7B7616DBBAB34668B61D02
6F81AE2CA8851A37B39672A61C453FD7CC6E94C03AE746C5E5B4450986908EC3
974F239B941AD00F90E0F6E409AC584A6FA1B22079BB32C2F9D5F622662FF0B6
783E357B8F2EF4232848E9E6208C60318B09620E7C629004D94BB9767D1B30CF
F24B9776D63665D7F08B59889440AFEB8208A591F7117972DEE30EE8FA6062C7
445A88C62B5D15DD3CD29A65D16BFD12CF2F3C9B1CCAC0BA297A6B23A3B896EA
85DF6A84F652ABAC9E873C86442D4978978F46B2B1C89565FFC9D4E4F54EF759
44CB76B199C029A8DF7A84FB49741ABD922AE12148CB9D11AEEEC4939909A4B1
380D67690BB94F24225D2EB4E9823192E78065FD638A64B2BD40FBC00A9912B6
3DD9A5751FCA551F87BE97B35820AF38CE8497C83025DD7225A1E3BBC89C9748
CBE052AC7C80300FE87A231E5B45D6D5A435BB99954933DB6792121CA369839C
39CE815BD5BCF238C7F388754C54108649943AF38B427059FE6EA36A52FA8E26
CD1CB966A1EDE1126F96B1A3EBBB8BE2F4502417803665EF2BA7CF318D0B3010
2851C9897A495F88565BA7FBCE84E9D8E13F000D152E42DB1C1ED509438C43FF
D4C6DEA14C6B37FEF23A47B55648F23D239CE655015913D76FC57699D7FD35C2
FB87BC1EA12961F311C2EE3444CCE23593A5A847665BA72FE10763D1FC0F5ADC
4CF794E41D60CA6947C4D2893FF0CE4557E2E1859EBC67363A6830E0661ACC6A
8BBFEE25456BADC31DFCC7FA648FF1F57DAC9EFB59CC087FBE105CA179A7B7A2
D22BFB438AFC133D751551E44914DF1F13CBD3F7BEF02A7AE10C202FA1C02B96
535BD62E22D73AF8DD342F6BD1F1B6A57C5A269D67C83EA6B9F5B6703296A2C1
F91B742C86DE1C358916E9209FB94F4ED4E989154410F23087FC234A521FC9CE
7F1D6357D203A4C375F845CD9A5D92C1EF1698A5B28F22E0C55DB376E4E5E57B
531E150BCF18D26A294E27BA156BDFC5EC76A165916DAC6BC5E048225EDC36B3
5EC99D1F223E3014F12089D975095DCC347F6BDBC72924BEDB950F7348A16F2E
24A9F7DA214BA5AA78BBC25E04728A433251D7913F1A7392F7BB48EAE1C0366A
DA219C8F5B2327104C879FC83709AD28F6F64DF54A206E8E6F3C5BAFBBE05510
63C4965F4F39C44FC8CA5B551B0CD3713AEC8E364F9CBF6491243D735BEC6D97
DDFA62CF9AC0CF147E0CCF92E92D2819A4110245E8C0AF5045984946533546BC
3975E0342637B2A6BD6CF81BA692A9E47D220F28E45A84B0FFB56B58F5D594F1
BA15663726133D0D4FCB5DE404CCE2E020705FE05FA4CAF3C0068B91520408D5
AAFE608D46F98BD5948F67530E7406CB29DAFB32AFCA310F1BC201FDFAB3E421
5B40B0241CF50B40A85B048E3D51377AED1AFC8EFD96BDD928C8269A55AF04B2
476E45D524721EDC3FD7FD5693496250647F37A36E93669DAF90E09371C7A23D
DF3DD4138D93AC172213D5A517C135657CDD105442286F39851D4F59F97F2A13
C2676F0C36F09EA581713CF259E6E8AFC57CD42D526388E2895A696AAEF0EBE4
36264DCB13B5E2525349E857177D94A433ADDD5A00F901644D3A8A062A5DEB37
312F06624DB04504F20036AAA535F8D3857863924AD5269DE109931E7149ECEC
EEA24A55A99C133A4257F063E11D9AD51E0319EA1785139D7CCD7E40D3D62739
48721F931EA75F5E0E666D77183C9326D471003A9DCFF663A74376E53097DF67
8EFC8715BD4AFA1D367C1A683FC6B88ADC6B327DC77663414BBD889C18BCFDE9
F5D6D42764525B532BCA16C510B54147CC997CDCD74A4365CFE1D75B80581E2A
33FC6C2204D5437E60D17592758D2EB8632893D897E8CC9F5B7E841DBC5A754E
D992F08F2FD5D36CC4AA4FE8BB4C9D51C3C814FF11A6DA32E26DAA0972FEFD35
FE47B2A93B539CEB674916112E6ED402E9493B0941BF04D1B2C7BBA8AC6DBF71
87A4B1346F8376E16B3B397DF5685F7B56C1A7CD17BBC9E6B3D7BE42AA3F884C
3665B1C3922B9E9CEA37CE9AFA2DBC5523F9FB79137C8AA4A20588584ADCBE83
E6BA5F85F4806708AF4FECB20D7C10A20D83A8223AB771CA61F867D7315E27DB
B7103C432EDAEC18CAD42166EDA7834BE599AEF0E8DC22BBCF994F435523933E
971D33170450A8A0FF5186A7AB03ECCC79A923BBBD362B788F5C9DDEDC7EB716
ECD75C6A6CAF0F0FB5F6A73A47FFFB9D6F328306780B31793DC3588A170E5A20
B20B7C7E7B7F8E9C7F438CDF8944DD5A06583A75079194054F8C0D765EDDB100
AFDF7D96F86C73DA6B3B031B0608A63235596318B3D710351EBFEA8ACEA7817B
9F50285ABFD061707292E5C5A6EA04FCECBBE13660D5360139F88807C01EE33C
0FA51EF3A6487E8F7E09AE2D7E5087E979C9DAF1AED801D6239C7777FF97DB2A
C67C7F69AA720075EAD569E7BEF81B824DA5A6D2B21C7CB49F164DE1C6C63C0A
CEAA1B0280C4A7740C14DA2F7B638CAC8C3EAD6F518231408EAEF5070BB95F0E
F50220FC04983CAC63F64DBB5F3770C602E6DDD5BEE6EA0258B67912715788AE
98B33E45E047DA7B5DD9D12ECA7A5568B0C26B5F595CADE6F1EDAFB2F2B0B4D2
ADF82AEF36146664852E31AF8787CC19DD310EE1C9F89F88C9ECE9CE253FEBEB
709BB571CBD6D51C00B349268DE077F06C6908E7E27DEE035EF7522B4AA4BE52
2FE66353CCF075BF43CA197B190B0C1083D696C0FA27B86904477A22C33FE6B5
30885A508D2B610CA7BD6C31B86706637E257329F09323A756E7A67C5DA7C09E
C09D104723BB02264F5281B017D761C67D2DDFB54514D2B61EC956D49B2DAA3D
CE3F10992FC5B88E4E3416B28BAA016858FD029922164DC98AE3D26FE8BAA3CA
A17B96BCE18F05E6C0D35AE05E9229BDAA7D67F1459F18598E3C39DDBE568F7B
FB4C76FBDFE25FE91DE225ADF4936D2D0C1BD6D613BB3C61A04776F70BDD9C6C
5AF17E7DFBC4DB5A9DB273711CD9A4D1598596C6DF2B0986A30F3B94C9CE1424
E86B0809451A673B0864F2DBA8172E449963E27CB98281040A0E8FA1ABE5F6C6
C2F555C2DDE554221713230FFBC15622C242D33C1F0F309668C00B5E6B398D27
4C612120DD84F779F73E6362573589B10957AFDA4AA564B4997CF42BF7013107
5EB2DE5450F5A6337D6404E9251A8EB3AD1851B8557695D31B8FA258290CE02C
56169A952CF822346EC24D14A9B60A7E85627194D9A91E6869F4ADF3001B8C35
EC6BB680F98BECAF0E5C34F2A3A0FAF72D25E958FD50C3060021F0556787B430
782ED881FC5F384EEDA74A8F95AC123E1B3B6FAE7AE7D71D41743DECBED602BF
78B432669F2B7C58BE9909CBFCD273EF5617183CFA64757EA3F5E9D159BC5086
CFE6D15C4CFE00627CD8309098C783CD1FF888A9B1E40D31C73F5B4E253538C5
E0D0672A1C4B27AF2C873A42C13AFF732ACC9BB83BF2862E7DA32C27FD326768
E57DEC8F6CBAD51D1B70C1D43CC2A8CEA4CC4EEA322DE7913C69605359F63001
186121ED29020CAEC58CB39775D460226F20388BBF95B3342044FBB92A57A967
DD5572E37D066BEA9DF21D556A9B6781C4536A5ADF7147B9234FDAEBF0763183
3BD20F64E670563682D20813F722DD86A572F602F36E083DFC32E5B188AF2E4E
14EE2CDC8F0BD084CAB30272E8F065218BA88536F00B9523A6C933683151661B
B27664EC44367EFDEDEE8E8EB8AA268D00B35AC89644588FB8BCA8074A360983
6030E058C6917D4D2261EF3B27F4F84A27603543947F04F68623FC6BB43B7CAC
810644A8E59488469DF34AC9136ACB75348A88CC361FF06E984C86AF0EA429DA
A5808CDC6AE495A872463510543EFFE5DD50FFC2FCDAB714E593A3FBEAF9140B
86917135468FE006F159D3299B3E7093279D88C443C2F8967138A65F45FA3432
8D15C87D3C12BA91448D0E9DA501524CD27F5D522B7B7E0F2776332DDD58A280
9F9F747675531569257C195560586BC4C5B3E80DC42BCC8A7A570D1624D4605C
45B517EEAFE132F4E13EE500835D79D5646147D6186BB6320A680E096C7C8AB8
EFDD480A3BF40EA8DD6EC37DDB7AB02F8DD3BBA3B4EC7682D599A33FA38F47CD
0DCA89206C0C16DE5CAB45EA27FD7B173032A44E9CB6F49F4274D3EA503F71CA
32D0C1BE23B6A3619457F142B01116183DDFFFC28DAB272BA52DC028A438B9DF
A0D9BF845CE38E33893E5D2046EBCA5A91FDDCAC2042AD0EA58773ED0DE9FC13
F8FCA7D5CDFE3940C0A3B942DE041262F04E6FBFCB61D36FB5A3FDDE1DA1C862
C9BDC3A2B152842BF8FE45235E3BF2CDA274EFF21A2BDD528FEF3E6AE7CD6EA6
948863FC2D86B9AB684FBE46841D2C1DA85E1ECB50200B017B7E2CB4308976AC
BAF5037EC19191219B28B56B22AB4C069333BA7DF079DE07E710DDE27D3A1BFE
32AA1E5305F1978FC3EB793647EEAB531A76DEDF92FCA9AF51CF0FDEBA317A1C
BCE1AD69AE3E77024F07D9F56C7B80ECA9A4FA007D6DCB2A974E04CDD3414169
6BAE8F8DE7832752255718EAE2C211F55A5D1F1C3FF07F3657008795129171B4
3ADCBEC519652AF9ACA8DF97B8E484BFD0A3606D42EF4059586B26624021D4B7
619BC090A4DBA6C754A653BC83C194AECC7373CF81506E65B28F1F56B1618198
B3A47671052978CC0DF0D2D9BEE4C954685AC6D969143D6B8A4F54D99FF2ED18
E16F85F0AB6CC26A86751DCBC5E61A64EE56FA9B63217C4F0BAA09119C24352B
9F43D5829E6603AB03A30F5592DC31004A9B21D2E9366735F2983F7D46685959
C0533F09A4B36CA6CB9A4F911431C1BDD2C8142EA8F21A60A63F3A1388DF56F8
DF2224597766D01BD59A8F595D87F51AB5DDF2041BCC6827E45A0370F0F2D6FD
B8A0C996F08AD7471F3A6AE580F7C454CD775D439D8A073C8248B005E334974D
EDC6612AB66ECAD3AF64ADF60B130736371F7864291A3B3F753DEF98426130A1
32BE528E7800444BE945E826B26DE65E3075FB61518F444645E32119748AFC7E
5D305E31B0F2C34E70591A1A14D969B42CF4402F91F5C99F9CC06418D711CFB6
9BEDC85E2F1067C2E7C58231807317CEF9921B7D028DF2FE9125249595039CC3
844E994BAA093FA8646B0A352D02278303B83C9CDCEB7C30DCE501542F94636F
C5AE7BAE2963D5F9410CC7B0F2EB9D599DA85E2A01DBAF22A00480776DFD6E55
5B4815AA6C81B4A31704E26200918A3EE18F8801A57C0705A9F52D8C4205BDE6
400B49288C480352A4AF0B9F21CE25814E3087647071B98D775FBCD3D87AF05E
BC39F5D74E66F11F3A1AD8EB27554831A54DDC94C9A8E8E19351B43F56D1375E
4FA0C531D2864CDA9B961148274D9D714C06D48C46C69264CCFC2E9F4512A70F
F35AA8BEEBF5B24D693071F094CDAF1D7AAA2025303BB120B59E53117FB9612E
8D2F3145D44B69D1E0FA511FC7FDFF4C74BD227D09123F69038BE2EBEFC409B2
719E566CDF047E0DDBE430DB2F722CDB0967DFDE08713B8F3A5B747FD21E371D
D478DDBAF6E0971324446C4C8D61307BBBBA60F0154702F8C3EFBE8EAE31134E
8468D6C7F9F6C655B9A4BCF493AA4DB6BD3A5A8D35E4116A3A3D5F4B2EFA9A64
7F1702BCEF4A979C29A0EAAF00504C96AA1CD405EECF91DCE6F4CA876B8849E9
56DEB1D6FDF5CFF7E211F56F721F3774618D6C476F121F889333E7D60327558C
1BDDAA73AD0526D42520EAD4A134E711868EE61B497AE6D9A721AC60456E161F
131CE16F2147E99254BACEE737C9DD420291B2DFEE41A928F1BA3BA078F55FC5
DDD29626DFB5961E212D2088006981A188D1D78B224BD38E0955AFA0B8EC6C43
8F9AA9CEDA8876D6456DCC12AB3FEB37E78106CAFA48397089CDFC19931B4ED9
89581619393EFE8BFB683C8E386038431C18967EFAF094DFB25B2C3E44C6CC3C
393E62A40AEB673A238647241A837243ADC4813F8429AA7797CF871291BD6A37
13B561F3300340A315CA76C7756895FBFAC89720BE0C02B78E9D05CD846EBD47
D78EC30DDD9CA7CECFFC5CCF48CA29FAEB327C7E884920561C6907A1471CEDF3
902A430D06DEE7E02F97A9B1727ED9A42949C0DBD4A9C61DD79E38B755725D9A
9869D1612D5A856F057EB0DFFE423A00CED68405E6561EC13750A8FA3D803219
E35097BD0B0FB718EB36AA42905C5C1ADC69A496811CBF3074E38B8F092FE792
FEBC472288797FE8B05C2AD8EC590380FD3C9C3D84E8FB813FE153B22DB890F4
7F1FBEB51C59A21FA92B5705A38D4C878C9622EC7AE3E5BA6E51A038C17D45C4
ED0EDBC0BFFFFBEF97A93AE4A5437A09534554191383E77E963DDD1A5C9B52F4
50E110896D67B2253512D97798564787AE6D589A0ADD7E1E22F8B0C1D09E7A65
3539312E65E658C24496A55E67EAF18F41905F53A4CC60F8E9F9F4E2FCF8B3BC
C9F5D4A5B3CD5C34426DBC9CE1538FD71EA321A9E7C22FDB82665D8277070759
C0435DDA882DC6E06653E9C1F98E60021CD7FB488F81F503CD6BD5F32A146E87
D1221F3FA72DA2F1F9A03CCD801808691443E4A49280213A0EEAA75957CF0848
3FE4E9E33A418A8A13196EF241654B81CF7DF18A4CA0C5E34AD62DD40022B4AB
9D398F018B51FFF083740C18191FD90BEEF67D570C737F824C49E7D88D0D3E65
1BC6D9A17B5EB4DB58E7DCFBFFA18AF032312A1698FA7C2FF5E37538AED569F5
86C3330BBD48831049B808DE5FA08A037D4EFB876AE403D045C443105DAC80D6
3C76BF1963918C6A3C6264FD726D9C0B7BB9FD97C0233F418BA417913197BC35
B012882ABEE02433DF7CF95A00E8E775BB362EED9BD06EB28A3E1A31DB992E80
7F01F1EA184A0401793191AE33625AE0D5FC43EDF73E39A7CF1ED1E1CA0382DD
208D3C2EAD0BD5AD97E55CAC100AE563564FC1E96E0CEE00EA98CAFC7491019D
57B942B0CC364386039A13FD5033DBEA582F8B401381B9B86AB1E1B7E0C048E5
4807BD7F8CB2B7DAE5BFA9EF53E716D5AA2CA014EAED307C60AC31A8ED3AF889
7BD16EBA220B626CAB57FFD64A5AA41CE071D9F7F959365E6642C9D6103231E0
7E3A2CC33B2BEFCA6E17741DF67FAE0F0348D3C3EA3B035EFF955B82EC8B8927
1D9A6FA754A922516A672CE969C048A1AD155659591F21DC0446A249375C2BCC
E37694DC6B6301A7E13408A883CB2046E89F2AD32C4D9EA760DFE337D8D9B5BB
DD68B43673A80D0C510545D2C5DE44B177BFFBD9B94C2C4893177D2AA519F10D
C186876553E48EE1BF196206D71356F02CEB019A8A21E687DB2F6A2C347DEE4C
33439BA0A8FA7123545C7F33BF80C79213CD49F83D74A00F687F554411EF36F6
D1043D00EF24267A7E3361CF73E2E855592BD87C430FDF1A26E1C568CFB06AF6
70DA550AD780492B1D850146621BAA6231BFF5E7E11F5CDA023392204A79F1D3
A5F958A84085FBC43F41DB2B2DB1BCD88F7FDE6F59961B6BE0AB7233333E9F65
A7222BCA351A5EC76576A65D53650228C5A190D4EA4630B71E25E517C60BC448
891030BAE0D3B1DF38836BB51E71CE4F9FA406446C3F30BDB2FCE712EB0B9C9A
80F77651C95BD71456BA087709827B05A80FF787451A22DE5DADEC1223353192
A043D952F5CB93C8A1FDD99FC79707114DD547128F3C4A4A2428B51852D4DA80
2F74EB343274DA68CD751A72052D4FD983EB8C149E0813378E13E83EE1FB4E33
67DE4DB71312CBB85ADD21D5A2A703E358C322B2896A8BB113136337F88C41B0
FEEE9F66532AE89BCA5BD92B4A41EDF74BD6546A647368AB4388A643CC0A5675
418F3EF2EE092B3043182EA2E9516CB37209852707B51EA42C0BCBF43D12C109
FA7F552935240A7D0136B0DC109B02A806262A69EB227AE219B7A263EDB329E9
BC9A1876241E5A8759BFDBBC3BDF0F7A571AAE80A4C31F04AD6763C7862F3285
9E7D210EFE4665A21D215B6637907005596777F2B7E5984B08643563EF3E8E0D
0F16FBD7C6714DEE7A64508357A1401A45EAE73EE33A1BFD29681E25DF8FD945
94408AD1128BED9D8F9261B61AB7EA4EABB4E9D1B3F855F8143A811ABC1B904E
2B29B5DCD9133B6ED6BD14ACB2D3C37CA6C1CD1D33D5E8BF44E0FA691E11454E
A9B3EA50B4E758D057C62A86A6D702BCB381E4A54487A84A1FE082EE295F175C
1F1B8EFA7A217874C8F4D19EDF3F04435FEB2062B3FFC8CEB524541BD5A97910
BAA4B9435FF3A1A7A08808681118550342672A7BE20500304E6990871CC0A71F
2ABFF02BFD57ABF8600C7A877BA03F32BE4479FBB013476335D2EF72BD99A9C0
8D9A2E6627777772DCB36FEEE266FD6EF681C6D71441E352111EB2A1777E6074
B96F06D4DB2CC78F3375905DD16E8C4FDBCB74C65D650E3F3DD365E9B853E935
95D8BEDE49A2AF44371CA8B9A4C67CDADEB15C9CD85A73994A88001B405B496D
0FF359C4BF3345ABC9A5E9FE04F0560C2DD8ABA8DF631705F14A8C6C9596D179
901D3EB862080A335FFE5E7239FF72CD55BB61174D871ED5F2768CC9BF7CFAF3
F6C87DC445D292940A138DFD2DCC30CEDB9B0FD004CD614F3EF4CD959B0DB6B6
12C151557A7E396D747D8B455FF753AAE7433354E4A64D3632A8080741CE40B7
477B87FACC1755E7BE78406DC55C0F4705EB6101C7CB9C2C635365CBB92DDD66
01F9A8076928F9867BDE889D7EBDC79D15549E0A5D45A035FF10F0BB77607198
3D42C53EEA2FC920354999BE932369D5DF1CB0F12CC3632AFDA9845A54B48025
6DBD67BE5F86E49F905A22C8AD0296ED2C2A6F111DC0E29C0E8CBEE1E2A3624F
E3B54503222CA7AE5CE53C15A90243702D52B8E622B6373ACBA6F0387CA03AAF
347F7EF05FF3B50CE7EDA8E3D5BA606330FF5FB642B2F470BA92542A6A936277
2EB694E6FEDCFBE292901F033C34089EC1F67B0ED69475D7C8CEE1255CCB36DD
AC9B974D3E6419A32E542222EFCF4530BFC8481C361522D9BEC6A0A706A13C76
1119E48FCAC8ED6FC8001DB369C80928F84166B36A470F322E752B75D29D4A5C
6F7445C5A0556A316E350310399CA1169BDC7F104FEF092A2CC807FFFFC7383C
4D44E4C2811D37C9029692DF8E94F6FE39474EE13AED352E0C74DFB15B31C0EB
8C910767C395ECB870DCD891E3F875BCDB10DC587D1D1677FD06E90B2E752137
BCE91698874F4F719293D0B0EE58BE36458AB3CC02002C41BB7FF2C952C95AFC
8907C102971780D4F48B74CC49A990EF61A239212F05BA154584A312D0DC1C19
9035B90E895E2B938ED8DA31BAEEBE739FFA32545089856E54B5F48091B36493
2404F3017E13DEB1431EC807802FE4DEC89E20C9F30363291678A7D920F12885
5CDD17E51BDC4063CE0419183AFE51105AFEA0872A2552443B0E331946373739
5900A64CB18DD6F7DFE62B1720EFD4515E060B5FB664CFCFF3CC0B052242C153
3D2376DF3EE5C4DD2D02BD799DBBA44556E34A99F2D9ADB9FC1A3F2A4490B790
7206B1397E32E2D63C350442E2115B8D8EEB7C0302125CC98E1CF0A452E886EF
57A241A093B769BB09BAC8EAFE80960FE6C0814EAE725C7A145264FD0161DC00
9CBA50D29B17FC27A5506496FC1CC6E6C651681C8A22DA3BC6ABBEDA01189608
264D061977417B0C7399B00587DCF1F43B5F2C93E3DE4D211B78DC484B802016
095BD83605E9D6622174BDE3AB3916E34B9EAF5DEFC753A8010A916F06395BB9
C8ECAE542B030A5E40CE0811225A2A5D7B3C3A5E09A7D4D6CAA68988C7BDFA12
A30C42E1D8F6FF15405C9649C7ABC6136B4B755028188FDE5FDAEFB6250ABAC1
6F5A2473FB055086C7C485152D77DFB7BBE7BC502E45E34B91E51A64CD6E99AC
32260E95199F6B19286AE258DC9E2206D9705E4D09A44A676665462D1FB49CD6
69ABA5FD223B416C798A138E4D3C542F83821C56B4F44B70462F9975A6E314A6
F72C9F6A6966DE25D75B644AE2C16B463727A8AE10C28F9F361EF0F71F72FF52
A8A4C89AB81EBF74C031C2877F432E797EB4BB964FA647B21F3C8C0C65FB669A
9D5A0BAEBD399A1EFFE6AA02EB152F4A58AF24FDE777459789E329ACD57AC614
81045E9EC01F28EC7B1CB6ACFFD132DB396BE9F0F8A3D997D8612B4622A2160A
734E90B10E284252473B64D2E7440A64DACB089C45E56B246D4A5A7C3B4CF47F
4F120C83A4BD2C3E6594AF865092D44BE73F488652BEEC39119FA014A237BEF5
C410DCA1D11FF7CAC1ED8B118C2E2CDC4630DA14E8CCB88DCC3A1869BE48305D
A9B8AEA24BFFFF5DA4728BF4CE9EE08725EFEFA059B6528E35BCD9DF770FBBBB
DA5CC4582CC327B2CDB555CE8C9BB1216EDA7BC389365CE210EE98723284039B
EA4016FCB7018C4E998ABFC56EB363CF9BAE89584DBD875150EB9AED537CEA5D
1ED4E6A6150A5FB8A39A3A35143A452BACBB415E4E385507F4995FC3417B8824
045B88C5088BF2DD031E6A58E6607663FCF7102CA352ABE8B76CFCDA7E9D41F9
75B27D34B280B335ADF1047F81CD46F4E0BA350FA8C6EAE069CED7BB1EC714A2
F30E1ABE3B79C5A3AA2957EDAE5514F883618B69E282F6771F15AC0C6105BEA2
372072096958431641E18570C84801163CAC7E399A667E12B07C65D79172DF1A
3287C67A144BD5701AECD409DBEBF0C9E95509BDD99A537F5C9190864BE43DBF
FB0C6D14EE78FC84B1BD61C526475C35A8F8BF6138BF547EF45B3D8111AE4E0C
BFCF1D5B4E0D4C26F2095323D07B0B85927A34AEB7CDCD670DB229D4D49307DB
BAB34668B61D026F025892B1DA5E6206FB72756DCB0B93C351BCDB705B0820E1
39D55D686C7E96E0AFFCA83C5BD9BC2C57BCEA7F9A6886C9F13EC903E886D0E3
6638778AADBEB1FD0E5F80595162691EF7A85BFADC6FBBF9BC36324E1AE948C6
AC16E4B2D65CFE125AD7B0B5DC9A68B2966D7BB767D71155AD4338BE2FD18651
A326CE11C180060557B45DC9615555BC5CA5FE986AE79A29B949F64A0CA1C463
10F46B7B5244537DF81FE7DAC8F2EFE22A0BEFE38B588C644CF5F52D4F171AC9
699A91E6FF2B32BE0179DEBACAC5A6DFD51F6B50478576812C4E285766C06EA8
68F915E051139ECFE22AC9B8466B03B882A85B58BA201F11BE07DA0E6C440D1A
D07D3EF726A95242DEDA2CFC1099B1C95A296106DE15CF1B4D71A32E0D39F127
85547266190E57ED06C2CC580967BCF8DC61960C845C5A2B81ECB5A523CB2915
A925B1655FC0F5EFF517E8BE682D617EE310A79C945126847769D6DE3512F118
F21548D17AC5E87463E58BC4780AF14EBBF4130F84257F52C766EA1C1B863CD2
256C232F8973C6C0078D8A10D61824D760F2B86372EC36424D8A7581AB3E7A41
3533A897C24862EF358A371966561054F7CFB59868D89DF2AF345352B2F6616F
F952D6E261876517087EA8DB8EC47EA8B27BD2869D5977092D36464B311D1D46
44566898041893C018830210DE9C0E713F556814E0D2A550E4276654D6455255
591314013EAB71546CB4955525DE50E5915586FB95D870DDB64E5040A934F889
6AA6037285E98C206696D80FBDE4CD2AFFD771669899CF3A25AA7F46BEE9FB53
F7A655C00A329D0E12C610231D44E7297DC7830452FF2CDDEAC694D01BDE9A24
0827A754C1B093AC3755AC19CE126E38AC83ACF355B3085EFEED194CA367F5B8
34AC8A8EB5ED94E13FC8ADE81B9FDA8FD87341F337F1AE2B5EDFD9F8687804DE
75BD367F7A97899507311E19CE476848430A7AA10A1985C1CEC629061108846D
9DCDEF5C2FAD3C96210E0C1363B06EB5706984BE2DACA920F7105051EDA6A30B
389CC8F56C9AA32B23859A4CDFB5806F57C898C6541F5700BC9454A04D9C13FF
749E4B2BC73988213FB8A554554D7FED8A01C15C8643E8F49238460098CB94FA
CB2E623D92448C962990460B585EF86C716946E386CC0BA989278159BAE13060
1DB705389BDB394D642FAB72B60D777ABFF0726D59E9BEAF1B61A799E9EB3961
3CD17A67B921A3F562FF997D7F9072D8BFDFF678546D759AF7ABE82B2FCCA1B2
61B7C78BAC360D8EDF52893459552117A6C8566537D56E77F1D59A99A56DE94A
B1F53B7D1E3EC4089EBDE402985DD87CCD7A80408BC6C9832E2DF4F188362A08
EDCD4E6CDA8C5164C44658E6CD01B59C73A1FCEF7BCE4D33EBBD2DDD19E53AC4
DC7AB5AE81BC8149F37606DA710885C3BE4477A9B77E37E2E2C806028A7BE240
CFC1CF1DF64833FF9D5C66491A809A71CF982701B7223B0F1E33349546230E50
C669B45E325A877BE5548D16C5C9D2539D5AAB8F6D4008B96A0DB74A533CF133
F2E351C101B77DF3281BF51F7491F45BB8124FD7B3F04E8271EF78AFBF446880
B2F09F8366F75537AB423C1F06286AB31D8AE54C6A0EC38918ED7FFB3FE6A396
3C55F742AFEF3CE43E69A184D5E0C94132121E3D1BE526C2338121FA47DD48F7
AD7DF95B6C60028F84A476D3FA5AAE8155C04BE6BC85FFD7FB192AB7D7ACA295
B27611254955EB880E98C302D51F4FD65AF08293118DD48F760128112DFC1110
AAEEB8DBC3206BDB81327D91006FD070247CE9FC7FAD28E0B1401A71C78D2207
2D1D0120F5F12B8FB8AD9421173210852F4B085D0949CCF9D4B465A2D4F1569F
20CD6A1CEC39E69A2E83824A18D289BDB5A6AD515D360007F878B7A513E7EBD8
5B2C3AFCF0DF8BF1664BE26112770A5AB9D1C45CE346FB91DC0627A81B88725D
463BEB826921B4D8A0E03DB99A93D7145B2550995927440C1DECB228F4A8316B
5B75FD93D7A8573995F4EBD36DE59D79E19D8DB14119C617D0A18D7276F3DC93
606D3E41B879E1584CBD09C3C866323503621A3DB72E1F9CE946B55A04D56FBB
AC09F941263A36F485CBBC8E9D15155263CDC0E7099A38ECFDA27F98E548A262
21D6966B05E9CFF6221A36136FAD1810510F721CD7DB8FB319BA1902006D1499
857AF68316B9FEE8F13A028A84D078659B374C339583890DD656A85212A24E03
8D8EDDB5BA09FEB1CEF2768CDC747369F15BB540248FE7ED7127DC903D69B10C
29229E5896EEB87D784F9BB740B9FD92B00B047611FE895A18C1B5AC4C56ECA7
3C53B20F9A042AD64B9D78F54ED58AF3455901BFC3666B0EF3C0A60842E9E515
49007981F9AE699B1E76AC52607BF1A289CC2FA1FF8F4FA46BB3BD3391734CDC
A67787318EC598864DC45D96B67CB1D7187F2E22B5BDE4969CDFE14D64893669
7482496DEF72BF9E55E45A670156F9464112AC59D3C84ADB36B4428EED8A4D01
A3A7BE838B975CF54E4F349FAD45B099E256C03E4AEAEB295D6B9ABB9045CB7E
2FABD33A8C692C21C009B394498492E0FDC2ABD2254F540F1BD0515FDF99FA24
59EEBD10DB3848A0E98E9530BAC79A7151A26E13A4043979236EB722C285AED1
B8CF3238768F2C8451CC775238CCEB7A9768279D83478313809B2F5B4518141B
F0D06A8F6D5127964EA89AB98A9278FDAD5F5D2A94E566F4DAAD2D1F8CA4B32E
806FAA11BF0D1AF483153341BC606532645E83354C8CB6C0FD9B67072301C4DD
E5DBC7CA5FF8A5A9362E8EDD114145CBACEEEF458D32D85183EF4DDE6E49A270
43FD36B9E36A89586CE50FC956A86F50995A79C72C66891E19B00CF373AB7FC1
B1A41F0A15A19146E5D427AD08007524827B208EEAC099F02BC24F30D0E1824F
AADF070745A4FA25CDFF88C812F71A991BF04018FA1A01E20D1D977FF6C1A106
2E1A1FDE1559CFB37015DD3141C1CC7B5672C854A29440E8F5EA8C43037EABCC
295CD5FB76BC470E7B4FF0019B5BB6A0F767C0931D37D8717FB4F59C60457ECF
22B1AFB066274780E2937A69625D22639E577EC1F9786E647F4E31ACEA9CF1D5
A4B340C0A2CFA2B6718ADA1BD744450DB9E84037BA4B581A70EA9364ACA4A565
4F3C45C7F16B105D47E776C467927EF40E96549F20EDE4F141CFDC057FF1D26E
88BF72C17DA6F6A167C303A35E015A8CC3E078F7DE7622CEBF69E1365C513BE4
6E412B2ED4423EDA32801DB6C1E54C0EA2E19485717B26D6597CBA7E93C23771
323CFC12D3BDAF7171A4E0ADC479513C3257461ACF4AD919B9A7EB74DFF52517
5CD7E4922E00C3EE943A43B28E9516F2B6504BDD2ECCDA46B7EA733EE0C930B8
4D2620AE4194F920986C6C55E31F317D61DDEDEAE3543D1505923AE7C7286E14
038CD51AFE6F7C4831AF66F513D2166A44C2801E9F1623E5C4120651E7359783
F10CB658D0BB4FF695DE603ACC3ABB2F3AA06542A550D20F91C5589DF1A1B0BE
1613B9EF1DA7C12158F0212BB1A6CAB8C374C588F9DDCE6CDA768C1259C86D98
CC850B8B841C72712D3165C4DB4616AAFB6035EC9C03F19BED5D70A3CA35F49D
FE26B4E5098265FFC7D879DEB3419192688EF20A17C5A5C3B2B815879DB1CF44
26A7E3D696B97D6C8DBC315FC6166B5C69E9D61023D53B092E159C188513E641
2AD80CB12EFFE515315746811968340E79B12E5C6CA537B7A7937460258E6665
947091F3A5BF98DA35D0D57063E1BCE717D1405C97A568A965E470DCE713F557
B4BBB3B5C1D43F4AC5E04E9E0F2C272DD155EA4D923A2FEB88DA6C676FDB7613
FD9652A62A5532A59280CFB5E80B99A95461188CBA91BCC394FFEE5B7FB9F34A
31BDE1C846A4802AB4A6A6521B33A6C36DEE7CF9A8A56BC45804F4ABBEBD95DE
37E404A80DCED1C151C533664B2F3236BDB4768A80C46CBE588880965DABBFEF
446E9B3A4E694D8ED63A339EEB72E567DFFE86B1D72A1FBFBB84ADA3D433AF1F
B35E1E150DF490B70CC481F50BA09FE6360F1C6833DA027112597B3EAB929BA2
49B503292229A0DC6ADA7ECFB0286D61EC7A019D03EB5818346E4AF544F49EF8
04DE89F259D41F548AD602AC128FA8461AD0D85D55418274AB9EF45D1367D0F1
CF07A831FAFDBD4662DE3DDF0ADB4B0A119E5ACD18F968680030723B4F550228
7264824F2FECD43CE990A31CC4F2A09929097C0D502C678E68571373038FF53D
ECDF9007B531FAAEE3EB9CE1D5BCCB68B81D50C9DF1CE3AD307D2BD1D7043E35
DEE8A774A057855E1F3B475139004D1A23A77D3C5F7AEC83D43760C9EE923D03
A1EC433023F0F06DCBDC0C53BD293EEE56E116199BCA0D09C6797D0C3389616C
207360AC7971CF8707A3905536F1D93EC724072715C20FA5F437D0E91DB454E9
35ED9CF28A87C200E40F9A5CBE1A28858B4E80A88CE53682A9919BF64A583C5F
481A5BE131E805EE947EA8EB1358044F367F643652DAEB5B74AE1E77BBEA0DDE
6998659E429D3EB6C865DE770BE2DE3929B4AB4FDE1583BF732AA6DF935D6679
26C8ECE9F0A17E9FA3A4BE4AFBA76B5227B4003947DA6784FCAE91664AFF4D90
53A3C9DF3E3042E653362BDA82C4109E89E7770F2D5CF550CDA9FB5604340B4A
473179D93A4DEA322415B3A7D6779F08B8230D61911BF4A1240EA694C11EE8CE
067834DD6601CC43875E605B7E8D8D0141B9A5FC65FB1B35EFAA24D56F6D84DC
8C614CA1B980DEB172C5586CD2C3AFFAC4ADAE49FFB790D8931221320A4136D8
B7357AB1D3306E9B3DB073D3457970BB54BF0A40D3BCDC9C49417912A0CD7421
5270DED771551272EAA92A0E8469939C2A07B753E4543461972530842E5714B4
AD0BE9A75162718E4E88BBAFC393C28739CDA33FB4322F8F19355639349839E2
EC183105F945DF73D0B91BC41DE103B1CCFD5FBE3B5A2007B153CAABE312CB05
4E84BD34E05C76C5DDCBCBE5CEC64617D9B7435EC9945E9144FF70CB60D218A8
996ECDDCD8CEFB70731E3188B5F89761CB38E5970C2D9A8F5A66B24BEB065D30
A883FD1439F75F8D67CC826089FF5B45EA2EC4725945F25B544DAFE73FA66565
148F3FC891B23060C548B884D351BF9070BC1C294621401383A0A5A59741A5A0
6F8ED3D72AABC78A0044B5E79953EA3E8575F7AE9B7AC774D846BC25120B0A9C
3AD2208DD0944C666D463BB0E870426AFB1EE2A9FF46B5AB66636AFE5DCDB0CB
35F538D951C8EAE5A8055FF13DB25A500F13EFC537F50C7E827C7499747B8BF1
CAB1971C3B71C2CE15DF8B4AFAB760215F76CAAACA7A6B1AF1053CFB253C24C6
5BF58D17C1C255969910CE83CAA0DE3F6979636AFC6231AEAFD65E213A3A0B29
E1993C86A3F0605DB9B3BED25A268349EB53DA9E8A83D08F6457EDF17180D179
0E1AB202339DDB88FD08460D8E3BC59B1FA035AE8EEEA3F1C5D4BA500F300767
1B3EC4CE2CF5794677AC89293E22C326150BE156663F97F04A23565C337497DC
189EF848DC39BD9967B83E3D458D46A82AF91F44923FD909BBE4FF072077BF22
A172F9259C6F0E198C55A5B96AE0097865C4625F2DD31BBAFCBA1DD7295EE8EF
2E1937937AE79B57ECF943304397D50B2784E7A5C3427741213158F3CEC274C4
C0AC372B1EF450AB80846506306B583D708D5658BEEEDFDA556FD88A0FF58100
6274
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/UniqueID 5020902 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748076
52C3A3CCE44DFD38C1A870AF15D782F5C403C5A9A475217E3BE7967360F89551
3FBF9B83D58D8413A45EB18DF19455770726B7082E4C33F9449E6DD6F89FF265
2453807A286AFE8DA4988BEDFED0C357A977805FA702F68652A4BAE9F609047D
B5ABF832032CA1F96E550903DF9B8190F9FFFA8AD1D68385057BF5B7592F73D7
024231193023D02D89731376114C1C0300300B9EF15A312AFFAE9B89C5965996
5C1144C7F8E92600D0BAA927ABC183A538251EE2CF46FEC77739437A52505EB6
45502B99547E91C25D86F0C590D7FB9E51E09C85C5BCDE30D15CD9A0DC335FC4
B589DB92B21ABD5F4A1828236BBC63F11D5FCE4783729578878D2C9CC4DECF24
6DFCBBD6E44045F23AF2CC8C8B621E9E3271620735C9C7C11C2166CC9CC6ED53
5A8E49C834D9A67B584D1FAC4714260B22178E58171EAE1348D1FD7F86AF5DBE
94FB5A2083BF5C7671606BF4B02AE069BDB00369B9B9089CCCF80F6FB7A324C5
A752A3774143475E1714EDBEE8E521D9FAA2FB7184AE70700BE94273DC383C3E
0FCD9102FD16EB35481E0B0B753DEF0357913C83BA2B0CB0657399EF0A213CF7
42E22C285B8940F89B5C7F37EC30C88DB6EA541956B904DB911D009F0B209BFD
C2EDA5F6A8082C5D91442EA1B50E761A116748EF16F2BE0F6DB2B3EB237E10EC
66A1EEC27C5849208FDC43C98E4D8D6BD45E1B9454F9B1AB0D125837CA28BAF2
3894EA151A6F8272286331698B32CA773AD5820F7347C7B23BE10FBBD2D5498C
4A68B73340A257BCA013A9BAF2BC881602C2505F744778396CEFA60BC49B57A9
AD5DB0459BC92DAEC28588C182302F21D0B09563510C9D222D6EC6A12D550ADE
A92F9C52980F86A82DC5C6C33CCB472AB1E6FB87210269E40D365040B9659A37
83520F22DB201A6131D13D6BBD73AD0E3ED5F7E7086C597E6814C795B0C74ABD
18A03458A477707F143A46E4B31B755D8BC35C7F5A2C3BD9D2E42194A4902A0A
8B6B3199D91C065EDB18B84E0C7AB5154A2FF155757868EF371BF4BF97B23D6E
7AC76CEAA06FEE972B78AC075ABEF2088109E69564E8B2BA34D910F4988ADC8E
402F8A7548AB91C19BC05CCF78C7CD504D94ACDAD57B7D9938D25405D1566F2A
2BFBB0B91834B01F8890C5E4C899DBA9E9D86502CCC5A3AC48F66B134529D969
3540AB8BC393521EC9A73FD1E6619B3AF0FA91FB32FF0706C80B6811ECDAAB16
975D98DBBBF1BD0F929C71E5E5B43E92840BD29870276B292A4BDB6AC8046437
DAF0B4884CBE210292FFF2EFE0E796B4CA065001A8E03F79D062F7E9D3D23C8D
0B7E061C55129BF62A7668C14A84F8E1297A7043C868ABEC83B315795037F147
ACA224263E47DFA1B77355C95AD47D4FF64CA833EDFCFEDE6DFADA377D84F772
FDA8F61DE8919B9F5A5B55BB47299EA698C1F93228EFAD74A27A94BE7CE34AB8
09E7E4461907C8EF7DCDFF6650F77604ADE5A1743ECD451F0E78ADA05FC73D5D
92293BF29C73EB3A28617B0A4AEC1DDDBC2AAA1BFAC5D7C2CA79E289F6CED4F2
956073574A45148B7C666524A365D9A5443B5DA5ADDEEB1CDC7A9B117EB4B718
B71119F3840568E060AD7BF22132E956AF6047A4205B7D4BA1F36428B20EA9D9
4D420E8CD0F60D2894A4BEA7FA46C14DB12BD7B7D0C8207A291FE4C18F6335FB
A135BEC329365631C73E02B5065DDE064D64B07C5041BDB97BAB801D2F7F9A4A
5F752E9A7CE92289F1D8DB442575753A68DC62693EDC9C5A4FA4A71EA0848A93
64BA6446D5BD972F156ECC4E82D4CF8E6F87B2A2DAFC69673E1FBBBEAAE4015F
53DD5994514C074D8D84A638CDAC65942EE3504C2A06911A7FB36E5EB80D09C7
48FC43A09AE6520D29410CA46516D6C3366FEB901D3FE44C2EDCC228B99DBBC3
4829E8DDE124CEE487B35B9ECE9CCB1C30149894C7AC757D835BA3CD63BF4134
66B9801CF2338686071FE0474E58668AF1C8E93B0E2BACD65BA437A3141F8149
B4BE0D5852EEF87F6DBC8D2A44262E4E7BBC6CED991E074413FEFA33E565E4E9
25437620093895B9C80F08F9300BF052FBEBEA9B143DE7CEABE545DC3536E5E8
22944CECCC2FCA6072221C8FA7AF083FFC608046AC997CB782DF71EFDF2747DF
402DC4E10F8839B562BCB99720961AC37257BF05C01A6702DC08874746A16022
7B028189F7E00F11A71AB39E90FD6A80491E6C19D9B3F0437BF55D4594E80B5C
09AA90B2563C89E622B2BCDD4A811B7F5D5E592976481CEE7086196FE03D32C6
116E695F8318FC09D8126240F81B33A9A9A2ABDE408908898EC3C56997BA9607
C77C9CE9CFF1D1975E74011753F214A340959DA54F2C42ED81FDFA367D0B8CF2
FD214180DD7E2E25CD2D15767216D01F7D0E601DFCA4FB22FAECBBD7148FE275
2B0C5421DA939AD684EDA387050E41FBE28490412DBA25DF0CD767421904D5B2
54B061D137BF28EDAA1C4BC5C47368A2EA5E4D1C2D3CC36732D1C49376ECBD02
CA682864FEA0A659BB70AE14B885AA27302A5D9C42B06125C8600D6EABE72871
F058C8DA7866B6F707A3F8958C72C8C3DD1B2F179D57133ACF0A62D952D23A46
2BE357D37B7317B1961A190F7DE1BB2AFD3158F9A7EAD081D49C63677AF34191
3D2F9F2E0B76926BEF0EE652C61396F68508319582C9938BC702381BE9EC21BF
1AF03E4E43847F429B385B53040CC4E5D486B3F43CD39FF554ECF81567151F6E
168DD6EC739D13DD552996D4F8EB633C09B3A8CBD67AE4A166BC1ED37804ED0A
FC8591595DB9170D4B4B5D97A9F50EEDD2B73243A231D29D677DB6C39B9D9CDE
8E3810B7D670FC3F63A1CE88C7A0CBCCEDAB380F23CD61B00CF1490231B33A0C
381F612A071D285B7F0E9AC4074079C45AA7EDF27B4DCC88851099081BFDC6BC
95671C4A240407311BFD0CC69A6B67703101388B9E80426C0EA9BA5D368284E2
F724C9BF74B62B01AD3E0F6D55572CDFC4918B853FC3F8C6A9A7E1727A8DFF9F
4EB15BD4AC51106AEBFFE09E67E2F73C5BA8904081FB57438DEBBC0C0F63BF18
ABA009F6E231AFAF4070AC8533F84BD4B2318E12AE56EAC725F5FDBA4280602F
410D01008E983C0CCB7AF57C82BFF4FD0B90217EB42ED0FDDBFDC142A640B431
E6D6BBB8DE81B8996957E06E593698D839296217B91E7C55B603E7C502EA5ADD
497CE702792366945917394F816308216338D8483A273738439ACDE2F9B74A48
F8FA5E44EB44EB8F6B9586E293199109001690F9AC6319B2DD241F30146304B8
531ABE134FC8A37B8C5F4665655728D7443042BEB4090CF8F8D02AC86CF2956B
B7904796106720DD61EE4FAA8D067451CEFECCE68921929EE106AD446A7EAFAE
21CB321497FC12A2190A8CF65684636D3B976985D71A6C33BD5F3F107AE731BC
026068092AB9A5CCCBEABAD682EED220BC4B3F561F034E62980F7925E4A16235
123C803D5A663EC8286C7E87AB719B13DA62180FFE007C1BE3389024B64F344E
5F41769C608803BFC7CB6176587C296B44E72D4973D3E9296DF7D2C0EE974679
BC0C7FC1996283DB74A3452E0BAA52AA59C10E4EEDBAA0595C6ECB6CD47A0331
5B62E02D9240AE3474D67F4D389A16001535F91F900AF0A969D2F8E0AEE5F3EC
BE0B9C3BC3F5410352CA3342C0717E5D742E8C938884B812A278FC8368C21E95
8ADB2959231B7F7A825824A70B6FF466AF935D6E9F36008E40CAF8802B21CFCD
F62C1E8FA87B5F05E31E1FA11E1CA94E4C540C922AA5E22BC1B3AEE76BEB3998
639911BBB792DC52FBC188D6A2D5AAE1CCA3348D970748C139543DB3EB97E34C
A2F4B8C6A0E04E5E51AC28C23694B6951FAAE8544299AD20CB64116ECFED5615
0D13EF4BB4762DFA4C5BB7BFC7A304E094AC302CF2A88A28BD7744195DCFBEEE
C22AB4227C1BD42213FED6066BF9C3CFB1CEB3878CD90ABC2F384288DFA28D05
C0D23AB7A281948EE40316EC9FE05F77FD84F481CCCD7899589D3A92D5EF2DB3
10FB5FCB16ACFBF6919DDA39F4473CDE4B27C0819DEFF6A7FD99CA806B411775
ACA3070736CC2F4F67FF0A2F3308C4F52A18F0AF65169336A57EC6D75451CB59
5A0FCF83D70C488D5C39267F360A278EA993E6065AAA5ED37E8E50BF42790D70
22D5AF69B9017D30F7247584044AF0991B6B4211725B28DE3A4947B2B18C9EDF
D3CC65C5020F8D59D771291F1BFF73E26F0272A194FE1BE899EA718266C823FD
316D6DABE11C71193A4437DF45DDED957E821534090FF213D6773E3274F87F2E
CC62FC4A0F16D99F149373020DC2FE6AF9062C2983E1EC99774D43DD1B5ADC57
A8D1170C2298072A1B553C6686C855212AC0513561CD0A6B2BE368054053B1EB
B892D9B4AC17268920D1A56FC650D53FF85E1808ED845CD4EE83DF3D2CB56AEC
C6D182B26B4D329CBBC37B6BEC68F1676586CAD735003C1155ABFB999865306F
DF2D596F7338D888911E0BD35A147C74884DDEF66A0F409B16D06A58A7B817B9
C49193CF65FAC5BDB0FBFFDD33C4D52B23CCC56EE8436CEFCEE9F7A28AA55CDF
B3C26BEEE7F09B4E45911AC51B6A65903FDFD960D381A236991AC9D8B1CF9ECA
34E9E5DF84E31F0C5BE796DBDECD58B665881E3E8DB99950652D87B5D257E7E8
F91D2E6DF8F36E7032429B99CCAC62B256C67505F876EC9D7344367129FC9FF8
8D3E1C795CE6A2F56976A1F9AAE905AC65E905AB87CE84BAA42A7FCF282D0E71
E7F39C37E23B12652CB6A102DE98E4FAB76E9030D0B1B1FF97AE48F7E094BD08
7F5ED39CA303AEE7B4953C818B8B0A3E6B49677741563627D3DAD0B1A01C9DA0
642FBEC9DF9FBA1AA5E60E9DA5DD62E858B49EC8100C9B4CA3413EC3416B4067
62A4792557873F98F86A16600326B18945EC8D23F231FA162878B57E72A153CD
9F1A5D301E853064D68601335CC1D02AE74EA3CE629C8F64936DBB5F01939E0C
2F0D3A0E792CC29E39BBF524E3EA19432CDD944CC2C9DCFD393CFBB8555A1ECE
BA93C9D131C65AF852EA6513FA18AA155CDB62A581D9730514EB7F921BA7CF35
0AE0D239DFB833D390E2C6D5500AB7EC05E72017EC6851C40281434A5F234E77
504F9EBBF4C80D17743B42059C04E4B8749584BC92BB66E9003CD4DD3357105C
C09F1BA7AAB9B84B81E514036AB1310E5EF8253ACB0B47CA609D19879D379691
C155725AA44801E9865FE5A0E684FD46B569DFCC54FE8AD4EACE2073DD40FBB5
51A4F4623622197305C40440F9EB7756C7BC15108791E64CDFC713D51E4E8868
BBA888FC0DD684C908A887E39D01A01F3D758DFF735F5CECDF6DD662B4DF8916
F66CC1DC294D799A95EECE910D42156ABBF62A015163D78966A71701407ECA8A
DB4834180C2A0E68BD4440BA6B6C8851DBAB2A532E99244DA4451C1C5D729575
423446CB09CA13FD13C3D81D110EB6157BA608ECB282732D35A193292DF1A01B
E9D8AAEB2B7762F9CF0252B6FC1492C8B7E49B91CDA77CDC3492383235D07185
039A3C21C205BCDD01B97B26F15B05A7CF864668D087D1807B59D336E85E8E5E
FD83009A940013A03F273BADAAA5DA40879CF793C3934A4E7F598AE5BAF6BCD8
A06DFD488EBCF2A58E9912B32A1F3D111AA82400C52E27D7AAD4E56A0B79A37F
940105CD827B62615049AD093D0462CDEFFAD5BB53E99E2FE952C2EE4918C22B
25693557139FF00F6E656B0B3E43BBE6F8941E7BF885DF3489054B41CB876A95
E569E8799311A813552664BFB428A39ABEF61627C6A4027F766E587D62193075
B9FC6CB7F37FC1416D7BE463EC93FC67B2219057A317FB7B5A641CB43DE99B75
692881CA864CE4EDD87D41F783258FC052BC5F7FEF0DE773027AFECCF93B4EE5
D7017E10895E81B751622B96F7D459FA3C92EFF7157FA9BC8FFF67FD6D00D0A8
6DF4A48F81149C6B293837F3FF601FCAC1FB03D211CB45B64FDEB5E4DEB77425
651927409DF39777B6BE583E637121010308CA220A3F6DAEE6F51A1482BB72DC
00A1BD8D5FB517734DEA7D7F7DE8F90145BE04AF2C453354B030D76693979CEE
8C8ABA918B16719F508B76CAC840E2E4F6A0EAF6B07A751ADAB284F7525860D7
1CB4F14D3699BFB50E1FCC50C407BFA015A14DFFFA89FC043ABBF6966C85BA72
2633C5E068680083BCCD86EFCC0C345DE9FD690C08A3938B570857D076969F45
8D231A70267112CEA0DB3691EDF835B86E9A9FD98A562E8C34DE0F70495FF39D
1077D190516B67EF5493B7C7001686AEB2643F84ABBD62D1022D1FE91E602413
90B5C31B06AD3327B9704BBD41878C2ED6FBA4EA9D862F5A28A0E1551D8D3FDA
1FAE14C1CC346928F1BF146009B4E346F0465BD735DED8D46E7F4FC67C826807
D77277BFCFFD5A3E704172C6EBCAD7A00171C19014745F6BA833FB11A7955600
13F5A0F20FEA87CCB8207AE40A76C9C80AC9E56D478F7960A94C29E18BBD9C3B
B74CF3DD6EFC594F6D5D5713C2BEA2C2FCF2D033FE21DAC0EDD13F7BF48CD8FD
86C149325A601C71BA0750EE8530C6DD0D788F9FEE307B05DF4A8BA75EC13A12
1EBAD25BA7FA2C5E2DD3D7EEE3C0B6983C922B3797F595021A0604930C369E0C
70712F5B1699E235E696715A49BF9E202BB4907D0985A1A02FC7E29605E9C422
E041345457783B913D4FA9EF65BA1475EA2F0E9AA6ACC646B68343E8B65265E2
24B6B3ACBE621EE6DCD97863D2F5C650BC4F81E2EABF5EE3325F0C7992D8BAA6
C7A3F86241907F63024EBDCA2BF131D53A625E745DBDEC76797E913122F4AF28
D0BA59B24F96CB6F147118072845A69BE14F0C68523E3DCC19E3A12DEEE53010
6B34419384925336F228CA3AA563C9CBD3CA5624A095E32C109081865FC34EF1
CDEB7B3167D05430045DDFCC527F7C48EB8012AF11D33657B6F6DC051BBF4EF4
CD046CCC0301F3D7A4318299CC8363C5CCC9428C574EA552877837249AB0DCB4
96F8C20EE9FF97C2CBDC6A3BE1AF05FAE8F5F786C3631BCE25D23E8326A7263A
A74B8366CAFF593A72D60A6568EBC1B456F288352C2E75C10E62CD2DEDDBA1E2
1FA6F3E4448622EAC7D2A7A6333B9213327F21DA144BB2305E7E36DE3178B699
A3B19AEEEAF3E6547042633EC23B6ECFC14D95BBA928C9C0C1B731030B89EF86
C8B2E3803714B92A9CCBABD575FB353E3EE14551CD53328BF0ACB9507B7ACA57
80E9564B7A5613CDF8721598CE8EF8650944423B07805E331832E4399839A7B0
6CA0E7E7D6F2240BFA59CD82C958AA349672C46555018BCB4A6918120D614D48
AF98C455E11779E9C982E3538618218D9E33A526CA3854E575BDD5FFDE920D42
C73C9246BEADD49147842D0447482FCA265C31E56F127D1EF6F8EA79EA4C0E25
0B22D9046A03CE034DCADC3E3951488587B8654688178E4CA8C2B12AF0E6BA1D
1EE8938F5215DA075AE490E9D23D39084D164EAA8E69BBDB908FE61BAD2FBCAE
19CF4251E508DA33DF6A170A937890DF9BF60C393487CC896AD7361CB2552096
0B0D6597B29D5A6A6636D3B4BD7783F5D658FB0B78F22B43CAB1A6DB76A572C8
D740BDA912808FD867BAB8AACE50A9A1C76AC30A121ECAA4252BCAE1F67437F8
B622692010C0CADAD91AB6077201010DB6553E9439C104881435921D9FB6ACD0
DFC88296EB884EAEEBEDAA8FF1EC23C86896F62B56C278E5D31BAAE9DA83FC31
5F0B828DF19199584FA2DABD20C1BD158C34108C19484F42B7688E4CD92AF768
1E0A3DEFED7E2C1D3AC3893230903459BE0E2453890BC53DB9708F8F961C6D15
A40A58B5025854267AA514D7FB8C4682C9EF1EC4D81203C8F01438BE691097B6
B84666CF3F567706C98DE6C277B2BBF9CA7101959F826306970BC76EDB3FFBCB
12F62E286FA766A846426ADCB5BBA642152B70DC7E4C275DC19977C45D23D971
D32F2EC6F0FFF132352E0F3F1F0AFA649AEDC7B13CE9CD07292F03BD2C733ECA
F8D7DBDCE2442F68DA6DC46DC718C681E0834BA247BEE1F6C9307882D9CF6A1B
1069B821CE7BC1662D9F17D40423BAA531502CD09B5B287F788BBEF1719E9AFE
1863A0743647C711527B57C286B971A857D442F748A9F0F260C04367F1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600
(38_Fall_Progress_Report.dvi)
@start /Fa 133[30 33 33 48 1[37 22 26 26 1[33 30 37 52
19 2[19 33 33 19 26 33 27 31 30 10[48 1[41 3[41 52 1[63
37 2[22 2[37 41 52 44 41 48 8[33 1[33 2[33 1[33 2[17
22 5[19 39[{ TeXBase1Encoding ReEncodeFont }42 66.6667
/URWPalladioL-Ital rf /Fb 105[33 1[33 33 25[37 1[56 38
40 22 28 26 37 40 36 39 59 19 37 1[19 39 37 22 32 41
30 37 33 3[22 1[22 1[44 1[67 48 1[41 35 45 1[40 52 55
63 41 48 22 22 55 51 37 41 52 47 41 52 6[17 33 33 33
33 33 33 33 33 33 33 40 17 22 17 44[{ TeXBase1Encoding ReEncodeFont }65
66.6667 /URWPalladioL-Roma rf /Fc 133[40 40 40 57 40
44 22 40 26 1[44 44 44 66 18 40 1[18 44 44 22 44 44 40
44 44 9[75 2[48 53 57 62 53 62 57 66 44 2[22 57 1[48
53 57 57 53 53 6[22 1[44 1[44 44 44 44 44 44 2[22 26
22 44[{ TeXBase1Encoding ReEncodeFont }53 79.1666 /NimbusSanL-ReguItal
rf /Fd 134[44 1[62 44 48 1[44 31 1[48 48 48 1[22 44 1[22
48 48 26 44 48 44 1[44 9[75 4[57 1[53 8[62 3[57 57 13[44
44 44 44 2[22 46[{ TeXBase1Encoding ReEncodeFont }30
79.1666 /NimbusSanL-Bold rf /Fe 105[40 1[40 25[40 44
41 66 45 48 26 34 31 44 48 43 46 70 23 44 19 23 46 44
26 38 48 35 44 40 9[79 1[62 49 42 53 62 48 62 66 75 48
1[26 27 66 60 44 48 61 56 48 62 5[20 20 40 40 40 40 40
40 40 40 40 40 48 20 26 20 2[26 26 22 62 34[48 48 2[{
 TeXBase1Encoding ReEncodeFont }71 79.1666 /URWPalladioL-Roma
rf /Ff 139[26 35 31 1[48 44 48 70 26 48 26 26 2[31 40
1[35 1[40 9[79 2[53 1[57 1[48 9[44 1[66 17[40 40 49[{
 TeXBase1Encoding ReEncodeFont }23 79.1666 /URWPalladioL-Bold
rf /Fg 168[87 2[56 1[66 1[61 9[56 1[66 66 16[51 51 49[{
 TeXBase1Encoding ReEncodeFont }9 91.6666 /NimbusSanL-Bold
rf /Fh 171[45 49 53 1[49 57 53 61 45 53 41 20 2[45 49
1[53 1[53 65[{ TeXBase1Encoding ReEncodeFont }15 73.3333
/NimbusSanL-Bold rf /Fi 199[32 32 32 32 32 32 32 32 49[{
 TeXBase1Encoding ReEncodeFont }8 58.3333 /NimbusSanL-Regu
rf /Fj 133[33 33 1[48 33 37 19 33 22 1[37 37 37 56 15
33 15 15 37 37 19 37 37 33 37 37 12[41 3[44 52 5[19 48
1[41 1[48 1[44 19[19 1[19 41[33 2[{ TeXBase1Encoding ReEncodeFont }35
66.6667 /NimbusSanL-Regu rf /Fk 139[22 37 26 14[37 41
37 31[48 65[{ TeXBase1Encoding ReEncodeFont }7 66.6667
/NimbusSanL-Bold rf /Fl 138[23 14 1[16 3[23 4[12 1[21
1[16 3[18 13[23 14[32 68[{ TeXBase1Encoding ReEncodeFont }10
41.6666 /URWPalladioL-Ital rf /Fm 168[117 2[72 61 4[97
3[39 39 5[83 1[91 65[{ TeXBase1Encoding ReEncodeFont }8
116.667 /URWPalladioL-Roma rf /Fn 166[62 2[67 1[57 49
62 2[73 78 88 57 68 1[31 78 71 1[57 72 66 1[73 65[{
 TeXBase1Encoding ReEncodeFont }17 93.3332 /URWPalladioL-Roma
rf /Fo 175[121 7[166 153 5[156 8[100 4[100 51[{
 TeXBase1Encoding ReEncodeFont }6 200 /URWPalladioL-Roma
rf /Fp 167[107 160 1[124 98 1[107 1[97 126 2[98 116 5[98
124 113 1[124 65[{ TeXBase1Encoding ReEncodeFont }13
160 /URWPalladioL-Roma rf /Fq 172[122 9[78 167 1[111
1[167 68[{ TeXBase1Encoding ReEncodeFont }5 200 /URWPalladioL-Bold
rf /Fr 170[124 107 1[116 1[98 133 133 160 98 2[62 1[133
89 98 1[116 1[124 65[{ TeXBase1Encoding ReEncodeFont }14
160 /URWPalladioL-Bold rf /Fs 175[60 11[77 11[50 4[50
50 50 50 3[25 44[{ TeXBase1Encoding ReEncodeFont }8 100
/URWPalladioL-Roma rf /Ft 166[53 6[53 1[48 63 1[76 6[44
49 62 57 49 62 65[{ TeXBase1Encoding ReEncodeFont }11
79.9999 /URWPalladioL-Roma rf /Fu 170[130 1[87 2[101
9[93 2[118 10[83 5[83 83 83 48[{ TeXBase1Encoding ReEncodeFont }9
166.667 /URWPalladioL-Roma rf /Fv 171[82 70 89 1[81 105
111 1[81 1[44 4[81 103 95 1[104 65[{ TeXBase1Encoding ReEncodeFont }12
133.333 /URWPalladioL-Roma rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -31 705 a @beginspecial 0 @llx
0 @lly 345 @urx 435 @ury 1133 @rhi @setspecial
%%BeginDocument: coe_v_spot1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: coe_v_spot.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Heather Miller
%%CreationDate: 6/19/12
%%BoundingBox: 0 0 345 435
%%HiResBoundingBox: 0 0 344.3750 434.2715
%%CropBox: 0 0 344.3750 434.2715
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 104 128 8
%%BeginData: 19340 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFFCFC3C2FD04BBBAC1C1C9CAFD16FFCAC2C2BBC1BBC1C1C2C3
%FD3AFFC9C298BB98BB98BB98BB98BB98BB99C9FD12FFC2C198BB92BB98BB
%98BB98BB98C2C9FD0AFFCFCACACACFCACACACFCACACAFD07FFCACFCACACA
%CFCACACACFCAFD0EFFC1BBBBBBBABBBBBBBABBBBBBBABBBBBB98C2CAFD0E
%FFC9BBBB98BBBBBBBABBBBBBBABBBBBB98BBC2FD09FFFD04BBBABBBBBBBA
%BBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD0BFFCA98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92BBC9FD09FFCFFFCAC192BB98BB98BB98BB98BB
%98BB98BB98BB98BB98C9FD07FFC192BB98BB92BB98BB92BBC2FD07FF99BB
%92BB98BB92BB98BB92C2FD0AFFCFBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC1BBBBC9FD09FFCFC1BABBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBAC1
%BBBBBAC9FD06FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBB
%BABBC2FD09FFCA98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BBC9FD07FFCAC198BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%C9FD05FFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92
%C8FD09FFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBC1
%CFFD06FFC298BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBA
%FD05FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2
%FD08FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB92
%C2FD05FFCA92BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB9FFD04FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB
%92C2FD07FFCFC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBBFD05FFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBABBBBBBBAC1BBBBBA
%C1BBBBBABBCAFFFFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBBBAC1BB
%BBBAC1BBBBC2FD07FFC992BB98BB98BB98BB98BB98BB98C2BBBB92BB98BB
%98BB98BB98BB98BBC2FFFFFFC9BB98BB98BB98BB98BB98BB92BBBBC198BB
%98BB98BB98BB98BB98BB92C2FFFFFFC298BB98BB98BB98BB98BBC2FD07FF
%99BB98BB98BB98BB98BB98C2FD07FFC2BBBABBBBBBBABBBBBBBABBC1CFFF
%FFFFC298BBBBBBBABBBBBBBABBBBC2FFFFFFC998BBBBBBBABBBBBBBABBBB
%C1C9FFFFFFC2BBBBBBBABBBBBBBAFD04BBFFFFFFFD04BBBABBBBBBBABBBB
%C9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCAC198BB98BB98BB98BB98
%BB99FD06FFC292BB98BB98BB98BB98BB98CFFFFF99BB98BB98BB98BB98BB
%92BBCAFD05FF9FBB98BB98BB98BB98BB98BBC9FFFFC192BB98BB98BB98BB
%98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BB
%BBBACAFD06FFCABBBBBBBAC1BBBBBAC1BBBBCAFFFFC1BAC1BBBBBAC1BBBB
%BABBC2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFFFFFD04BBBAC1BBBBBABBBB
%C9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB98BB98
%BBCAFD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB98BB98
%CAFD07FFC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBC2
%FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBB
%CFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBABBBBBBC9
%FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB98C9FD07
%FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD
%07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB98C9FD07
%FFC192BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98BBA0FD07FF
%99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FF
%C1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD07FFFD
%04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD07FFC2BBBB
%BAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCAFD07FF99BB
%98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD07FFC192BB
%98BB98BB98BB98BBC3FFFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB
%98BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BB
%BBBABBBBBBBABBBBBBC9FFCFC198BBBBBBBABBBBBBBABBC9FD07FFBBBBBA
%BBBBBBBABBBBBB98C9FFFFFD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBB
%BABBBBBBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB
%98BB98BB98BB98C9FFFF99BB98BB98BB98BB98BB92C9FD07FFC198BB98BB
%98BB98BB98BBA0FFFFC192BB98BB98BB98BB98BBC2FD07FF99BB98BB98BB
%98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD06FFCFC1BBBBBAC1
%BBBBBAC1BBBBC9FFFFC1BAC1BBBBBAC1BBBBBABBC9FD07FFBBBBBABBBBBB
%BABBBBBBBAC9FFFFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BB
%BBBABBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98
%BB98BB98CAFFFFBBBB98BB98BB98BB98BB92C2FD07FFC2BBC199C1BBC199
%C1BBBBC9FFFFC192BB98BB98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98
%BB92C8FD06FFCFBABBBBBBBABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBB
%BBBABBC9FFFFC2BBBBBABBBBBBBAFD04BBFD15FFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFFA0BB98BB98BB98BB98BB
%98BBA0FD14FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98
%BB92C2FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBB
%BABBC9FFFFCFBBBBBAC1BBBBBAC1BBBBBAC1CAFD13FFC1BBBAC1BBBBBAC1
%BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB
%98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFFFFC198BB98BB98BB
%98BB98BB92C1CFFD12FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FFFFFFC2BBBBBBBABBBBBBBABBBBBB98C2FD12FFFD
%04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB
%98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFFFFCF
%98BB98BB98BB98BB98BB98BB92C2FD11FFC192BB98BB98BB98BB98BBC2FD
%07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACFFD
%06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD04FFC9BBBBBAC1BBBBBAC1BBBBBA
%BBBBC9FD10FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD05FFC198BB98BB98BB98BB98BB98BB98C9FD0FFFC192BB98BB98
%BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBA
%BBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD05FFCABBBBBBBA
%BBBBBBBABBBBBBBABBBBCFFD0EFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD06FFA7BB98BB98BB98BB98BB98BB98BB99
%FD0EFFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD07FFC9BBBAC1BBBBBAC1BBBBBAC1BBBBBBFD0DFFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD08FFC2BB98BB98BB98BB
%98BB98BB98BBA0FD0CFFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD09FFC1BBBABBBBBBBABBBBBBBABBBBBBC2FD0BFF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD0AFF
%99BB98BB98BB98BB98BB98BB98BBA1FD0AFFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD0BFFFD04BBBAC1BBBBBAC1BBBB
%BAC1CAFD09FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD0BFFCA98BB98BB98BB98BB98BB98BB92C1CAFD08FFC192BB98BB
%98BB98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBB
%BABBBBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD0CFFC998BBBB
%BBBABBBBBBBABBBBBB98C2FD08FFC1BBBABBBBBBBABBBBBB98C9FD07FFC2
%BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF
%99BB98BB98BB98BB98BB92CAFD0DFFC292BB98BB98BB98BB98BB98BB92C2
%FD07FFC192BB98BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2
%FD06FFCFFD04BBBAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9
%FD0EFFC2BBBBBAC1BBBBBAC1BBBBBABBBBC9FD06FFC1BBBAC1BBBBBAC1BB
%BBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98
%BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFD0FFFC198BB98BB98BB98
%BB98BB98BB98C9FD05FFC298BB98BB98BB98BB98BBC2FD07FF99BB98BB98
%BB98BB98BB98C2FD06FFCFBBBBBABBBBBBBABBBBBBBACFFD06FFCFC1BBBB
%BABBBBBBBABBBBBBC9FD0FFFCAC1BBBBBABBBBBBBABBBBBBBABBBBFD05FF
%FD04BBBABBBBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCA
%BB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FD10FF
%C9BB98BB98BB98BB98BB98BB98BBC2FD04FFC192BB98BB98BB98BB98BBC2
%FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBBBAC1BBBBBACF
%FD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FD11FFC9BBBAC1BBBBBAC1BBBBBA
%C1BBC1FD04FFFD04BBBAC1BBBBBABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBA
%BBC2FD06FFCABB98BB98BB98BB98BB98BBC9FD07FF98BB98BB98BB98BB98
%BB98CAFD12FFC2BB98BB98BB98BB98BB98BB98C9FFFFFFC192BB98BB98BB
%98BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABB
%BBBBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FD13FFC2BBBABBBBBB
%BABBBBBBBABBC2FFFFFFC1BBBABBBBBBBABBBBBB98C9FD07FFC2BBBBBABB
%BBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB92BBCAFD07FF99BB98BB
%98BB98BB98BB92CAFD14FF98BB98BB98BB98BB98BB92C1FFFFFFC192BB98
%BB98BB98BB98BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BB
%BAC1BBBBBABBBBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFFFC2C1C2C1C2
%C1C2C1C2C1C2C9FD06FFC9BAC1BBBBBAC1BBBBBABBBBFFFFFFC1BBBAC1BB
%BBBAC1BBBBBAC9FD07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98
%BB98BB98BB98BBCAFD07FF99BB98BB98BB98BB98BB98CAFFFF98BB98BB92
%BB98BB92BB92C9FD06FFC9BB98BB98BB98BB98BB98BBC9FFFFC298BB98BB
%98BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB98C2FD06FFCFBBBBBABB
%BBBBBABBBBBBBACFFD06FFCFC1BBBBBABBBBBBBABBBBBBC9FFCFC198BBBB
%BBBABBBBBBBABBC9FD07FFBBBBBABBBBBBBABBBBBB98CFFFFFFD04BBBABB
%BBBBBABBBBC9FD07FFC298BBBBBBBABBBBBBBABBC2FD06FFCABB98BB98BB
%98BB98BB98BBC9FD07FF98BB98BB98BB98BB98BB98C9FFFF99BB98BB98BB
%98BB98BB92C9FD06FFCABB98BB98BB98BB98BB98BBA1FFFFC192BB98BB98
%BB98BB98BBC2FD07FF99BB98BB98BB98BB98BB92C2FD07FFBBBBBAC1BBBB
%BAC1BBBBBACFFD06FFCFC1BBBBBAC1BBBBBAC1BBBBC9FFFFC1BAC1BBBBBA
%C1BBBBBABBC9FD07FFBBBBBAC1BBBBBAC1BBBBBAC9FFFFFD04BBBAC1BBBB
%BABBBBC9FD07FFC2BAC1BBBBBAC1BBBBBABBC2FD06FFCABB98BB98BB98BB
%98BB98BBC9FD07FF98BB98BB98BB98BB98BB98CAFFFFBBBB98BB98BB98BB
%98BB98C9FD06FFCAC198BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98
%BB98BBC2FD07FFC1BB98BB98BB98BB98BB92C8FD06FFCFBABBBBBBBABBBB
%BBBABBBBCFFD07FFC198BBBBBBBABBBBBBBABBC9FFCFC1BBBBBABBBBBBBA
%BBBBBBC9FD07FFFD04BBBABBBBBBBABBBBC9FFFFC1BBBABBBBBBBABBBBBB
%98C9FD07FFC2BBBBBABBBBBBBABBBBBBC2FD06FFCABB92BB98BB98BB98BB
%92BBCAFD07FF99BB98BB98BB98BB98BB92CAFFFF98BB98BB98BB98BB98BB
%98C9FD06FFCFBB92BB98BB98BB98BB98BBC3FFFFC192BB98BB98BB98BB98
%BBA0FD07FF99BB98BB98BB98BB98BB92C2FD06FFCFFD04BBBAC1BBBBBABB
%BBCFFD07FFC1BAC1BBBBBAC1BBBBBABBC9FFCFC1BBBBBAC1BBBBBAC1BBBB
%C9FD07FFFD04BBBAC1BBBBBAC1BBC9FFFFC1BBBAC1BBBBBAC1BBBBBAC9FD
%07FFC2BBBBBAC1BBBBBAC1BBBBC2FD06FFCABB98BB98BB98BB98BB98BBCA
%FD07FF98BB98BB98BB98BB98BB98CAFFFF99BB98BB98BB98BB98BB98C9FD
%07FFC198BB98BB98BB98BB98BBC3FFFFC198BB98BB98BB98BB98BBC2FD07
%FF99BB98BB98BB98BB98BB98C2FD07FFBBBBBABBBBBBBABBBBBB98C9FD06
%FFC9BBBBBBBABBBBBBBABBBBBBCAFFFFC198BBBBBBBABBBBBBBABBC2FD06
%FFCFBBBBBABBBBBBBABBBBBB98CAFFFFFD04BBBABBBBBBBABBBBC2FD07FF
%C198BBBBBBBABBBBBBBABBC9FD06FFCFC198BB98BB98BB98BB98BB99FD06
%FFC192BB98BB98BB98BB98BB99FFFFFF99BB98BB98BB98BB98BB92BBCAFD
%05FF99BB98BB98BB98BB98BB98BBC9FFFFC292BB98BB98BB98BB98BB98C9
%FD05FFC292BB98BB98BB98BB98BB92C9FD07FFC2BBBAC1BBBBBAC1BBBBBA
%BBBBCAFFFFCAC2BAC1BBBBBAC1BBBBBAC1BBC2FFFFFFC9BAC1BBBBBAC1BB
%BBBAC1BBC1C9FFFFFFC2BBBBBBBAC1BBBBBAC1BBBBBBFFFFFFC9BBBBBBBA
%C1BBBBBAC1BBBBBBC9FFFFCAC2BBBBBAC1BBBBBAC1BBBBBAC1CFFD07FFC9
%98BB98BB98BB98BB98BB98BB98BB99BB98BB98BB98BB98BB98BB98BBC2FF
%FFFFC9BB98BB98BB98BB98BB98BB98BB99C198BB98BB98BB98BB98BB98BB
%98C2FFFFFFCF98BB98BB98BB98BB98BB98BB92BBBBBB92BB98BB98BB98BB
%98BB98BB99FD09FFC1BBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBB
%BBBAFD04BBFD05FFC1BBBABBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBBBB
%BABBBBBB98BBCAFD04FFC298BBBBBBBABBBBBBBABBBBBB98BBBBBBBABBBB
%BBBABBBBBBBABBBBCAFD09FFA0BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB92C3FD05FFCA98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB9FFD05FFCABB92BB98BB98BB98BB98BB98BB98BB
%98BB98BB98BB98BB98BB92C2FD0BFFC1BBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1BBC2FD07FFC2BAC1BBBBBAC1BBBBBAC1BBBBBAC1BB
%BBBAC1BBBBBAC1BBBBBBFD07FFC2BBBBBBBAC1BBBBBAC1BBBBBAC1BBBBBA
%C1BBBBBAC1BBBBBAC1CAFD0CFFBBBB98BB98BB98BB98BB98BB98BB98BB98
%BB98BB98BB92BBCAFD08FFC192BB98BB98BB98BB98BB98BB98BB98BB98BB
%98BB98BB98CAFD08FF9FBB98BB98BB98BB98BB98BB98BB98BB98BB98BB98
%BB98BBC3FD0DFFCFBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB
%CAFD09FFCFC198BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBBBACAFD0A
%FFC1BBBBBBBABBBBBBBABBBBBBBABBBBBBBABBBBBB98BBC9FD0FFFCF99BB
%92BB98BB98BB98BB98BB98BB98BB98BB92C1CAFD09FFCFFFCAC292BB98BB
%98BB98BB98BB98BB98BB98BB92BB98CAFD0CFFA0BB92BB98BB98BB98BB98
%BB98BB98BB98BB92BBA1FD12FFC2C1BBBBBAC1BBBBBAC1BBBBBABBBBBBBA
%C9FD0FFFC9BBBBBABBBBBBBAC1BBBBBAC1BBBBBABBC2FD0FFFC9C1BABBBB
%BBBAC1BBBBBAC1BBBBBABBBBC2CAFD14FFCAC299BB92BB98BB98BB98BB92
%BBC2CFFD12FFC2BB98BB98BB98BB98BB92BB98C2C9FD12FFC999BB98BB92
%BB98BB92BB98BB99CAFD19FFC9C9C1C2BBC1BBC2C2C9CFFD16FFCAC2C2C1
%C1BBC2C1C2C9FD17FFC9C9C2C2BBC1BBC2C2C9CAFD42FFCFFD1FFFCAFDEA
%FFA8FD64FF7D52F827F8277DFD32FF7D2727F82752FFFFFFFD04A8FD0CFF
%FD04A8FD11FF7E27F8272727F8277DFD30FF7DF8272727F82727A8FFFF27
%2752FD0DFF272727FD10FFA827F827F8522727F827A8FD2EFFA8F827F852
%5227F8272EFFA827F852FD0CFFA827F852FD10FFA8F82721A8FFFF2727F8
%84FD2EFF5927217DFFFFA82752FFFFFF272752FD0DFF272728FD10FF7D27
%F827A8FFFF52F82752FF7D7DA8A85284FFA85252527DFD04FF595252A87D
%7D7DFFFFA85252527DA8FFA87D59A8FF7D527DA8FD04FF7DF82752FFFFFF
%A8FFFFA85227F8277DA8FFFF7D52525259FFFFA85227F8277DA8FFFF7D52
%527DA8FD07FF7DF82727FFFFFF2727F87DFF27F85227277DFF2727F82727
%7DFFFF5227F8272727F87DFFA8F8272727F852FFFFF827527DF8272752FD
%04FF7D27272752FD05FF5227F8FD0427FF2727F8FD0427FF5227F8FD0427
%FF5227F8272727A8FD06FF7D27F827A8FFFF52F82752FF2727F827F87D52
%27217D5227F8A8A827F8275227F82752FF2727F87D2727F87EA827F827F8
%27F827F8A8FD04FF2727F827F8527DFFFF7D2727F827277DFF52F8527D52
%F82752A82727F827277D7D27F8527D52F852FD06FF7D212727FFFFFF2727
%217DFF27212752FFA827F87DFFFF27277DA8F82752FF7D27217DA8272152
%FFFF272752FF2727F87DA852F8277DFD04FFA827272127F82752FFFFFF27
%2727FFFFFFA8A8FFFFA8272152FFFF272727FFFF7DF827A8FF7D2727FD06
%FF5227F827A8FFFF27F82752FF272721FFFFFFF82752FFA827F87D7D27F8
%7DFFA8F82752A8F82752FFA827F852A827F852FFFF5227F884FD06FF5227
%F827F82752FFA827F852FD05FFA85252F82728FFA827F852FFFF5227F8A8
%A853F827A8FD05FF7D272727FFFFFF2727277DFF4C2752FFFFA827F82727
%27F8277DA8F8277DFF7E27277DA827277DFFFF272752FF272727FFFF7DF8
%277DFD08FFA8FD0427A8FF27272EFFFFFFA8522727F8272752FFFF272727
%FFFF7DF8272727F82727FD06FF7D27F827A8FFFF28F82752FF272727FFFF
%FFF827277D527D52A97D27F87DFFA8F82753A8F82752FFA828F852A827F8
%52FFFF5227F8A8FD0AFF2727F8A8FF27F852FFFFFF28F8277DA8212752FF
%A827F852FFFF5227F87D527D527DA8FD05FFA8F82727FFFFFF2727F87DFF
%27F852FFFFA827217DFD05FF7D212752FFA827F87DA827F87DFFFF272752
%FFF82728FFFF7D21277DFD04FF7D27FD04FF52F827A8FF272727FFFFA821
%277DFFA827F852FFAF212727FFFF7D2127FD0BFFA827F82752A85227F827
%7DFF272727FFFFFFF82727A8FFFF7DFF7D27F852FF7DF82752FFF82728FF
%A827F852A827F852FFFF5227F87DFFFFFF59F82727A8A87DF827F8FFA827
%F8277DFF5327F87DFF7DF82727FFA827F8277DFF5227F87DFFFFA8A8FD07
%FF52272727F827272728FFFF27F852FFFFFF592727275227277DFF272721
%522727F87DFF52F8275252F8277DFFF82728FFFF7D27277DFFFFFF7D2727
%27F8272727F87DFFFFFD042752A8272721522727F827A8FFFD042752A827
%27F852522727FD08FF2827F827F82752FFFFFF202727FFFFFFA852F827F8
%27F87DFF53F827F827F82752FFA827F827F82752FFA827F852FFFF5227F8
%7DFD04FF7D27F827F827F852FFFFFF7DF827F827FF52F827F8527D27F8A8
%FF7DF827F827FF7DF827F827F827A8FD08FF7E7D527D7DFD04FFA87DA8FD
%05FFA87D7D7DA8FFFFFFA852A87D27217DFFFFFFA8597DA8FFFFFF7D7D7D
%FFFFA87D7EA8FD05FFA8A87D7D7DFD06FFA8597D7DFFFFA87DA8FFFFA87D
%A8FFFFA87D7D7DFFFFFF7D7D53A8FD22FFA87EFFFF7DF8277DFD31FFA8FD
%2DFFA8F827527D202727A8FD5FFFA852F827F827F8A8FD1EFFA8FD0BFFA8
%FD0FFFA8FFFFFFA8FD23FFA87D7D7DFD05FF527DA852A8FFFF5252FF52A8
%FFFF527DFFFF5352FF7E52FFFF7D275227A8FFA8275252FFFFFF7D27F87D
%FFFF7D52FFFFA852275227FFFF5252FF277DFD2CFF2752FFF8A8FFFF2727
%7D277DFFFF5227FFFF7DF8FF2752FFFF52277D7DA8FF7D277D2752FFFF28
%277D7DFFFF7DF8FFFFFF7D5227A8A8FF7D275227A8FD2CFF277DA827A8FF
%FF52205227A8FFFF5252FFFFA8277D527DFFFF7D27287DFFFFA8207D277D
%FFFF522752FFFFFF7D27A9FFFFFF5252FD04FF272752FD2DFF2752FFF8A8
%FFFF277D27277EFFFF5252FFFFFF522727FFFFFF52277DFFFFFF7D27F828
%FD04FF7D2727FFFF7DF8FD04FF7D27FD04FF7DF8AFFD2DFF52275227A8FF
%FF527D7DF8A8FFFF5252FFFFFF7D2152FFFFFF7D27A87DAFFFA827A8F8A8
%FFFF527D5227FFFF7D27A8FFFFFF5252FD04FF7D27A8FD2DFFA8272752FF
%FFFF52A8A85284FFFF7D52FFFFFFA8527DFFFFFF7D5227277DFF7D52A852
%52FFFF7D27277DFFFFA852FD04FF7D52FD04FFA852FDFCFFFDFCFFFDB0FF
%CFFFFFFFCFFD50FFA0C9C2C2A0C2C1C299C299C199C199BB98BB98BB98BB
%98BB98BB98BB98BB99BB99C299C199C2C2C2A0C9C2CAFD3DFFCACFCACFC9
%CAC9CFC9C9C9CAC9C9C2C9C9C9C3C9C9C9C3C9C9C9C3C9C3C9C9CAC9C9C9
%CFC9CACAFFCACFCFFDFCFFFDFCFFFDFCFFFFFFFF7D7D7DFD08FFA87DFF7D
%A8FD1BFF7D52FFFFFFA8A87D7D7DFD0DFF7DA8FD15FFA87DFD0CFF7D27F8
%2727FD07FFF852A82752FD1AFF7DF8277DFFFFA8F827F8277DFD0BFF7D27
%52FD15FF52277DFD0BFF2727FF52277DFD06FF2752FFF87DFD1AFF52277E
%FFFFFFA82727FFA8FD0DFFA8FD17FFA8FD0CFFF852FFA852A8FF52F852A8
%FFF852A82752FF7D27277DFFA827525252FFA8272752FD05FF522727A8A8
%27F827A8FFFFA8F852FFFFFF7D2752277DFFA82752277DA8527DA8275227
%53FFFF522727A8FFA8272752FF845252597D52A87D2752277DFF7D275227
%7D2752FD04FF7DF87D2752FF4C52FFF87DA827527D27FF5227532727FF27
%527D277DFFFFFF7D27525227A8522752FFFFFFA827202727FF7D275252F8
%FF2727522752A8F87D7D27525227FF52277D2727FF27527D277DA8F8277D
%7DF8AF5227522727FF275252277DF852FD04FF2727FF52F8A82752A82752
%7DF87D52277D52F8FF2752A827527DF852FFFFFF7DF8FF5327A87DF8A8FF
%FFFFA8F8275252FF7DF8FF5227A82727FFF87DA82752A8F8A87D27A852F8
%7D27277D27527DF859842752FF5227A852F8A82727A82752FFF87D2752FF
%A87DA85227FF5227A82728FF217D7D27275228A85227AF5252A8F8275252
%7DFFFFFF5227A97DF8FF7D277DFFFFFFA82752FFFFFF7D27A87D27A82752
%A82752A9217D8427847DF8A85227275252A8F82752527DA821A8FF7D21A8
%5227A85227FF217DA8277DF827FF59F87D5227FF52F8A82752A827527DF8
%A8A8527D52F8FF2752A82752FF277DFFFFFF59F8FF5227A87DF8A8FFFFFF
%A8F852FFFFFF7DF8A85227A82727FFF852A82752A8F8A87D27A852F8FF52
%52A82752FF277D7D277DFF5227A852F8A82727A82752A8F87D7DF8522727
%FF7E2752F852FF2727FF277DA8272E52F8FF5227522752FF272752277DFF
%FFFF7D27522727FF52277DFFFFFFA8272727F87D7D27A87D27FF52275227
%52A8277D84277D7DF8FF7D27522727FF272752277DA827A8FF7D27A85227
%A82727FF272752277DFF7D2752A8FFA87D2752A8FF527DA8527DFF7D5227
%7DFFA8527D2752FFA8275252FD05FF525227A8FF8452A8FFFFFFA8525352
%527DA852A87D59FFA8277DF852A8527DA852A87D52A8FF522752A9FFA827
%5252FFA852A8FF7D52A87D52FF527DFF7D527DF87DFD17FF5252A82727FD
%21FF5252842752FD21FF277D7D277DFD17FFA8F827F8A8FD21FF7DF82727
%A8FD21FF7DF82727FF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (PANTONE 1665 C)
%%CMYKCustomColor: 0 0.6785 1 0 (PANTONE 1665 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2012-06-19T15:33:37-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qsnnhghead1jhjBaS&#xA;RyAqqOpJORlIRFnYMoQMjQFkvM/M35uOHe20CMcRsb6UVr7xxn9bfdnPavts3WL5/qH63qtD7PCh&#xA;LMf80fpP6vmwDUNf1vUWLXt9NPX9lnPAfJB8I+gZo8uoyZPqkS9Dh0mLH9EQPggOm4ylyU00zzT5&#xA;h0xg1nfzRqv+6yxeP6Uaq/hmTi1eXH9MiHEz6DDl+qIP3/N6P5U/Ne2vJEs9bRbWdqKl2m0THtzB&#xA;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&#xA;4Ev/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-06-19T15:33:37-07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-06-19T15:33:37-07:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>612.000000</stDim:w>
            <stDim:h>792.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 1665 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 1665 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>67.843140</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FB7F117407206811808384FED72371DC</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:FB7F117407206811808384FED72371DC</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811808384FED72371DC</stEvt:instanceID>
                  <stEvt:when>2012-06-19T15:33:37-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -434.271 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 434.271 li
344.375 434.271 li
344.375 0 li
cp
clp
110.346 193.406 mo
110.346 219.36 87.791 240.283 60.1191 240.283 cv
32.4482 240.283 9.89404 219.36 9.89404 193.406 cv
9.89209 46.8779 li
9.89209 20.9243 32.4463 0 60.1182 0 cv
87.7891 0 110.344 20.9243 110.344 46.877 cv
110.346 193.406 li
46.8521 194.383 mo
46.8521 201.273 52.7422 207.472 60.1191 207.472 cv
67.4961 207.472 73.3862 201.274 73.3862 194.383 cv
73.3843 45.8853 li
73.3843 38.9941 67.4941 32.7964 60.1182 32.7964 cv
52.7412 32.7964 46.8501 38.9941 46.8501 45.8853 cv
46.8521 194.383 li
cp
170.389 207.66 mo
177.762 207.66 183.653 201.491 183.653 194.63 cv
183.653 193.056 183.612 186.096 183.612 177.313 cv
183.612 169.174 181.233 161.923 178.262 158.233 cv
132.572 102.667 li
123.263 90.9243 120.207 75.6982 120.207 63.4263 cv
120.207 54.6431 120.165 48.6362 120.165 47.0942 cv
120.165 21.2764 142.715 .455078 170.39 .455078 cv
198.064 .455078 220.614 21.2764 220.614 47.0942 cv
220.614 74.1914 li
183.655 74.1914 li
183.655 46.1094 li
183.655 39.2471 177.764 33.0791 170.39 33.0791 cv
163.017 33.0791 157.123 39.2471 157.123 46.1094 cv
157.123 47.6821 157.165 54.6431 157.165 63.4263 cv
157.165 71.5645 159.542 78.8154 162.517 82.5063 cv
207.984 137.792 li
217.461 149.57 220.57 164.949 220.57 177.313 cv
220.57 186.096 220.612 192.102 220.612 193.646 cv
220.612 219.462 198.063 240.283 170.389 240.283 cv
142.714 240.283 120.163 219.462 120.163 193.646 cv
120.163 164.054 li
157.121 164.054 li
157.121 194.629 li
157.121 201.491 163.015 207.66 170.389 207.66 cv
280.661 240.283 mo
252.988 240.283 230.436 219.36 230.436 193.406 cv
230.433 6.45313 li
267.392 6.45313 li
267.393 194.383 li
267.393 201.273 273.283 207.472 280.661 207.472 cv
288.037 207.472 293.928 201.274 293.928 194.383 cv
293.925 6.45313 li
330.884 6.45313 li
330.885 193.406 li
330.885 219.36 308.333 240.283 280.661 240.283 cv
false sop
/0 
<<
/Name (PANTONE 1665 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 .678431 1 0 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
ef
17.6558 415.661 mo
11.8706 415.661 li
11.8706 416.039 11.9087 416.375 11.9087 416.711 cv
11.9087 420.072 11.002 421.752 9.14893 421.752 cv
6.1626 421.752 5.70898 418.435 5.70898 411.419 cv
5.70898 403.689 5.89795 399.95 9.07373 399.95 cv
10.9258 399.95 11.7959 401.463 11.7959 404.655 cv
11.7959 405.243 li
17.5049 405.243 li
17.5049 404.655 li
17.5049 398.48 14.6689 395.372 9.18701 395.372 cv
5.74658 395.372 3.21387 396.632 1.88965 398.858 cv
.302734 401.505 0 405.159 0 410.158 cv
0 417.302 .37793 421.794 3.09961 424.399 cv
4.30957 425.575 6.54102 426.457 9.22461 426.457 cv
14.6309 426.457 17.6938 423.099 17.6938 417.048 cv
17.6938 416.585 17.6938 416.124 17.6558 415.661 cv
true sop
0 0 0 1 nzopmsc
f
29.0005 404.403 mo
23.1025 404.403 21.0234 407.597 21.0234 414.989 cv
21.0234 423.182 22.6118 426.457 28.8877 426.457 cv
35.1636 426.457 36.7134 423.182 36.7134 414.989 cv
36.7134 407.681 34.6714 404.403 29.0005 404.403 cv
26.3926 415.241 mo
26.3926 410.2 26.7324 408.101 28.8496 408.101 cv
31.0425 408.101 31.3828 410.158 31.3828 415.241 cv
31.3828 420.534 30.9668 422.805 28.8877 422.805 cv
26.8076 422.805 26.3926 420.534 26.3926 415.241 cv
ef
40.4136 425.995 mo
45.6685 425.995 li
45.6685 395.75 li
40.4136 395.75 li
40.4136 425.995 li
cp
f
49.7505 425.995 mo
55.0059 425.995 li
55.0059 395.75 li
49.7505 395.75 li
49.7505 425.995 li
cp
f
64.1548 412.764 mo
64.1548 412.05 li
64.1548 409.234 64.9868 407.849 66.5747 407.849 cv
68.0488 407.849 68.9185 408.982 68.9185 410.997 cv
68.9185 412.764 li
64.1548 412.764 li
68.9937 418.183 mo
68.9937 418.561 li
68.9937 421.373 68.1245 422.804 66.5366 422.804 cv
64.8345 422.804 64.1548 421.373 64.1548 418.267 cv
64.1548 416.08 li
74.2866 416.08 li
74.2866 412.89 li
74.2866 407.177 71.7915 404.403 66.5747 404.403 cv
60.7896 404.403 58.7104 407.639 58.7104 414.989 cv
58.7104 423.182 60.2988 426.456 66.5747 426.456 cv
71.7534 426.456 74.2866 423.686 74.2866 418.183 cv
68.9937 418.183 li
cp
ef
87.1797 413.31 mo
87.1797 417.889 li
87.1797 421.122 86.4614 422.721 84.9497 422.721 cv
82.9453 422.721 82.7183 420.324 82.7183 415.661 cv
82.7183 415.157 li
82.7183 410.2 82.7563 407.933 84.8735 407.933 cv
86.8013 407.933 87.1797 409.612 87.1797 413.31 cv
92.3965 425.575 mo
92.3965 409.57 li
92.3965 408.311 92.4346 406.798 92.5483 404.907 cv
87.3687 404.907 li
87.1797 406.926 li
86.4233 405.328 84.9116 404.403 82.9834 404.403 cv
81.0176 404.403 79.3916 405.37 78.5596 407.01 cv
77.5386 408.982 77.4634 411.839 77.4634 415.787 cv
77.4634 422.972 78.7114 426.499 82.7563 426.499 cv
84.3823 426.499 85.8184 425.743 87.1035 424.189 cv
87.1035 426.583 li
87.1035 429.44 87.0664 430.826 85.0625 430.826 cv
83.5874 430.826 83.0215 430.154 82.9453 428.181 cv
77.8413 428.181 li
77.8413 428.433 li
77.8413 432.128 80.3364 434.271 84.9116 434.271 cv
90.7334 434.271 92.3965 431.75 92.3965 425.575 cv
ef
101.673 412.764 mo
101.673 412.05 li
101.673 409.234 102.505 407.849 104.093 407.849 cv
105.567 407.849 106.437 408.982 106.437 410.997 cv
106.437 412.764 li
101.673 412.764 li
106.513 418.183 mo
106.513 418.561 li
106.513 421.373 105.643 422.804 104.055 422.804 cv
102.354 422.804 101.673 421.373 101.673 418.267 cv
101.673 416.08 li
111.805 416.08 li
111.805 412.89 li
111.805 407.177 109.31 404.403 104.093 404.403 cv
98.3086 404.403 96.2285 407.639 96.2285 414.989 cv
96.2285 423.182 97.8169 426.456 104.093 426.456 cv
109.271 426.456 111.805 423.686 111.805 418.183 cv
106.513 418.183 li
cp
ef
132.647 404.403 mo
126.75 404.403 124.671 407.597 124.671 414.989 cv
124.671 423.182 126.258 426.457 132.534 426.457 cv
138.81 426.457 140.36 423.182 140.36 414.989 cv
140.36 407.681 138.319 404.403 132.647 404.403 cv
130.039 415.241 mo
130.039 410.2 130.379 408.101 132.497 408.101 cv
134.688 408.101 135.03 410.158 135.03 415.241 cv
135.03 420.534 134.614 422.805 132.534 422.805 cv
130.455 422.805 130.039 420.534 130.039 415.241 cv
ef
144.967 425.995 mo
150.223 425.995 li
150.223 408.395 li
153.587 408.395 li
153.587 404.907 li
150.223 404.907 li
150.223 402.641 li
150.223 400.329 150.639 399.53 152.718 399.53 cv
152.982 399.53 153.285 399.53 153.587 399.573 cv
153.587 395.414 li
152.642 395.33 151.848 395.288 151.13 395.288 cv
145.913 395.288 144.967 396.718 144.967 401.379 cv
144.967 404.907 li
142.283 404.907 li
142.283 408.395 li
144.967 408.395 li
144.967 425.995 li
f
166.176 425.995 mo
181.223 425.995 li
181.223 421.122 li
171.923 421.122 li
171.923 412.303 li
180.165 412.303 li
180.165 407.64 li
171.923 407.64 li
171.923 400.413 li
180.883 400.413 li
180.883 395.75 li
166.176 395.75 li
166.176 425.995 li
cp
f
190.286 425.995 mo
190.286 410.998 li
190.286 409.15 191.192 408.017 192.555 408.017 cv
194.027 408.017 194.332 409.234 194.332 411.587 cv
194.332 425.995 li
199.663 425.995 li
199.663 409.948 li
199.663 406.336 197.848 404.403 194.52 404.403 cv
192.63 404.403 191.154 405.328 190.286 407.094 cv
190.135 404.907 li
184.766 404.907 li
184.956 406.294 184.956 407.556 184.956 408.688 cv
184.956 425.995 li
190.286 425.995 li
f
213.147 413.31 mo
213.147 417.889 li
213.147 421.122 212.43 422.721 210.918 422.721 cv
208.915 422.721 208.687 420.324 208.687 415.661 cv
208.687 415.157 li
208.687 410.2 208.724 407.933 210.843 407.933 cv
212.77 407.933 213.147 409.612 213.147 413.31 cv
218.365 425.575 mo
218.365 409.57 li
218.365 408.311 218.402 406.798 218.516 404.907 cv
213.338 404.907 li
213.147 406.926 li
212.392 405.328 210.881 404.403 208.952 404.403 cv
206.984 404.403 205.359 405.37 204.527 407.01 cv
203.508 408.982 203.431 411.839 203.431 415.787 cv
203.431 422.972 204.679 426.499 208.724 426.499 cv
210.35 426.499 211.788 425.743 213.071 424.189 cv
213.071 426.583 li
213.071 429.44 213.035 430.826 211.03 430.826 cv
209.556 430.826 208.988 430.154 208.915 428.181 cv
203.81 428.181 li
203.81 428.433 li
203.81 432.128 206.305 434.271 210.881 434.271 cv
216.703 434.271 218.365 431.75 218.365 425.575 cv
ef
222.538 425.995 mo
227.869 425.995 li
227.869 404.907 li
222.538 404.907 li
222.538 425.995 li
cp
222.538 400.749 mo
227.869 400.749 li
227.869 395.75 li
222.538 395.75 li
222.538 400.749 li
cp
ef
237.357 425.995 mo
237.357 410.998 li
237.357 409.15 238.265 408.017 239.627 408.017 cv
241.1 408.017 241.402 409.234 241.402 411.587 cv
241.402 425.995 li
246.733 425.995 li
246.733 409.948 li
246.733 406.336 244.92 404.403 241.592 404.403 cv
239.703 404.403 238.227 405.328 237.357 407.094 cv
237.207 404.907 li
231.838 404.907 li
232.026 406.294 232.026 407.556 232.026 408.688 cv
232.026 425.995 li
237.357 425.995 li
f
255.946 412.764 mo
255.946 412.05 li
255.946 409.234 256.778 407.849 258.367 407.849 cv
259.842 407.849 260.711 408.982 260.711 410.997 cv
260.711 412.764 li
255.946 412.764 li
260.787 418.183 mo
260.787 418.561 li
260.787 421.373 259.918 422.804 258.33 422.804 cv
256.628 422.804 255.946 421.373 255.946 418.267 cv
255.946 416.08 li
266.08 416.08 li
266.08 412.89 li
266.08 407.177 263.585 404.403 258.367 404.403 cv
252.583 404.403 250.504 407.639 250.504 414.989 cv
250.504 423.182 252.092 426.456 258.367 426.456 cv
263.547 426.456 266.08 423.686 266.08 418.183 cv
260.787 418.183 li
cp
ef
274.701 412.764 mo
274.701 412.05 li
274.701 409.234 275.533 407.849 277.121 407.849 cv
278.595 407.849 279.465 408.982 279.465 410.997 cv
279.465 412.764 li
274.701 412.764 li
279.54 418.183 mo
279.54 418.561 li
279.54 421.373 278.671 422.804 277.083 422.804 cv
275.381 422.804 274.701 421.373 274.701 418.267 cv
274.701 416.08 li
284.833 416.08 li
284.833 412.89 li
284.833 407.177 282.338 404.403 277.121 404.403 cv
271.336 404.403 269.257 407.639 269.257 414.989 cv
269.257 423.182 270.845 426.456 277.121 426.456 cv
282.3 426.456 284.833 423.686 284.833 418.183 cv
279.54 418.183 li
cp
ef
288.501 425.995 mo
293.832 425.995 li
293.832 414.653 li
293.832 411.082 294.929 409.528 297.989 409.528 cv
298.48 409.528 li
298.48 404.403 li
298.142 404.403 li
295.798 404.403 294.172 405.58 293.492 407.64 cv
293.149 404.865 li
288.501 404.865 li
288.501 425.995 li
f
301.324 425.995 mo
306.655 425.995 li
306.655 404.907 li
301.324 404.907 li
301.324 425.995 li
cp
301.324 400.749 mo
306.655 400.749 li
306.655 395.75 li
301.324 395.75 li
301.324 400.749 li
cp
ef
316.145 425.995 mo
316.145 410.998 li
316.145 409.15 317.052 408.017 318.414 408.017 cv
319.887 408.017 320.189 409.234 320.189 411.587 cv
320.189 425.995 li
325.521 425.995 li
325.521 409.948 li
325.521 406.336 323.707 404.403 320.379 404.403 cv
318.488 404.403 317.014 405.328 316.145 407.094 cv
315.994 404.907 li
310.625 404.907 li
310.813 406.294 310.813 407.556 310.813 408.688 cv
310.813 425.995 li
316.145 425.995 li
f
339.007 413.31 mo
339.007 417.889 li
339.007 421.122 338.288 422.721 336.775 422.721 cv
334.772 422.721 334.546 420.324 334.546 415.661 cv
334.546 415.157 li
334.546 410.2 334.584 407.933 336.699 407.933 cv
338.629 407.933 339.007 409.612 339.007 413.31 cv
344.224 425.575 mo
344.224 409.57 li
344.224 408.311 344.262 406.798 344.375 404.907 cv
339.195 404.907 li
339.007 406.926 li
338.251 405.328 336.737 404.403 334.81 404.403 cv
332.844 404.403 331.219 405.37 330.387 407.01 cv
329.365 408.982 329.29 411.839 329.29 415.787 cv
329.29 422.972 330.538 426.499 334.584 426.499 cv
336.209 426.499 337.646 425.743 338.931 424.189 cv
338.931 426.583 li
338.931 429.44 338.893 430.826 336.89 430.826 cv
335.415 430.826 334.848 430.154 334.772 428.181 cv
329.669 428.181 li
329.669 428.433 li
329.669 432.128 332.164 434.271 336.737 434.271 cv
342.561 434.271 344.224 431.75 344.224 425.575 cv
ef
174.531 367.66 mo
148.438 367.66 99.291 365.946 99.291 365.946 cv
98.3872 365.905 98.3862 365.066 99.29 365.024 cv
99.29 365.024 147.957 363.311 174.531 363.311 cv
201.111 363.311 244.373 365.024 244.373 365.024 cv
245.263 365.071 245.279 365.899 244.373 365.946 cv
244.373 365.946 200.631 367.66 174.531 367.66 cv
false sop
1 /0 /CSD get_res sepcs
1 sep
f
19.5308 271.322 mo
19.5308 288.85 li
19.4741 291.543 19.8325 293.718 20.6069 295.372 cv
21.3843 297.025 22.9175 297.876 25.2124 297.923 cv
27.0698 297.876 28.4019 297.352 29.2095 296.35 cv
30.0151 295.347 30.5063 294.151 30.6821 292.76 cv
30.8569 291.369 30.9272 290.065 30.8921 288.85 cv
30.8921 271.322 li
30.9272 270.124 30.8589 268.933 30.687 267.751 cv
30.5151 266.569 30.0366 265.582 29.2476 264.79 cv
28.4604 263.999 27.1577 263.586 25.3423 263.556 cv
23.4409 263.614 22.0776 264.139 21.2524 265.126 cv
20.4272 266.114 19.9253 267.213 19.7456 268.423 cv
19.5659 269.633 19.4946 270.599 19.5308 271.322 cv
cp
8.82178 286.581 mo
8.82178 273.042 li
8.78857 270.444 9.06787 267.955 9.6626 265.575 cv
10.2573 263.193 11.3696 261.031 13.0005 259.088 cv
14.5337 257.354 16.3481 256.113 18.4448 255.368 cv
20.5405 254.621 22.7319 254.259 25.0151 254.276 cv
27.4839 254.252 29.7964 254.609 31.9526 255.351 cv
34.1108 256.09 35.9995 257.359 37.6177 259.156 cv
38.9634 260.622 39.9946 262.588 40.7114 265.051 cv
41.4292 267.514 41.7905 270.75 41.7974 274.76 cv
41.7974 286.993 li
41.814 290.504 41.5034 293.468 40.8667 295.886 cv
40.23 298.305 39.1694 300.358 37.6831 302.047 cv
36.3276 303.537 34.8589 304.643 33.2769 305.363 cv
31.6938 306.085 30.1626 306.555 28.6821 306.771 cv
27.2007 306.988 25.9351 307.087 24.8843 307.064 cv
23.2671 307.095 21.4683 306.835 19.4897 306.285 cv
17.5112 305.735 15.6587 304.712 13.9341 303.215 cv
12.2095 301.719 10.9194 299.564 10.062 296.755 cv
9.5542 294.904 9.21631 293.036 9.05029 291.151 cv
8.88428 289.269 8.80811 287.745 8.82178 286.581 cv
cp
221.709 268.455 mo
220.928 266.979 219.842 265.723 218.457 264.686 cv
216.969 263.573 215.248 262.995 213.314 262.947 cv
211.494 262.999 210.111 263.384 209.242 264.159 cv
208.414 264.896 207.881 265.683 207.674 266.524 cv
207.488 267.282 207.389 267.828 207.432 268.122 cv
207.502 269.94 208.176 271.339 209.473 272.302 cv
210.717 273.229 212.117 273.949 213.68 274.471 cv
219.748 276.806 li
221.205 277.353 222.67 278.122 224.143 279.113 cv
225.604 280.1 226.824 281.277 227.793 282.63 cv
228.133 283.029 228.645 283.987 229.318 285.536 cv
229.971 287.036 230.34 288.97 230.414 291.341 cv
230.455 292.13 230.371 293.282 230.164 294.797 cv
229.961 296.293 229.387 297.912 228.436 299.658 cv
227.498 301.375 225.943 302.968 223.748 304.437 cv
222.311 305.31 220.76 305.943 219.08 306.344 cv
217.389 306.747 215.922 306.943 214.686 306.938 cv
210.564 307.018 207.145 306.329 204.424 304.89 cv
201.764 303.483 199.398 300.884 197.342 297.051 cv
205.035 291.675 li
205.928 293.715 207.131 295.33 208.645 296.51 cv
210.238 297.755 212.102 298.385 214.225 298.406 cv
215.061 298.422 215.982 298.263 216.988 297.938 cv
218.021 297.603 218.92 296.999 219.68 296.135 cv
220.467 295.242 220.861 293.996 220.898 292.437 cv
220.92 291.168 220.654 290.11 220.076 289.29 cv
219.502 288.478 218.523 287.738 217.17 287.062 cv
215.832 286.39 213.969 285.575 211.586 284.618 cv
209.152 283.676 206.924 282.575 204.904 281.317 cv
202.906 280.072 201.303 278.446 200.096 276.437 cv
198.898 274.444 198.273 271.833 198.242 268.579 cv
198.273 264.407 199.619 261.062 202.264 258.508 cv
204.902 255.959 208.66 254.629 213.578 254.555 cv
217.043 254.555 220.039 255.3 222.582 256.784 cv
225.066 258.235 227.252 260.397 229.141 263.283 cv
221.709 268.455 li
cp
318.754 338.294 mo
318.754 330.783 li
313.281 319.491 li
317.484 319.491 li
320.734 326.514 li
323.984 319.491 li
328.162 319.491 li
322.713 330.783 li
322.713 338.294 li
318.754 338.294 li
cp
297.945 338.294 mo
297.945 323.118 li
293.424 323.118 li
293.424 319.491 li
306.424 319.491 li
306.424 323.118 li
301.904 323.118 li
301.904 338.294 li
297.945 338.294 li
cp
278.686 338.294 mo
278.686 336.52 li
278.686 336.52 li
278.686 321.138 li
278.686 321.138 li
278.686 319.491 li
282.645 319.491 li
282.645 321.138 li
282.645 321.138 li
282.645 336.52 li
282.645 336.52 li
282.645 338.294 li
278.686 338.294 li
cp
256.582 334.977 mo
259.66 332.688 li
260.164 333.571 260.691 334.227 261.24 334.651 cv
261.789 335.076 262.42 335.288 263.131 335.285 cv
263.824 335.272 264.369 335.085 264.768 334.719 cv
265.168 334.354 265.371 333.882 265.379 333.305 cv
265.391 332.288 264.732 331.491 263.4 330.912 cv
260.951 329.852 li
260.201 329.517 259.543 329.124 258.977 328.675 cv
257.727 327.628 257.1 326.222 257.096 324.455 cv
257.113 322.776 257.633 321.453 258.652 320.484 cv
259.674 319.517 261.084 319.022 262.887 319.002 cv
265.494 319.015 267.439 320.121 268.727 322.32 cv
265.893 324.455 li
264.951 323.045 263.877 322.342 262.668 322.347 cv
262.049 322.355 261.566 322.518 261.219 322.832 cv
260.871 323.146 260.693 323.559 260.688 324.069 cv
260.688 324.541 260.865 324.963 261.223 325.333 cv
261.578 325.705 262.117 326.056 262.838 326.385 cv
265.35 327.488 li
266.111 327.825 266.766 328.212 267.311 328.648 cv
268.535 329.686 269.164 331.135 269.191 332.996 cv
269.168 334.733 268.605 336.126 267.506 337.172 cv
266.406 338.219 264.914 338.756 263.033 338.783 cv
260.223 338.774 258.072 337.506 256.582 334.977 cv
cp
214.598 338.294 mo
214.598 319.491 li
226.645 319.491 li
226.645 323.118 li
218.557 323.118 li
218.557 326.488 li
224.08 326.488 li
224.08 330.114 li
218.557 330.114 li
218.557 334.668 li
227.158 334.668 li
227.158 338.294 li
214.598 338.294 li
cp
200.594 338.294 mo
196.416 338.294 li
190.941 319.491 li
194.9 319.491 li
198.518 332.635 li
202.109 319.491 li
206.068 319.491 li
200.594 338.294 li
cp
235.59 319.473 mo
240.086 319.473 li
241.281 319.462 242.336 319.505 243.248 319.602 cv
244.16 319.699 244.939 319.922 245.584 320.271 cv
246.395 320.727 247.01 321.358 247.436 322.168 cv
247.861 322.977 248.074 323.931 248.078 325.029 cv
248.074 326.297 247.793 327.363 247.236 328.231 cv
246.682 329.101 245.869 329.73 244.803 330.122 cv
248.713 338.276 li
244.338 338.276 li
240.869 330.611 li
239.549 330.611 li
239.549 338.276 li
235.59 338.276 li
235.59 319.473 li
cp
239.549 322.663 mo
239.549 327.602 li
240.648 327.602 li
241.84 327.631 242.719 327.482 243.281 327.158 cv
243.844 326.834 244.123 326.158 244.119 325.132 cv
244.123 324.106 243.844 323.431 243.281 323.106 cv
242.719 322.782 241.84 322.635 240.648 322.663 cv
239.549 322.663 li
cp
177.914 338.294 mo
177.914 336.52 li
177.914 336.52 li
177.914 321.138 li
177.914 321.138 li
177.914 319.491 li
181.873 319.491 li
181.873 321.138 li
181.873 321.138 li
181.873 336.52 li
181.873 336.52 li
181.873 338.294 li
177.914 338.294 li
cp
154.168 338.294 mo
154.168 319.491 li
157.98 319.491 li
163.699 330.912 li
163.625 319.491 li
167.072 319.491 li
167.072 338.294 li
163.821 338.294 li
157.541 325.587 li
157.614 338.294 li
154.168 338.294 li
cp
134.865 319.491 mo
134.865 331.246 li
134.839 332.602 134.99 333.589 135.317 334.211 cv
135.645 334.833 136.309 335.139 137.309 335.131 cv
138.32 335.138 138.986 334.828 139.31 334.201 cv
139.632 333.575 139.781 332.59 139.752 331.246 cv
139.752 319.491 li
143.711 319.491 li
143.711 332.198 li
143.716 334.407 143.193 336.054 142.141 337.137 cv
141.089 338.221 139.479 338.761 137.309 338.758 cv
133.012 338.771 130.878 336.584 130.906 332.198 cv
130.906 319.491 li
134.865 319.491 li
cp
272.738 287.834 mo
269.928 288.24 267.773 289.109 266.277 290.44 cv
264.781 291.772 264.025 293.349 264.012 295.168 cv
264.037 296.499 264.402 297.555 265.111 298.339 cv
265.818 299.123 266.719 299.523 267.811 299.542 cv
269.326 299.539 270.523 298.905 271.398 297.642 cv
272.273 296.376 272.721 294.497 272.738 292.006 cv
272.738 287.834 li
cp
274.072 301.964 mo
272.459 303.576 270.854 304.776 269.258 305.563 cv
267.662 306.353 265.957 306.745 264.145 306.742 cv
261.381 306.7 259.199 305.792 257.6 304.017 cv
256.002 302.243 255.186 299.854 255.152 296.85 cv
255.152 288.832 261.014 284.01 272.738 282.383 cv
272.738 279.558 li
272.729 278.492 272.316 277.627 271.506 276.958 cv
270.697 276.289 269.553 275.943 268.076 275.923 cv
265.477 275.958 262.746 277.168 259.881 279.558 cv
255.551 273.972 li
259.238 270.843 263.59 269.295 268.609 269.329 cv
277.469 269.362 281.932 273.468 281.998 281.643 cv
281.998 297.052 li
282.021 298.229 282.576 298.971 283.664 299.272 cv
283.664 306.271 li
283.119 306.326 282.609 306.35 282.133 306.339 cv
278.379 306.36 275.693 304.903 274.072 301.964 cv
cp
316.186 284.67 mo
324.846 284.67 li
324.846 281.574 li
324.836 277.593 323.391 275.598 320.516 275.587 cv
319.199 275.591 318.152 276.085 317.377 277.067 cv
316.602 278.047 316.203 279.483 316.186 281.373 cv
316.186 284.67 li
cp
332.84 304.386 mo
328.865 306.079 325.09 306.933 321.516 306.943 cv
316.969 306.925 313.504 305.667 311.123 303.166 cv
308.74 300.667 307.541 297.036 307.525 292.274 cv
307.525 283.795 li
307.543 279.071 308.641 275.482 310.814 273.028 cv
312.988 270.575 316.135 269.343 320.25 269.328 cv
324.119 269.366 327.141 270.518 329.318 272.786 cv
331.496 275.052 332.602 278.206 332.641 282.248 cv
332.641 289.985 li
316.186 289.985 li
316.186 293.081 li
316.197 295.149 316.807 296.75 318.01 297.885 cv
319.213 299.018 320.936 299.593 323.182 299.608 cv
325.557 299.608 328.398 298.801 331.709 297.187 cv
332.84 304.386 li
cp
298.793 291.438 mo
298.738 294.163 299.084 296.098 299.826 297.241 cv
300.572 298.385 302.047 298.94 304.256 298.907 cv
305.523 298.84 li
305.523 306.78 li
304.102 306.893 302.814 306.938 301.658 306.914 cv
297.16 306.96 294 306.045 292.174 304.172 cv
290.35 302.3 289.469 299.198 289.533 294.87 cv
289.533 277.172 li
284.338 277.172 li
284.338 270.376 li
289.533 270.376 li
289.533 257.522 li
298.793 257.522 li
298.793 270.376 li
305.256 270.376 li
305.256 277.172 li
298.793 277.172 li
298.793 291.438 li
cp
46.9585 306.234 mo
46.9585 270.454 li
54.9331 270.454 li
55.5444 274.997 li
56.8354 271.411 59.6206 269.577 63.8999 269.493 cv
64.5122 269.493 li
64.5122 278.214 li
63.6284 278.214 li
60.9097 278.197 58.9761 278.892 57.8296 280.297 cv
56.6802 281.7 56.1235 283.913 56.1558 286.935 cv
56.1558 306.234 li
46.9585 306.234 li
cp
134.628 291.305 mo
134.627 293.034 134.695 294.345 134.824 295.521 cv
134.876 296.008 134.968 296.454 135.085 296.87 cv
135.322 297.565 li
135.753 298.663 136.349 299.347 137.106 299.621 cv
138 299.9 li
138.415 300.006 138.748 300.047 139 300.023 cv
139.682 300.022 140.048 299.978 140.383 299.897 cv
141.156 299.732 141.75 299.389 142.164 298.868 cv
142.401 298.569 142.603 298.195 142.77 297.745 cv
143.093 296.999 143.294 296.131 143.375 295.143 cv
143.488 293.741 143.537 292.293 143.488 290.799 cv
143.488 287.571 li
143.5 286.772 143.506 286.003 143.488 285.267 cv
143.515 283.503 143.454 281.929 143.302 280.545 cv
143.149 279.16 142.744 278.065 142.083 277.263 cv
141.421 276.46 140.341 276.05 138.841 276.033 cv
137.429 276.066 136.422 276.539 135.822 277.452 cv
135.221 278.366 134.863 279.521 134.75 280.922 cv
134.687 281.704 134.64 282.5 134.628 283.311 cv
134.611 283.715 134.617 284.11 134.628 284.493 cv
134.628 291.305 li
cp
125.919 287.357 mo
125.886 285.629 125.953 283.741 126.119 281.693 cv
126.285 279.646 126.75 277.686 127.513 275.813 cv
128.279 273.941 129.541 272.403 131.302 271.2 cv
133.062 269.996 135.521 269.374 138.677 269.333 cv
139.931 269.306 141.25 269.397 142.634 269.61 cv
144.019 269.822 145.361 270.32 146.662 271.104 cv
147.962 271.886 149.113 273.118 150.116 274.801 cv
150.917 276.227 151.467 278.017 151.765 280.168 cv
152.064 282.319 152.206 284.986 152.189 288.168 cv
152.256 291.792 152.091 294.788 151.695 297.155 cv
151.298 299.522 150.269 301.59 148.607 303.357 cv
148.102 304 147.181 304.706 145.841 305.477 cv
144.504 306.245 142.388 306.664 139.495 306.733 cv
138.429 306.755 137.167 306.679 135.708 306.506 cv
134.25 306.332 132.957 305.936 131.828 305.315 cv
129.994 304.192 128.654 302.785 127.809 301.095 cv
126.965 299.405 126.431 297.418 126.208 295.134 cv
125.986 292.852 125.888 290.259 125.919 287.357 cv
cp
156.291 306.234 mo
156.291 270.454 li
164.798 270.454 li
164.798 277.069 li
166.011 275.08 167.35 273.372 169.011 271.948 cv
170.673 270.523 172.65 269.777 174.943 269.712 cv
177.813 269.789 179.869 270.482 181.115 271.789 cv
182.359 273.098 183.117 274.556 183.389 276.162 cv
183.66 277.771 183.768 279.063 183.713 280.04 cv
183.713 306.234 li
174.484 306.234 li
174.484 282.876 li
174.504 282.37 174.473 281.739 174.387 280.986 cv
174.303 280.231 174.049 279.557 173.621 278.96 cv
173.197 278.364 172.48 278.05 171.474 278.016 cv
170.191 278.047 169.093 278.422 168.177 279.138 cv
167.263 279.854 166.376 280.718 165.519 281.728 cv
165.519 306.234 li
156.291 306.234 li
cp
112.554 294.748 mo
112.554 281.392 li
112.429 280.136 112.212 279.121 111.9 278.33 cv
111.341 276.916 110.217 276.214 108.529 276.226 cv
106.704 276.211 105.582 277.146 105.166 279.033 cv
104.75 280.918 104.58 283.839 104.656 287.793 cv
104.656 288.599 li
104.598 292.336 104.817 295.153 105.31 297.049 cv
105.804 298.944 106.921 299.896 108.665 299.899 cv
110.876 299.908 112.173 298.234 112.554 294.748 cv
cp
95.1714 314.351 mo
100.943 310.79 li
101.385 311.468 102.042 312.182 102.917 312.929 cv
103.79 313.676 105.011 314.08 106.582 314.144 cv
107.408 314.164 108.373 313.951 109.474 313.502 cv
110.576 313.054 111.423 312.239 112.02 311.063 cv
112.429 310.015 112.609 308.622 112.552 306.889 cv
112.554 303.31 li
110.255 305.996 107.634 307.087 104.724 307.075 cv
101.148 307.08 98.6538 305.569 97.2437 302.546 cv
95.8325 299.521 95.1558 294.955 95.2134 288.848 cv
95.1802 285.496 95.2798 282.587 95.5112 280.118 cv
95.7417 277.651 96.2983 275.58 97.1831 273.909 cv
97.9487 272.504 99.0181 271.418 100.393 270.647 cv
101.769 269.878 103.349 269.487 105.132 269.476 cv
106.877 269.485 108.832 270.18 109.767 270.657 cv
110.454 271.006 111.822 271.849 112.554 273.12 cv
112.554 270.335 li
121.578 270.335 li
121.578 302.264 li
121.617 304.041 121.535 305.954 121.332 308.003 cv
121.129 310.052 120.927 312 120.044 313.85 cv
119.162 315.699 117.71 317.214 115.691 318.394 cv
113.669 319.572 110.854 320.183 107.244 320.222 cv
104.605 320.19 102.447 319.847 100.769 319.19 cv
99.0913 318.534 97.8062 317.757 96.9175 316.854 cv
96.0269 315.953 95.4458 315.118 95.1714 314.351 cv
cp
245.535 291.438 mo
245.48 294.163 245.826 296.098 246.568 297.241 cv
247.313 298.385 248.789 298.94 251 298.907 cv
252.266 298.84 li
252.266 306.78 li
250.844 306.893 249.555 306.938 248.4 306.914 cv
243.902 306.96 240.74 306.045 238.916 304.172 cv
237.092 302.3 236.211 299.198 236.275 294.87 cv
236.275 277.172 li
231.08 277.172 li
231.08 270.376 li
236.275 270.376 li
236.275 257.522 li
245.535 257.522 li
245.535 270.376 li
251.998 270.376 li
251.998 277.172 li
245.535 277.172 li
245.535 291.438 li
cp
75.0142 284.67 mo
83.6733 284.67 li
83.6733 281.574 li
83.6636 277.593 82.2202 275.598 79.3452 275.587 cv
78.0269 275.591 76.98 276.085 76.2046 277.067 cv
75.4292 278.047 75.0327 279.483 75.0142 281.373 cv
75.0142 284.67 li
cp
91.6685 304.386 mo
87.6929 306.079 83.9194 306.933 80.3433 306.943 cv
75.7964 306.925 72.3325 305.667 69.9507 303.166 cv
67.5698 300.667 66.3696 297.036 66.353 292.274 cv
66.353 283.795 li
66.3716 279.071 67.4683 275.482 69.6431 273.028 cv
71.8179 270.575 74.9624 269.343 79.0776 269.328 cv
82.9458 269.366 85.9683 270.518 88.146 272.786 cv
90.3237 275.052 91.4312 278.206 91.4683 282.248 cv
91.4683 289.985 li
75.0142 289.985 li
75.0142 293.081 li
75.0269 295.149 75.6343 296.75 76.8374 297.885 cv
78.0415 299.018 79.7642 299.593 82.0093 299.608 cv
84.3843 299.608 87.228 298.801 90.5366 297.187 cv
91.6685 304.386 li
cp
0 0 0 1 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Heather Miller) ()
%%Title: (coe_v_spot.eps)
%%CreationDate: 6/19/12 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!R&q-GO4dkH)cJ9q82`<ghl\t'_0LZPn5'buu[!WqfQg#!n7g.t_'::f\H@DD^<NpF.gdci#WWB$q'R4Pdr>-Eq:Ha3P,Q+3j[
%EAaAL)gO62;mf^_\^NO?pUodeo9u)$MYXWNca(^Tp<1c`^"#@3[U8=5?E)asGC(k1@^Ge!)+t`gZ]EX+ZX.Km^M<_WWh^@\<40d+
%:S[`3o^h`\n#jTMVM<(d,C06^=*q-S`5uXCc9L`G6-39ChhM4uj,2?)l)3-OJ+7DT-\\>ej.f4Oc/l8$dQCJ[*FA2-Q/M&>P0W/`
%6W`:tI.;JNL'J:*rhXL.lgKg>^K^"_g9(6t2X51lo2Y+*p.45"R!@Is&=qFf3mCjC:@P24flT-T><2U55-p].-]2asDCG%VA]41c
%K0BrNY5d%Ns(<X,;PLZ^hlTp.RL@sN=l]M^hGhBh'`+:_3W3[C],.S=+3$f?A^P]4gTU8s.jFF`S$dGEK0jOpIa\Ye[I/CT&#@Tj
%rZLh`EKg+so6=+/]8e\?dLM:!p""EcP)OP:aJo54%P_X!HJI#P\<\Aa)`^5h]LS7eVTiQpfE?+S%s)dnP]5Dp]Jj"ECh3@^m;Cra
%:e+iMS+IL7I+jha>Pp]+,ll`hf3<(@5aA05M9;(Ti>M%@qu[54<GMTC<5jZoRMe%m/4H4c<k6eb6*[9(SF+i+)__3HYP2Kt"b(P6
%J*1kIgTp<mWPhGP*WPCc51Oe'WpB:+:+1TBQc!";*.H)mYZ<B3[;rfmQ+(I1=N@_ONWhZB[Uil!bJIHX$%HHe;@.-(9)*"tKMP2d
%XAc7\dqUb,_mc[HHsWr'GNakIGj0HdO7Xm8ae.mF/;_-H(;ba>Ynk3p+f3Kr,5dFC&0h%3E-"_"G7c2"NSb9kr/E:*4OKH,,5dF>
%j'O?+R'9AD:"hh_6FcMDeu;]TN6`#pSDooFO^\WHdl/`:FS'\AFDS=.*''W9?A&5b/VFXa@nUnJ.Fdu-SMC&#[1GMc_\=Wn?%``<
%j#;XOc9M<*,KCGpNO9<]r(Ugd;@1;mm2p]91k6h6oY]jNNfRWiCJh`a]MQ]6k],[*>dRkl17p4'KE#="KT8tX6AKJXW9I66%tA(@
%9&Bmr`<gr/Iq'LP/sbR_c$>(RNqP`;S's'h'i&U*E_7dF(-#[j3MgtuUSCqhrDL;eaSCd6f]^tm(@Rg&:>_tqkmndpj\/:kFNu=Q
%BF@i26g7Zk4+/KBjP24EMrRCU5,E-lpO`D6D*^OZe&<kZ/;neh&TLM(gB&=AXF.[n?eR,\;cOS'K7Bk"<8!>0d3mp,rB\DV5N4?p
%M']K2=sEsoT7!5Z(Ot\1C!uIIann!L:SC%GLqiS[=JXin?htF/QHQX'r1uWC$N2UVdN?I-U%02d%Y)rQV;M)-qA8)=N09=*Q5.>P
%[A9-GphW4iKoufCXAY`q<Y>([P#g"g`KH,YiLa/fR47G*G\33tb:FDls'$cW>0rq.<`2MG7\9Z.g@aAAe5?Wa$jH4JobX4^aXGec
%TP(5.4KZCtQ(bA=rKm.Dl4TPkBUN45J.lpR1rV/cCW)D2LQ!(jUj9@6hC[`Ch&):5QMt[$7ATE&JQ1`u$@CMKM0MDa91G(7mN?EY
%e0*'Dk3:M9(-VXp\9WoJ/UY#NO75'AQP3K_24QXK[fC=_`/G+62>BE0D7<eYF?%4njP?m>_pX$p@3"Oi]Y`DM*H_p1HN-F8Q)YO*
%hK0P2(HI_?Hgn"&2k&@Q-&oQS<iZC8(i2c_CTR8^(Y6H9bT\n'L\66Ckh:Y^1j`9'IPg:ZZS6DH8S%0VD8grCl*We<XA93Vr*qbG
%'$ao*!m;[8oNa,<C==LMJHqLN*'cOmP"^$<Sl2/@&hPX&&P>lG:b(ZAU5;8KK@D<Bn:$BW03N[emM]'Qd&1bacJB%tjZ,QI5q(9h
%H.6o4W3P>PWJ""PV--ge=e`,0nc>:9=i,O2*dKe;]o:ML*'/"eTJVT_hH(nJ[SHf_E%Z3jN,pYD&ifWNkKG:Bi<qDU_AchPSD+^K
%R\6I'A"2JH84?m":Lnm6BN%^+biH=jpAh<uZG^cI03Pr+0.Q*@1ADoWoYg%bOnB?qh,#p("H1^#`X'#$AjZ.WNR7`BEuFEk>;U]^
%hUY)[^HG-$K=H)%]u;]8E#\6.19Q8+3c^(XjZptSkh>U4p'Q8S`,,g,BELD&Nq8RmD[Tfs;%V]/p0>ZS2uV1&5'/I"&S<OS.G..:
%&'Ac>RI$6Wn812Ia8k"]0>9:Mhk"a&PTWOQ.(,n\"6B.u[Ys#9\Yn4(`:b>)SCij2U%A($(>D0ILWXI.[NkjN(A1*f>f?a6E&KcA
%4&g+p8SoDa9<p_9Q:G*NZ,(Fo_lRg,aXl*T+d1O%Ju>u1&lp$h`b&>2,_(5Z#Dt<E^QZSWoKbM'n0D<5ZUFgWPULc-&9F_Qh7_\M
%kg=E^Z&L.E<MoBH-)t1P$&\J_H0HF)#EDXE0aC]K[!Vb!")i(#8kpA@O(VmB[AjH$D4ou&.OF%jQ^i.oM8aj9bI[oilVWpU@i"_(
%d3PHZ(@E+E74h%L0%hW$>&]/39D1A'E2_%(r-[tB*N`;R-(ujp3Ia,+7'TSkD+3UM'_6]TK`BQ=Y)F!75[#FOO!"r^(2_C7nt]h/
%P:1e2T$3ZC8L=dZ$'g>m,#n.*6QK8YrMrhY7L;6AbX"rl&pK.B;gQVUkK&F?M^7<I(GT?#<,&Hg5BJ`m-n$r</f"[<T"mA:cZ4F2
%Ip=IL`n)LVW&D>hh@[&%jeA6q,07`dLg#*"7#^!IIoRtar?GC,>g*/*;R,4/d3NJMrMrh9^eu/6CKsO3Ro5BN/:"^U^ZZO7/ZG\3
%PtU":291oa^[aT4'oB'XWM-:5>#OSjs"13@r=M7&g,?JDJ!*Sa[&(ig/@%Yh*hBYR0G(@K<_T#8GkoKWW>JVRqS]n"1dl97:S0Ud
%kGIi)3Tu]ZEb*OR3PS[-Q)p\.s('*dras><b?I0A=/"\TVW"AH)t#,'[(q=m[T;H$1cfYAMK_H>^%HTbb*,2)\om4E'[93hcA8<$
%IsXW3,[,>m2`\AnZJY$OG6G\82m-ftbF!nHQ4I;nA9@Y4Lk'h?/KM2V&@6J[VHSVS4/dBHB$"W-BPU>*<"-dUB?ZOR/atpIC6NL[
%N$+0m8f_KNM0n]#%:kjVVZ3W_VAClP^)>N5\))dW%k#8+.O+^N</19I^/tp=o!lQfRqRIk=R28GDqek2TPjf&-J!ApD0nDjP`>!\
%_>=GL.#?3TfZ3)>AHgKU!8VGagOAN+I+OkSr=/j7?V]gEJcB3?Si3[h/2V8P/Fp4$X<6:ESa!g(_6S7gH.UC_h!5agV:[AE8Q8$]
%@c*$/5=Y##_<CPWXGaPbjF+XU0N\^3hB@m+e#6G8'Umt9ru"/@G,PPn_A+N7B1+LpSG7&,OmU0YP_q6hnCX%f&*NpbEF*3l;1ADY
%"RS:c$i?Gd$g)s7mRD8`&&p_Ve0rJB163=%5c4$VA])9Bs/T-]=rjt'/RULONBDJZirQd2`>-+1Lc:Y7AT!TPlB$E-XI&j.`5qs!
%eihX(VQ[?6^`%^ODc`-Phdhbjrm;5E^MI7Q^b,`X^Z;KuQ,qA0@8`E2;qsHMI<f$b9\Bn_br[E>Q3[n_-,qa4G)Q5<N#qRrfA9KD
%+_$amOL#!AhNfpr=]/i1p5I,HhDBf5neeo,@if(oeJE\ZhF2>8En]bL;Yc56>%E!rqSbn7?X:SD8MBd4G-\H?5%FSuRV2)'Y4nS`
%6_cQ39'36ZXq5=sJG#H8q"!OJ<].9Irm-q3AR32//Pf$F9^8D.`&EnnO0@M$N$dX:ZmL9T[%UkHEiG@[qXC82bsY_]*5\;2aB=(R
%Tk\0srYG4$<QJ:q'AW3*>-.4;88BOI)f:Yc;L-%P/=&+%g1&XMB/%=TI?2:&oc0__BkrM:JD9.(:n2)'Y4C\+=b(spm4/+SIu"9X
%1g(4$(!JdB4]mpAa6R,;pag4>-_(K@7c's9j5Z"CBtjh8_b]0eDioO8s)Z*sCH4%[7R139o)rB[qg=fuj)5ntKit!]/7UZb1VD`Y
%))L_)9@pof:/MG/=l'o\MW:?]n8IkRUf=n^!qR;74g3PsUW2gIgiSir$TLeLWWdNdB\;4"TL4*rIc>Dm=sl")APSq$_i`k5m$m]F
%0]a3pgp@9\>RHJUS.XshA[A&XE>D6.F]sFAVbMdX:=>J$qA-GS6\r+c3E._HMmWG_K*)D1fN8\tS4BephCa4OkF'aNj^dWqE;Xb5
%PB!_03$^0;E)FhU>2t\N#WZhX4DrUmE\ube^JUN5hk:`S\W4md.6Y#l.@A1d=e3_VI"tY&Qkqg,7Z$/`;[^R5c$'lF6oNI+rhaa;
%";^NE1+su>bXhVe4]8>tk<_^/hEPk2cF7$;H?"gS3p%V^AIG%<*!)n[JjnR[k!F:9Kdl-cAW)Md.TuMBUS&1NZ@V[DnA2%AEUKD)
%4piXAZ9ljH,o4J1QjLVcI-+[]j5qH'-&`o?)k8hmr)A8`*.%`s3.<bq&g\9mJr=>YeCGC57n@8bk;%2%>*@6-RC=\\!]F552)"=D
%k!1#m(/_tG^7\u0>XG6OcJK0oJWH*h1XTZ_cE/[\"eBWAatlcaCS".%Thc58S;+S]`&b>3EmBHb1]/3T1!r=q8pQ-6=d2dHp#();
%WJ/kF]VaB1?BThr/H<5&7,OkDX1I.;G^bulL!7$!/BQK%nC_AQhBR%@QV>[CdUt27:^0uLf*M1I3Jb[Z$:MmSX+3N;0Y->Mb:HMC
%eu,g-]Nl-IaBPDpL;(^mKXX4K*q>ZMTIgh6;Uu,^neH]X@R$kl$3JL!D#e'G\.+OBbRKn$C5#5T_KEdl-1s6>d%;qMKioU!1NH+i
%B*>tH\@J3Wl@]g$FM8<%33NLL>E<57.@"k/b[hI=-Bqp45p8\kJb-=S<0:?DmIRdu4*Fn-b%Hph[5A$7-/:\`g9X@@bhlggB-X)?
%Z!^IH!7)>h+!3.iPZ!mnOg])Q'KQS]28N!h?=:#ndZSH=iFf8D_p@]c`qpL]G:n$VB3@+m%FFpZD+tsqQTW;D:f*s#4t?\PJiD-b
%2jNM8G`]o_7Z]ZBC(^'VnL)6!9$:D+gL")F3ep\Tr<P\NP^3J66D>)ec$U^^7e4F:i'$X,[#DN`m!"T[=J/A%+#/\FP=#4=pe1NX
%b9HsdqEHg^A.`17^S.ou/F$*ujXST/-8A6iCR(j]C6?gXnQPITmdXAFl<,Bjg*6@C[(WIQ\gdrdC@aOY\$1NVVQsBI@Tnp(U_]rI
%UaPgj\Xglb#gP<V_o2-t891d]4BH,t'Y,S_l=Olo-;Q&?g*Jbq)>G4V-I40+=ucI7M+?YQM$%]]SQR74[S_O,;5tJ<6oA54E=M(&
%eu7rn)OO0?=bBRX&hQt[6KK`r%WL`cPI^=]j"Lr-`DW_%>N;?T<"sF[27_3m8fUV1Xsk27dDDRu-M;q\;M3[)>WPM[AJP9L;^GQ+
%p'gUeW5h5/i3UH#i]V9WJ7sFo3aCP2=q!_rQATd]$F]DZr(UUr[IG\oS&=Nu,,eL3D*BT(KF[,;,TSV;+FuO&c)?l$E-(l[qm&nJ
%@Z09,Ng@,nk<W5EPQj+-$I$4ORtJ-XV'`<AW7"cS+"<74YW"-pDKu`Ra:4KZHlUX*7UHAs_D.Ma`<i(9B4'.9@Cf;fR++mm,Nlcu
%Zb)$1bpC&M[\u,T-2HJ80tgAVZG\j2Xi"U2N]C\GZ"K!(k+4/@%7`&F`UW%Q>F^k%jG-j+(%SeI`suq_5caB\3%#!7T`1<0#pa43
%aXc?;dufR>prM]9d8;o.'7Fk9Ku8phF8X*(U2TW_)un-!5-@>b5?;/M2j]%gDeH$RV`gcEP&4m>%!d5[8hQ(@EGD0c>'e3bVj,=%
%0eRP3;_A)"O7=r&)*fK1V-U*P0N(;3(giU!]/9+a-eMHT53MndeUhfJc=4*-HGsC*kbh>U$]e3OnH6F!]'X,,SNaAEP:(#9r_J:j
%77P!U*jq\bUP/r+`K&"QoC8XP"-9n&m@V[Al`D1#'jfY@p%V+\rt-nBl`JdqI%6JLYAsCCPTD[\Wme7qXjNOICTh+6[Z4S!iU0M1
%,C\Ke2snUf"np%*UX8Cl'!1uFV&-)thZH"=hqWOWend8$]=#pSj2J&$O6:[^o[seHS\5SVHhHEHA9YkIs-NCu=b#\F]8chhIuPO7
%s+)iM$9?QiIbq3?!&q`<]1uldNE9F*n-U+:S5^FM<:;k\s/GZu4q8LWh-.9bO2-4pB!#8R-m2mmhZu4@qs1fKD"PFEC8I)W>.<C6
%C"CW0me,mQiN8C2DsctZ7)5V*de^$$Cj2[@g*O/XC]&CYgPLI6HFMLWM#bBQK3&!Zd\@'g2/B<tf@BWsBse-HegVhX=\tm7mVe*9
%.hM%":SV85m+D=&i(9g9Z]A:f:6=<3W03T^G(\I<&H/nR?X=5.qA+L27rJ&#DUs0>b^QVkT,.58?\tUs@>\eac2RZh4EFL!WlLH8
%RBsn7#NhCR;<#VNKq3Sd$(jt&r!^gJ(dE@GM-p2j?hWEq+"6t]>ZKd=n_8C:rX-VGV_L:`oBJ3!TdX-)`A>jor$<QjOMpo\JNTnh
%lbG2b'IV3]^[k3?9YK)o.B"UIZ&hmaU$07rJYQ9)]p#0R3'N(*:k&J_ORYI64/jpV*30Ep6oc!Oq0uL$1up.YBq10J+5TUaON.e0
%%V1+I)D?oc>5)t3^!Q/tkf4Ab&0Qcc4\H9HbWb)>NIT0Op;_IL)Z'`WGLhNM]`\'V+'1c.FPE?Q[pC:bb`bpNT%Sg[Le!,Jm:Sj!
%n%_Q-WZ$BKUMf_XGbApO)(cXK])sO4[b<C,m@Sk*ST=Ri#KZV>2%YSHf"Pn4:KjRbU0abRVaX`Hpm60192"go.sgS>d^2Qk`A=Fb
%)SF_%]tVd5>SMAAKqEfUITciIMeZl9$mkmBc\D\'!['<=Xa7Wes"EhG1Gk<g##cNI+o^9"F^O/^Gd_Kp",Q:9Q9BD`HI7$B<bm39
%)/_:10jqguY6-hap$t%`fQ`DMCf!G'ptYcbK\D<-5YuWtSZeY4iGVmGQNb^N^GRn*XhR?lf<-"FVM)h5\cNd-Vjk8'eNPCmf(uGu
%41!>03XGGT>OU+STPDb\Jr.lOHYtYZIE!V%X2BRbp1rKJAV$<LqpfN!j(4UfDWCPjcf[p[k'st!$+)A9HMM52?b7<RSE0HDr71hZ
%__@LID=ntMWc`Zh6K0u)r`-;fL6VF[lErlWg'l+R0)].<S`^1hPA16]!#!-24<eGEa,jPQ6:<jaN3.9HDoa\]9i)&8r8FmMRM2.h
%0qhYNToV%6N>h$(."i['PQ*QrqT<0-=WORBb>aGY]o]8rr`r+hcdC]DYD-?h>,!-#U6=P$c5/1#s$]<Nrr\V]hZ!,]=<%:`CsZrU
%?N+l0`HZ5(o4r_$2q#YDgJV*3%!%n4#Vc9m]_4Ra!5pAd]0I7FOk0)<-r_;]`qr7?fk8q7GN#h\!=FDDmjK;QcF4],)X[\'JaqO`
%K/%=AJ*YQ6B;.XKps/m@`D7c9=o5,o;C<8BrTfmoo[CQ<KWf^:p'QQ$\Dsg5*60lHQ:7K"WNnUA+U=$6RZ1)?V2_q?J)fA]4)bn/
%2H<W@d"p_I/d[1_s$`5^im5#EXnCZc.Zn*&n=WAMYBm[1Thj62lLqI]gA(K$Mqas['RnGE]Dt2:8.p0PK:uh\2.![0-P;bq>e%7X
%<oIKm"$hY7hM3,b,Cq>D2l9am`uE&`rQ\2'j;eOg"+r\6[GHCPe`rsdiPA2JFI/21;eu%FnQN7r@joHfp/n,E'"kd?&S4Dm^O:H,
%"0.re&s2FVe6H0K9;14lB48:GdqnTK?U>,#*'@f\`]r;gjE4LAmaV+&mQp`HejS<fUgUH'?,0OT]3CS:b)alrXN"TB,Co0Xh0lE?
%%LsnY3GS:/O#`OK^oS8Qb\suWPQ5rN=1kaV5B`0_.aM\fjD:JU53ls7dRJto7E16L9OPhDD*dd`7Z4KS]13X.g^HPs/g3TJ(djn;
%%&jZb4_@RKF$%r8fH.5;-:`f][#!6>8;.5C69A$4_j_9;&kiE^U5UrjRK0^KG=S,.kg'PN#4;_iOtf@=+UgYs=p!4tj=!Kh&UHS2
%Vu<.RJ7.SmJ>bPDDkJ#39Wcui8fMuVDB5[V=3#b-hkgV>Vu%b]&s"`(hIiVT%(#RD4H,VM':4$>6,^AODBb"?,EM3!T5g\c0''g`
%N;9eNaIIpV"q]3Uf35;"h]IlFYOiXDc;8qO5"iqGf:QJ.!<$^2/p6mbpuH<Vrg+DU'f=D([bi"J!0iU,<,]KurVbuh&dCg#"&a;h
%<%e[0iejYco:OG1G1,bQ0:4BpJ:lI-.AD)T##efGE8BS4"pt-Ls.eHDY=ZS,Bt]0"o_K6L"rL10J6mjWrOL>UWo;%S`kW_247?OK
%BkXdNg4"BA;feR3chUTh[tD8mHVoR)nXj,.'PJ)n#1"f')`<C9oVtG#7lf*"<Xbu$dVX1pWcY(3!!-)HBb9GuT7T*M_ouEZUBVpG
%*WRckC=V3W@[T7Yesg&U7BYG/J:#Pe>H=BFD$jG)2*tKEdsZ#dL5''ChTp8(ND0)$[0`:p)0tRS&L?k<=^3Y/Y'#A:gf2[uW<G-`
%Z3dPHAG([c(blg=.eb55%'(npmO9MF<([KI,S#ME2ncibJ?J[sm!;22Da_#0A;Mk1c>s(&>TfM'1LM$kqm'WI:lfK5E#EMqWX_PF
%=3/+_KDPc$*Q_!K"@tA<d#u,-g;=@^+a(luZT;ePlUrS.of'8MV!)3NTn7%C2u7n5+`I#L9a4h"o,@E6@Qr>S6FD-u(b<>K4\g1T
%T'E*"jn5"b!8GX(,u@B(KkgHaC>^^=#9/!_.2s^5@.(\%#]7!qT>GfBF9o23FR61=1<71XXV8lTMB[_(.`>9<4OA@`0"YZt2_,34
%]]BO$*9?dWGV@n)FM%FAr[Ye$Jgs%NSW@sgs$UOW;h2>H``g'B>-f:$A+-8CI/,k*57gH3=sn?_+2NC!)bo)BnWIclLNqpsdM_jC
%e4+h"G13n?s,<<!#EQ"CD:HBP$LSfOjeB?8Q>D7_o_fN_>S,]([!G"b3)U[J3#:"N1iakL5l(-=I=K#IFqUEMkW-]q-P[pD.Y?R4
%Os:.%NP<tjNV?I*`3:W9r'uL]Dpj7)5N*=NW*@(\!MKZ8kV`A;GJ)]7o<fO3J7(2Dd/6?ajLE\%0(=a]f.BKXZ6I#.deIaoGuF+F
%eSY%cNj_gjICi^17B.^3a_CN-.,[^)3l(4lAmO=fA94==-"g"1)Dl83oW8CIEU_e8e[&:n0VEbnql>/OU;##hedLp0`]tA-m(7FY
%pr24>NPIM!r[aAOEk)<?)hkWHm]Ms0f9%Jce]!O7;gr`Xni<IU((V2t2a@."IaX1_?Rr_di0XD!4BU,mchk]PS$i4*1OZi@/&*Ob
%)tm3IEW%`gOdOaEee?5p\^OY9Z+0>7QC'nJYnB\O%=%O;Q;0"1XILT&%^4$3A`Z`e1@*O@dX=#NRf?sk[,)r7Y5E!M*^=N*78l-d
%2n?,][H4<$49&Md?H#iSkHS?N-+hump#j1ik@edLhs,'G4);U[eb4uB=m=f!.-6r`om(\nYl:@L'_3j,M`rp:BRhfE>dnJoQ7a8&
%'?fODR94i.T-7/\Q;nPjO0@6TI,hQ$R-th1#hlp"R^$slT8G=a])i"C_qLOS,63TI#tVbJrENKpgR'J&.]"paF'IChhKaXTgJ-dP
%p:AJa39YLsX1c^E?.7S11<(2#Wk]:\RCptWI\frhbNl6%0QAZ+Xa=DYfLkH7k0N&,G%+KG"R4ELT:WIg3dp5K5CT-53p!T5gZqYg
%mtHe]g$(llk/=IPSa#9Xk/P$^[DZp#qXXIcHLZ[]fD=:B9'LNFX4,&<(Lt^fe(jTfjipZReLC2Y\i$X/P\Mpsm+LW&ooD,^dT95W
%3`W1u00?n=c>(@AKlEjnXN'q6ZG#)-p4fsNIA)qOT5dVcp;!3DIBB_K:Zge1Vkb+eX*XLqo0GD@P'jDlBD&][?bSY=:?MjRaga;+
%l&0-A:-1OaZ)"F)d:r#>=e59PoVMFmW`S&J*`WuQ^N2VpU=34BFPE;Q'WZ\RmVHViou=UBA,^do[<ZcQg$)JDQAm1rh9*(8s/YA4
%Bl5u"27&c9SR+N1eb8gLkS.Ee]%rr\T09-&>^1G'rQDkGKlhJuO_/Z<\biHhQtC(sQL)k5/bQ@&K`P;"*ks\4ju`!+%sF$%=f9lp
%.2SfUCcZth3X$Fc@D+*>#@G7:hOX(0rKmiA0;`B[a3FI@Dl9l$Iep[_j://0];V5?I/eG8]!"=<<3)JpcVDf1)nVhCQksDEB8=%h
%-biF"b,+Z:H$=S=4FR5*\?P8K.7fiLL\75lXI#p_A&ke%6fn(5B$mO*b2VkAZWeWE`fb4ADjJZjHoq9_Fad0Zl1?U+gt/,5]fH<8
%Rl\,oI'+`UQ95cWn8S'agM+:6R<nVnoMBh5*0a$m87QOD]hkW0qS.3e3ph*OQD[l`chb;4Bbmh)MG?78:%btaVeBA;-!%TAH:bqj
%QNfK6?;Gu6<3E[&e+KkJe#]p[QWU/Xeq0sOjP0(O)sK2Fe;DlCY#@TU.[?d`D<u@i:_Xs&F%oTu]?si^r(5@42cGtfd4*/t9J?8t
%pU\GAP!63Mg38FkqVo)3FGl]%#!:'UVq/%qG+d<tKWERT<]p@(S`7;`r(=S/rR5)VI*tbK0+JJ^WZ6!UkG(c$S$MX-;NdYerNCm_
%dX$("[5G8`1Rl`u^H14i)tUj%)qhg[dk23L@Dh7WYq@MA`teGu5V:lp.gK:i7\1(spmY">i,mH;HWj5U?MAO%Be8N=]VHMoI[be)
%=-Va3h,D(dO31ViZgW2iCm`s'jm7"KiUcb[=ukJ$9_gir.Mms1[.i%WKED)BPK:)nK9Bt>\\(J7e#,r1_l%k(jnnVGhpV\hpP`,1
%(`RjOV#8M<8q(]N-o]WNHbZJ.Pl%MN"kQ\(Z+IYhs6"7@kNt?(H+6u,rLRmUO1@d(kNQIm?qE$<B76B';QBDc*VqmHSlUcU%opBB
%BBoK"WBFUI]sQ=b:T`UIp?TA;rF^W2qe>btFhYH<^[]4/eiQIIc0l76.KuD;C<+0>]g<pVZaE)k\g=!"D^O%o]g(@LNVPYt0PfD>
%0>H]EMefA#Vpa&Bo"ljIpctQjFAf=*MoBl.Le=k1ohJD*bpmr1,*S<FkDVsJDKf#RDIrZcV<[kgrgGg5jdXCr)Tn:ZWL/,`Q&;".
%7<n4$_d7[^2K:Q7m8*"m>+[%jptcg0G:kr$>9Pp]LLt<3I)r?1ipM>9I9X%+f',k<rHTGDE2iubcH:u2=Eg[M\b2.tmd(o83qPUZ
%b<*st/0rg[D=:5ZlRW!1VlHp<=/V_1lu&*RH1@4sVdL>`2\'VPSN[4!]"Mo?o`"1Cm'Pu`gKRhIfq%Dg:<ag>lJl9;GIlUPTQ_k3
%GA<Ym`0-kLma%)cp?e)@Rnos?9nMPIkM<+WI7q3u\Q];j^GOhCM=9BW.=)K-U/QT]d;@^S;tK5)Q%,]FO8,G.Q:-Yld1=f8"1(&%
%ZGa=%T,=-&"P6!I_eQ>DC=0OQLfSHnK[rM)6#?OQS23Lm@,:)Ypuuk/,t@j@diu'sW,U^_'caub/mYDKp9.[Y0?g;$&Yb<0:JZm#
%CuSD$`GM-h[W-P*bF`XnJdK'Hb9iG6(Ja.3V_?%N34?k+7aJ>3.e3N32Hd7uqr.amc6h5Jg/V8mq5tPT<5'rbQ2BDrNPdH#V'0bV
%P3gfK@@L_]gAG1q$OD7a9+D*IGV<YmlK'9f1Ah09gf/HL#A%!,):DDoM>guZ<2IC'n6RQlIj-#+r*o.-TA1*oPD"IIkfNo3m9ccs
%$fj$l?t1:5c/7OlH:_rBe0B!f4t0@^P<A..@B>MV\@OXFZM]PfFii0u*?b_5GAgsJ^?u,&QCoa#ao7O$]W"i]&MP;cGLZM?q(OR`
%bW2_](Z*iXKHnYhHID0]d<!"NEHGSU&'`.X_otRR_:Y'BY_VQV4nH"5.fHmJHE$?p*]=RkmGo)$*=9<'i3%*El/G<<E-lXPFaQ;:
%gJmnX,(LG%\q"jP[QGQ=)Z<Z#8^D9rk1;ZN38QjpMC&5NOaq246KLr.%i(qtqtqHC:s=!h>dQk?KKTOqS'JM;B3hsW9OfbRjiet]
%oB<BS!LA'3,/\*7VI\uLGW,9No52^\.7kaGq+g;cnD1GE*<Bb*Y&i7n0V0bKTQUG"o'p?&Cq[_4>:+VJb<b5n<P/8[P!p^g7c8\A
%'S!C(die?,D#erY)<baKWL+ks,+aKFZ:3Z5.;u'TXUgN6^V$X%0tS-0c7(K^#H$S2liudc@*p370nAPhkGO\0D+:GB-t[\X,uk7Q
%3YbTSq0h("CGU#n&Zd?g?)V';X,&;W&VdC[k>^r4ckD1#BuM$,c[/Ks2<SW#3JTF3TI\"B78P%Ucd/"E_dY[Fk*K^7`2">]r_SX*
%*\SkhQr<r_^[u8ubfe@m3>G0]\0PcKd+I+.pXR29(1Pl)"6A3/l=OKBF%N`I0ubDA4:]itpi\[#>4Lmo<sZ@=@pp<TC$?W)qi4V&
%#8so*$@2qYB6F@<Qu$/Wg'Ri,kL>0pEX12mp4mXPkC$t5I4(?1B3+a;`kkK\gD:7<c=8nU(r7:0?a2<'1d-/2/Rfj--pn<)!hf_4
%e[MSLD/>a;Z99'r/32o5Y'bSsW;]7>5hgR0L1El>GtB:&9aHQgZV1QL_V$W75J&$AC6e!'3.`%Y)s4ld8dlq.r#"M@Y060NH@2E=
%EX\p3*E<)!GMN\3h!S\U!0R2/G,#Fq@/0SVF'e>:/41XFbYiE/XO4I&^QWCk;rta);#F7_!.;Hj:"YcZ@\#\H3I![@GMg-Q&5*Lg
%X?[Qq65F8=j2lqp)Nr&[aDs%\RV=J]Mgt+S=kq%h$]Qe'1FlC&;'I9:Z%T<o!'bBU,V/7Z*$dA+"q&3K!T>2)eAs0*gmDN5Y<@=*
%o)-iNZriOmLH]3r/)u:A..?Uj0:2(2!HRL*.0^_2V/o>ZhN(U07umJfq?7Ip*A.QU'<g)1`G>B#H.k@.i&%8h=&/TE;d/(k81%T_
%kBdmFNTn8>kj/fp1UABdPGgAmeDMIBgCj3YKDS%G10kb3gl,VIGP7SBE&<$s]NCdJLX$2PGP9kX04HbAVXp'[$)cXD!/`(T.G[QW
%`eX[]U9XXtI5c`X!496M*=dqn*;36P5.3"Oa/S8hoFU`5X]Z072[;KAcUgd7n>QP%WNU9.-*Hj!.U8O(\3;''[=.TlXX-E`G6.4`
%Cs7pK#4bE?GUkTdb^>O`1,=hMDCciAD*I&r`I!Rt]UabM7cV$+:>/j@#ZQrr1KHT\&OmFlT_V,gkqSE9a19suBmtNXV7\i2H\FaV
%(hh.TGE&\AE*SDlT4i"f^8QFMeY9-4`>f(qO@03&,s1RYBMc,M_2Ol'Q&uVNip'uhM2(U'B&ui)I#paKVE?+Bh%;C.$5,0RPXP,O
%PV=_lO3RR3&AKn"hB1POi(IRRm6m'[_6&gtafA:W8,-aQ^.ph;ipF^-:.58I/WU3B$sF9Q98E9m,A\&am"-]Hc78&L/@[W]6!9G/
%LpH3D"HR_Sf:F3jAlk<caDtQHnj4rc(+s--;8qm5eD1XA@`IR/mH[NO2]]`!-F;jieDr,g6JM#fm<r2Yl:S[ZEOS3[<c!OPE906i
%SZ!Kg@\*qNh:QDGC7u$38FINHhX*b@2QTUn7.=nW]P?Hr?2^@JI=LFpCVdI!,ATY[/C;-*dY0k>=DVeAqd,jmFXfHZ/QS?%S;7r5
%G/i,t,Qm%FllAK)2#`%eGqWEI40#JB%+^+R&k8Eq*aTcike`T!m^74R_j/`5?A-WO^_.(:[a4pNONg^5)htO->"SP%UBHi:%u0^\
%I04+j6q__Xc;,>tR_+!g7<gmJWXpFkSJ]NRcX\SA=;C#i15_@][<a<JHrklmC]EdDIRB8H_@a6cB.knc9e0OU0>#_sCZe*MGd=N:
%FrdBEjIL'/a#s'u\`#2JICKC,6SXoP%eE^nL\O>92b[XYfmn>cC@qcM$R+Nn&JD3j4Z,<[M;d<D-rKOmM6fWfb_OlDHX<1[75$Dj
%KPl_o6h1`q]:"T%M^nuWZc*.j(K5bS,\K"?,[50Hpg^p]=aM\q^]%34f$)]4omGeq68Ib6aiWVj/I#h68Jsm*jj;,=W!5'AjAQ-"
%ae9*fTG-"1j5nWZSU+hn8NV^Jb+T3gTTc\ca2t"_cCbQd(*"fZ/i\JYc5%BILFtQ=cC$7DH4F5""s)6'j6+bmB@%eJ:EkQH3.m7.
%10b<[F$jt5g7'*!i2^d)G+F*eeoucj7>UTQTY`U)+1?f]F1R:&m#L.f]G^FOm'M5L0d=:YF$o=@pKusm/NZ<n,N+FAQ+=5;#'ZLr
%>cs_F]YOJj?>FohNJ6c;nq#,X1D1jP/i%hBaOM+uIgf'cV*g-)q%smX$5c[]BdXF\1cL)hH)P-Ee!SNM)#SA<GUj'm/0\m7WJn/A
%-X01G\?Y'o!8?89$T-182ke?2_eoYJnFnZjD<QfG+@,%11bU:/fe*&$&79,XM"0++16NT.PT2PJ/'8X/NG#B\1*K2e3$e)MR`p*/
%I_m9SOcrIS;ial9'B,?glB0+'PeoCZi!a+W>!Sn8&LR#SS2g\,B^%-0_^*umQATa-`u(dirgHR(8rJo=B(j-dM';Hb*e&jd3!m[d
%F')b?H$g!?d)nR1XmVY]j#3`$p:tSOm=@Jc[3Nj<o>gFs_Y1c8cf=WP+YMrj&!=oqMI;/N"5+:FhcNF$:"4.p+8O?7c$X1I6Ve"*
%VD8,$M\.WYP(#2,`q46hEs@*XnWJol:*f]c,^Ul$/\C&'q$q!F$"f6a0,G`_HlBeG$$5eGGH7Fcq0g<,g%3i$)o:4nDhd>&#hrK=
%i63&'DpAjMKVO*XT&O`HMUQp[BA*kD@>T"g1F-,-3s-uX!H+9CY+6rP3dEq(*Kf@iI^/FI/@bfSk$tqE5_]Z>J\@gRpF9i,J#_:H
%B>ra%hYUV-QZB0tG,,WpKBaF+Cb[SGI3Ao;+]??F,Kd]PBOlJVc`SqA$W`<Wicr7;A9RY"LEpR"cgGc2SUep=k:-t'JD78d8-7b<
%EK23q-\?XSC8cq^^lWM*`+8'\-mE/nfbJ@#_aS*@?BR,D]A@a%A2#<DS;<,sZ*1jG,;T,>8nuAhO-:k`7(6TCpkXm4^]1]#G!lO"
%1K+4a4//XH7?#:jSYnm(d)M'd?kSprb"*Nr,-r(/+qom#TB@;YM3OOJD&C4:;!Buk]-K-aA!uL^L#eps17%Z_2b4@@PIU06A.j<=
%K7Q0eqW:416L&6;F2R^jc<7nF]obRLO%Q#]+7lAVrJ4Yo_U?JDlU$8@_9fj+E$60YOB35EIl*7,8`jMJfIb5M&ICOJ+]'O4qsgk*
%Wuf@'3VPQaPkbuF['M91nR:L+32\FL1ZBaP%l`qPA'sl+_J!a@q/GsO4a0BNnEgAA_aWIV3_hl/A1("fEKe\'$U#)D,5H0Y]:la6
%3IuQ;q'I<s2OmT-*8L_ccA7s35+GCakCiHcJpfAgAY&53p&m/:;8ItQ-',\d&t2^nfp36D6pbD;"F)$XI2681b0pc\G!]M/_OMaN
%%."BDIYF,qj)gk[8)k>>+mk5Z@o$9:9IT-tBp!#+*RDH4!.4*aO0mpb%.T;\2]Gfc9#1e/qt_M@iUp<._Xb4ugK`C1.FGUOc[EDc
%-X;]-DG?`"Ngrl0DiL*r[PeOgBU=oC%@FL9G.('In!179,TD&EZ-/!.iME_1oKQ'nGFS9e^lcE@VkG[HT%42:%I>R]ZCr:RT8_:R
%e>_m;`_d?CH]f8G^F,G3qKjt8WH[55a@K=/Q7%iX$LLM4,8JrN59gnIR7'LoB!6n1"7=gokF93i$kdMmC8=Qnc5Ugi5RasW@s@:L
%(6pRO1>LMDHG!/7A1\R.7un>)W,?tW=jW@'KbI_5P2ZD&<4J(hb+V_lr6HLSA1AST&J:0I3Hckl3CEH_=I2GJc^oKtJr*U6Ot_]X
%puL3Q&Ukq:I92lXr47q)*r/&YMQq*G"e_Oka>g?:VgULU%<Lo#A2nsV_)E;RPLq'1i<5^sMkW=$<1[IRCNsm+CIkUl^7>r]m=Gi)
%K.7<',!">oUHeQXo[N,!5-abMk6s"45DUWU!qF=L_Z$R(==TsB`XB`2n,i.O`56dCLS%>GAgt!ts-QeA=.ac8N7QaUnrS.8aa%/3
%c,GkD8k62A8OeiIm)V9Sc-<WWb>XtRDQ2fednd^e4(J7B.,!urfsan#WO>U#\S73Bje#uU&<uOIaSL+<QYP9Gl@\j$q<+<N-11jf
%;>[bD.Wt$f/e5(Rp<BhbIOo=6?Kh0\J6`C+]=f_t:7_.Lh=(,OfHia<Qd:,OecIng<`T:jj*T[Qp?a\V2k@SM6gmoLL>>gOGLeXP
%aKE^^Hh*#+ir-MZWcpR2GOF_gX#Y=8Sqta&pZM'F5):.d(5Ab.+60F1D_Iql$8j5T*5:NX^k+_;rGlh@G=PV&9'r>H=ESun:Ynq^
%s*LiU4HF7Nh/h\Mg(Sd&bM_BH=0->QS)g),qJko0T@?SU?;hXp$?n6a2,6'*M"KPi_f$N7m->%hb059f>^-s#LeHfVi=!Ep/aTd*
%..DMQV)E?$C6X'7U*;b]-ALa^U:_K`GEMA?a#s;RTX-eqM.P.]\JIWQ@3T72H2.K4;7Nm:l+D'$_U!uT2OhuB-5]BN3h+DFQO`h&
%ZIs>+PS9O22P"d9HD9)7?5lIj3?]YO2I4rV`Q;Z>H*,P?YJ#s[:$8$FRS2hY1,<T&SbLk(UpK=`F%.LE9c*>iX"gsFUlG+l/tM1*
%kZHM[?HO\Y#SKlVS'Ge?dVAH.ZK]#Bkr`k-))Ic-C]<ZV+X`RMkLC8NiLO@7SQ@G78']2CflWuuCq+;m&<'=3S'EONDFf^TaJSRO
%V=Vg6)C(`sbOTc<<f`kIk9Y);pEiQXS'GfWK_UfGc),P?0H9/fNgNQ(2:&ue,9pjMaYUl%<W_p:LtQn,I\e\Y7a.`nOC=WArg@#d
%B%)#+,b76^B9_DK`cM4&qYj**+F,>7%Q,tm'#aP^rp17&cuE7LW/4<Dd_]^(9]Edt&F3dlpXO,*gfETL>suS/kfpOKOckNps1NBF
%amd\K!7)Vp]8:\Sg=1QG.pL>jp-H12Kj@"13M_5^*B9uGll9_1gr#(!@05q_M_8Fc4X,<oqTLo^U-5tU1q<G(*<buE/^&Feh2"(,
%,$sWF+"!^R*q>]2=HnX3f[no@fL=F]G7bMQ-?+;)=P)?M=e*2Bh*k+<o"!n#aGAi3fA(X@'\sS]%@O7RGg5'[8`3nkh2SYl"8%1e
%(]1/o>jY<@c_@a1RFA`e?<2N7S]e>]]GJKB#oT1&kI(&'aM$.ak@7k]ZgYO#f=b*/oR].(9cR$:d`C6d+ktbGD'D@&j<IO-mgWK]
%"d&Q0TVII6GRd.iqdMpppL%YuEai+cmW9;E&KDB)@Q,"+q'WKfMWFbt9k/_B-l\j(A3Nar.>5(f0N^JM5@Q^lW'&t.?.dFn*&u:P
%\?Oq[_@\Cp-]Rqo/K!FNG'@E_T6b5pZ1^sVF=eqfin'fKUappXm(:(Sh9ae@,[i%a/mhSL[0S7;]C.UjBaLlK_&_$lo[)@N>;Dt,
%r^m8S7n1Zq\X;FeL)6&c_=5=,a=nh,?ab`qhu,>Q(WS6X6n<i#3eqE^r)3Z14/:V4mI4JeSU`:Z_sLG-#4Y5p(h879Cp-,_KJJTV
%L(PX!,M[8$R9t5"2B,7_:%$m'YT*#)=l\Q!E$o3\HJWX#AEJlt%<j&QPW*\JOj?aIj0GBEL:b7mq'4sU7(_D1k22OfZ$)o^m\6:f
%^4#`=G%)8Zd]?2tS7iKtYu[FdoGcnu#GWZtW`-gkP4"h8=HAPj&XrO:ZeNM\kDHV[.@M!akDHW&?=GL#L$6\L'5N(&SdW#]\oO29
%p4:IGOfllkD&@I8e)9@,bhou;<a_M=/an&D!n_J5,c3)tdc@IJ][N7"P16*%K6Q[p^8R&R2"hMi]:dnqpZ>(]ln\]E7S%"",/3qb
%r6!&tYQO@f.t)Nf8h(jcQSHuDF@?pP:k<=S_]"9UFM65T$^=EGlo*'`H^,(3GMeWDClW9[mD$tBL]Z0gn,XD8iuCcNJ?ar:p\<MW
%$a>2meIcVb;E>mcCIYrcn*2Y(/YIQ.8`W@PM-]i]6OGld,BAgFi80I[@EYuA2?O2tDHH/M`0)ZCDpQ#7m(RQ=[?XjA8ag(k?]!k;
%V=aq+`h'bE(WP)T7qu5:V^B$M;l!se4`"'NMWLB>[l-,0Rh+-LGtRr]iB],4g:R7-\OCKKS&aoBG*^cT;!-XWe`jiYErY!Vc?q^E
%<VIPAr&T9!9hgNlHfe2q9S1f_Rb!u-W;G\oR6)AF1LE&9Y'da).1+>7.nrA"]&qbH;RM`6T2'IV1T+U6K3+tU,f1I]E&^kb)?-1E
%00NV;Fui]#jZc/ob+49R%dN[ocF;8?mp[O#eS-R+F8r]:Qd6\Y>.8bNj:e#=q9mOR=-S"A5@6!F_YDX)9n,B,Y)YkRb^M7W@qlWT
%AF9dWUJpN88::q8<N88hIhcNF\d7%;W@.,=*ctVXa<^t#oX1^E's"Pj6NJ"M3G`$*>KifO.dBLI_1aLEo#&+?K?rS7C?_$iiEVG5
%=X$A!DTe`?TST/#_0?l1CK3o+g4HMT2-a1Nh[WB43PCR=BujR`^3b2<^<f%-;7#]+mLJ<EkZN*Q]@gX\%*JUcRj%T=2;hM]3h!mu
%Ytip)j"O/Io@G6mM+[8WZk6fPf1Z'^Jm/_D<UMJl\&(O=\#rD8Q03I=HMmP?AJ4/a@LaODhU0ZW-9(3Y$u")QW,EGZaFTo0EW@?I
%MhQF.Q,$[/OlBlr9dAr]g<R%u*=R!g#udm"c:<?7VkQjQKKT%`e=e.h#'Sf2H.WiS/)Vh'*h]3pp!KK`T4Z,lXc,?Wk[T\#;eSM(
%gV@k$&c.V&ai$g2lZTMo2FJaWq;]mFj5a<*LR`E._IZ,=qId;5T5tR[)OE%PJUlpfWIWFp\X!oBo(OB,Ee`Fr1GF<-H[@s$DJ5b>
%A7Fal\19.WA%qc=pAJI<1c@20#@K)>QY..o:$Tq7BZt\^EYOH9,btmF$ThC68'D$nC)oA(8fKYrd)hRP3Ii0KC(-4.kT#5)%\W-:
%j<:i0UZMP3am\Nsq)'n^NHuZ3@RFZ,qM;_6*5K?O;F@bj_c;W@?A5)Y!.F>sO96>aA*&W/Tl8HPp5u+^!Ck<7o_"?-0>*tsku,5-
%De'gX;Eiuse;7MS(D9`8d%u,pkX&d<9DMh5llWg'O%)W0]`BeOV0kB4pWm0gLGXa<qI_JC)ufiZ;(gu%N%3bYlCO>W'&/h7-L>Os
%q,T`U(:-T&%HW#=hp@cr554o5E&Q2Op\O];2M&3.`4^W[lr/djY?u8"h#u#X,5:qnIl:8jHi5/M=,q^4T>6Ig.)U\#8%R;j,OeaK
%=>GKMDI^`e?GGGS\OO9acV5"s>Q*>=<CX[R0,V(3q^[H3f.Zo"^Th\W@JBU%!u.6O]maBO<$uaj?gpKdZ/cICc3!G,$g(c5NP!Z#
%L:u1l=OF\GZ'"MJF)4\l\CGMV';uoFq?:f.MG<;@^[Q'"8_iVJI&l.Dp[S(:lSmUII&#QakA8+cX.R^0X[D"3kJ*RHp+i%_rIPhb
%W#QcV?GF;J'XDY);H[K.\,*Z,?:V]\06j#lp&66)oaBVqm@05!jLp"k=^]Zm_O,TZcrc+nLdfX:W!D/E(S1<@\_#.S1s]D)7_Fe#
%aAY3Kn)G?Omm4P8Dldc8$X_N?[6u!K[r$eFrIQu:gA1V()if*F?gr=^ia/5Hme*nbXumAmjc#nskspC#qM!+t8_iVJI&l.8mc+]0
%U_38`^6&rT&`2gVme,VBGl,q,S_c&FY@$KnI/XajKR<ZLOtH+9WF%[b]mcR6A`)c3DH9pt1IkWP*:$qG?o(<qX<6b75Cm[T/DO+j
%iu:/ifB5?3EMH[>>Q)RRO"Y5`DSVhoO*ggp9nm:@M.>H/k?u2Y>Q%)G'=cYT-aS*Ul:9sgq"OUgDfd0=licbL$[18B`[7#CjF+(9
%oXL_2A+"^B7eS?f]%>8(#1?`S-FA-('RZsRla6JMn+@(&eM!5I?lFoE[Lj0^4Z2d9p\G'Nl5*oj78J^K][]f8.#rGRhZu-a#l"2k
%c6QQ.M4@ijEj&i7rKcL$lPHWB0KSK"&,#ppN<Wtnb(8f2JK5hU@$fP#b1jm-`Z<ceZ2anI]^ajH[Rd\a,^Sac@TY<E-RHV&Nn)\!
%QAbm.-=E`:eYZLrL/2L*\V'+N?Ku\m:)dE*rn:[E21M64EuS%h;?cZkFr&D"C>D;KDK.RcJY9s:_p1ar^&Fq6\@V3I/Zu4I?8%m/
%52/]+ngC23r[b6$ebrhYOSmXPj$;;sAM#D;]17q)_:RGREnmaG-te=HV4@!4/sV@Oa.%+KoUF"b_toGbHhfFngalaT/,.@ga3)<;
%eXQ,SWqVc+rG#)Q3_]M;G.X#5[s-G1mJa&db?2(Io4Y"IF88rq#u:AbgGuauGhkC:3O7MM0(3`8'+;.gX-4EB[961pS8I`>IXEK?
%VQA!=C:a5(gbl1dj6&X.jg>8`#akBil53#eA4fDX=Y,sh<6rmSb"VaK8l+0415*m[aY3&S0V.hYZ!=q"UamS@4b>1Q(U==H!+Xcu
%<X_76caWJPp+YCk*\B#P=9fs+k-#QPoXQQM>21b\e[Ll.Ac)8dX#L!=HcF:["RC!d]<\qa*o/<6l=5G.,lU[kQha-lc(C.ZXtR>E
%/LUETY3^L-I>N3L"Id\$[bdpM[^1hd[3Hp$S=."-N8&A^VJKiW9Cl@l=LOPur&&VMBt$V-?o,&mcsIGZLK?QoL$r`+[.\>lR\n\L
%C5XK!B@MWu\f+5-)RYN]E'8*@*[J=-EiKlAd"G2-*HgWFI02Z=IM91saa?j[akQZNp!m-.<'!C\U/4Og:OhX;nA`a9mI+o[H]dg@
%c6=c@8M/uSAbPf4?ql.ckZ;(S^F^aqh,Oehm=S_Rs7bu/O90ig%<EaY0-1Z1pk*_Q7=%q&.BW23V.K0^/)FNIncucEnGmC/pB#h`
%XP+1+@)A($-*t;!5g#`9/=$+h/hMqFEmNLPBu'Jk!iWE:7;-=[?G#\)q1/dK.f$)_?6nIpaju("^`tQGEV<2.93>m/XR(7q8.u\k
%-:lSf'*Q`<9^TrA"s_;a7.J.G$e"ACSXdpGXe%O8qpaT\F$T`sg,)!!KFZF;9'5tX=i/f)n)Xj&5'O><cICEW=5I/&(Y,pNn].M;
%SrC4.oh0I5]t@,-^`mf_bl1#"jmnZn3ko>,ZHV]<ZFVnp5;2K>Z>1oj_CLmMo!u22?:t2r;`hV'g3iL3RM"7rc*1&AP6pXPGSuXO
%"R++>i9NgdSHoRpY8$[*@!<YUh5]!(bre4()qM1CL/0[tIsNtC'5Wgr:J$Jf7$5C=Wsj@Lo2ahB*`S!9SjA\aCp<GW^?YDWT='H-
%r`FT=^YRM5%_n29QHu`SOYD+/eBQP?_u*a',?I#\2U,r7$JK;qJ!rb+a(VDHqF/;P4E@?1qH%CCdhbJ3r<GdI<jturWM]5^YF;Bp
%WqmFfli/\Ageo1h[XVFcR,;#j?S5+p<hBkc(=B>^lsh]PltnCf@BT$>Mj;JdS\kAk1**+1R<<MRinP.)N)GcgL_oK[5H%D]n?V![
%Lr\CSM><p9'U,1S/*+_/*K[:jkDB"(F!IsFqK7QkeIk@h:g]/&@_ejWrL/U,@%TcC0HYAa5^9Ra[;V:Rf3Q1sJ]LH[iTk!GPNL.1
%DMJ*Z\[b8l-G<KFS5m/AjQ:SHNG[!UF'FKJ1@]$E/s0Xk_#IZobquU"Bc>T</?LH9ZPb#lA^;mJX)D;cm17E)5.Z8No%a=$93;0>
%/0FH^&s;!`;'IRgRDk0`j\G()Zgd7AY6PF,P'u3-35rT]3)JE`Ick*ZhN-X3d=Mhb4A@]2`!92*QJn*A<0e.'$D,tD@WSPL<Hjb0
%.Q3q$`^JQCS#7\)IP&&Rg!l8u8p4^X,7Ir7qbl5^(>aRi\+uVV-!0M1%^!TC0"2#!er%GEUZj#oF_/!e?7A\%QZamoMtPQ$[rZ[-
%Sn_n<CHB()[:W0@9D<e^40(U7@,.Z>mNqAr_DX=Y:qmi[.<<9*Z!]@D343He#7b0$1UFJeq7^(\9BF42H0O:jZ?+Gj\%W6<6@&=+
%dArS&C69AD7_->E]&"#\beUL#.sDr^l#a,7fXU`*S6u9`Y1B`CBAr2)nWEk.3Ba=jC3/X^c0Nja@5I,dr1OOcCu;"@!Q-*+S51eg
%K6mO!Q.,!*hpodH]t1V_pNc$-Y&,Vu!Oej@2h#?P/q8s:&r,k:\b<biTb#\o7DcAtK'&q3%Sd&Zog\I-Pl`UQ#ZO1;S#[L7_tVBO
%jo.sLY.VH]r`M36leb&Q*F%%#ijHA`Mt2@N`qjajA#D<L?5I,"Z@9*nLshIBAR2jIIbUagWkNc8h^UL`Ze_b,\Z>2$p.k@nqREmg
%>r[:?3rfs31Zc)Q]i2e+]u9kS=a<`Mb.s8m0J?q^F9HEtm!I]<iOtR':6&A(3Snj=js'jI9+D.%LkNckWf0A[2W/nTRjd$o5)ks>
%m(%-C;I;/i[^Osu/-",-%mZ)F*IpMj\R4"2-Ft<^b@eeO[^0OFba5.upL3/lp#_nNr3G.k]Xi_f\&qaKfD-O#3m<7SR,(4$?s<gk
%qcI=);^rMHk?<)7A3$3QlOCi",>4D3JB*smj:n%:J0TRPK[uP7N'nj=)]+PCQ%=(_a\8uK1IaW5b@Zt-)Z'?+F'DUM!spcd=HB,m
%_6Xt^M\!#/0lHdt(bJ*hZ&t"](S\l?7o<,H%(MhSE5bE^lN'hC"1,)J]Js\#)Iq>:8BX8F/Ws?^+gfsIg,DEU>cIC;kepWfVNHMo
%MMWX]H:5Nn0,1h4nm1>c?+^:3me5VUEYh)QB/Fo=<L+9@k44/Rj&<2Q-?8qHHKC8FIPs\,qdKeW*O[X)ZV3ldbg2Z6dOVeaa!Y*c
%eT*SF<&e7`P:H%Xk4W1@;H$e8S(4kd)uaHMDe'>5+3@P"2oo*=W2'*7=l6gG?f-PT3)<MFElT9=QpBO&2(-snVFU#QH[/lK>.sfX
%/>l:9]!5f1D8#T^abIW,>t.4Ml\Ve5O(C:?OQT$H7+0o/Bl7BC%I?q3%Gt$f4Xhs@N2>T3UQasa:``8)`dS3]3L1ZA:DdEPr^39%
%@c=$6Z!F[MpQEP8HnaEJqSb1>d?WEN$m<n1fD;g/UQG]k#LY=8F=j*djq0.L.\CI\,jGic,r[8L/PW"/=F,AN_ll[Al+?PV0"<J3
%RT`,hEh&MHH8A]?naTVWLSFc8qIO=@?s=FPi(h9tFc"jLrA&9:Q.f0u'7AllGNK29E-`Nj[;s7??MYbo0@;U\//\KHLu<l<\XY*q
%"_4@\pr%e>.+D#u_a,riOb$rQs&FN;m7a8Ur<t*!Gnbc2NJ5XLQmNM&(XUg]qK7#q#QJ@%@BcDrfhRg2lnou.\PG<_B;0hWEbl.&
%o*<m2`r+M*7$rPFL1.7tRELf6r7Pk!k/(]?bAV\#TPJTuH*L=B.pD%YnbT2ge5<X]0>EOIjitd2?=BhH10;2hp?rAN\Yl4)\+@m[
%V0i5i]Xk(KRcWecT1XBMTqYW72tPY+Uau4!RF%SLWf&/N*GtO+DT&"=UuE*+7n=gUY5#s2$X\Jqk`39K4k7r-j9`gT]E"!=K4BIr
%EFND!&OV[JFWV0I*BEINBMT-\*ufpn_&E(3Hd^)oDXTI$Q1u_:Y_2A-B7*An4[,1#\P6QblkmL/7.=3h4;G.h22KT/\U)$_Oh\(i
%<&3?hCsQM_A$KtMro(INkZ[u453q@q_Hl-uim0spfgb].iTKK9!^<_cW6^>.Nbp6d;UH;\O.X[NC8"f-'?NlkT:haoC+lhp^L[3a
%GS"sFC.!sAk#/$Fic[L8O&6h5:Wj-P];oIHKN>acomOfk\=;M#RWpUTnk.n+1@aE=h5g#U:-=qfcnGFc`04oU?(M#Z`04nr-3)q\
%+)-^Qk_U+&HN2*D-dtiYJ,(H>SkOKQ$T;t`WG1f0S4WUUE*gTq.[r<[Nc'22V[Pl&/X$f=`8Rm#"K<E^/q/lY?H(3(a1c<";1)$b
%d^.VM<U,I+9pH&ap.Ef1j/sHW^c[I6g.a+U.]t*69/E%Pi<O'GlWP)9OKtjbNQl>.S[K>Fk]+V?WmrBd`(>*J5*aC&R^fpi.G.?O
%;GrMW+[0:a']!q6\Q`@jB30"On@Hb8lLmT6V@etHd)a2,b;:famlfZ:\@Wg>\bFa#4%KK<]_fdajQBj2`T$1+nKDdgTCTMj#P0<&
%5T^A<^DCY54[:o$c_i[>mpVm/2EXg,KY?$toCA(Vg[,YDmrh`NjnoiWRcZ^3090R@\mB,+N"tOM(\nLu488!=58T!Vkd=3rWSJUi
%;rF3O8'3#WMehG2R>lk])$rO:a#4R5S<lAj8gq4:lH^FR/#n8Sd`q([nW=+jSC^T"rK]`?J5-nm,SY'\^1D2V7ti,oYZ%u>,u$rj
%'(d(-1IF7So>dI3"ko%&9*^,W,U?n'@:(>7R0lAL[s3<OOH=d[3PG$XKDCab`T14^M;;\',,N(%k.R4>d"(UmjqgL'_JWc/QQMTt
%%-<<@V/aL?cg=jV(Q<Gi>>n<[(lZ\K@o-]M3>tbo&K6HOK:5o2O369B]Y1Zp`@aVr@XJKg[,f\(eCdre81KqtD8H=.]8:W_g!I3W
%V,F)ijSdfpZ*T:,M/#V%2*g/2__n,W5c'ApS0o@?/SVkSgpCImhUM7Ja\a^t+R74Yo[OV(pY;+tXLB%'`e'l+7$]lc`nX9>O3&jh
%M*POlOZ5N\*.\\"ibh(#(C[e&iA<Fq(u"IhE7%cW&*LAAA,WX=8=Sg\A9CBER]"XY(lO7XD/$pC#`YpF92o*KQQft"*&JU<']VXg
%/sk37)Hh.)SZ#GA\6RrnD=s,eG(%JtDd5H_>e-hU+4<*QA76j0Zr=!<n,5QH3@hCSB_o#_K-PT8J#B50+jssP%kDEHDs+Xe@OYki
%T?GsKcKc*7@\W\q1Z25[OA*)>nOE/qM^b*b`7+D;'-<PB6T4)K=0P!"g@05rOX2`E"L7=E1AuOVX-65L3IPLVm0RtIP5M24X`pA!
%\h=S98SL?@%i442V<"u]?qGfdTt]4kdc:H$66EnE^Y+Y^l(-q(h%0MCLo.JXgBUY7]51>>B6m+`fFO:e"5s.Fc3hkr;22!&*@\pH
%=*JZi3;Z3&[%]`K,ji$i/^c,p*>KIMf<T7,cVSNtb,G3@^>qnNP(+q!'2W%ZNj78EXP&r0>Erdf?<7s1Cf$S8V9S1(CrDjAj[J\$
%=gG>Dbs-$H.[MrL)tH]m/0&Y%cd?_QV??3rK%gTLKs)^g4,P"Vb"VQ\(,&_#\W%!WW0"cD:!m@fr68ArVfLXO,fD&s8i/nUro`s<
%"8R:8Spd`RZ]5+H2l1&eI']kO&hh!>BA'3FKuQ=Tgcj()LWY#3OaY[70k9`tQ8\5WZ\@f&V"$dR2L+5Bbl`[6rV1HVg4#L*Z75*/
%:.p"=IJmY?0N\hGn))G(/5O"o,s0b$>&:(n(P)6U?JZ17qn%\@Z0[?^a!l%fL4._)XE<q9?Sj1rae.BMn+8e23I4`<0PHXDm-61A
%6S,4_Q>6rAVTrp_IMH,J.3+]"n#PR4e4\cmr,/\.]Y*nVA^VL>%A*.En)S.MJd/lfO'*&n,&tWH/;n^KVE&It(Q[ki'T7%uB+#us
%QK5@bR=p,^Kup.JPo:A^p"CWca\I`U<7ZDg9/IT9JYf!>;]2^MI(MopXIYQc9MVsFZ;MT:d($C'FIjN6P-&?/:[cHo.O:#,4q!gW
%0.WG",DFg/C#q4;>2_K).g1eFaPYTR11YOl?kM(@J!hTc^9;1lHY[I%.Tb)>_RfCH<Zb%iFGVO/*%LbMAu-AmgKTTWI"s[#Gp\`a
%X36%*B8+Igm=Phnf0#e+6ojpkqdEU]6<l)u.OtA2)mR%ik2L"(1uk"QT4Yc`ghj\_>4JHAC+N<9<Rm#YCV/<&f?`d_m?cQ\5@=(a
%5J@cV'[B=_]4SKVIqc[Kj)en)nksF\dKeNt-Qb>-fX=;kY?67[[Qeu5:Y0CD2s#A']r>pVhc[uOIAc_onhn!6[e.uB^qG)/bQ0oF
%orrIG=ZOu&B!9g#7T-2\-MMYh[es*AkC;g?X"<'l7:Y\!A,WsBe2c7;g:)AIk0D]LFL?O,>ZSF[2bNnCH@9+*0<DpMr7\t3;\#l7
%.EqjN/#bP:>an(Tp@-Z`*X6Tc:sV=M,W-,#$gV`!,^q#!1N7$Ng<A.h'h!-/f1\FFY9&Po?=kaO^$FWY>Mik81]*E2\`^b\$Vh1"
%96"U$F8oGn9is;j^R29[iLR].fdUsu0iHFK&Pf3dd[)9'An,UJ4s`NjY]oT&G5q0<-*imaVN\UK?6SIU]\G=4R,aD:WGc0%JQ?e-
%,3:a5fX?hUP[B@8k_AI4N?j_27hV>BV2U0mY^Gf$h.9e<j'b<><DF%PoL+MGodd6b:JMYcD\[`7in#^7/FZ;jT&ZNhc_Ta7Ks43^
%E`#$TiqbY%a;57L<^7WN+K(cg6NsVg1LBIB,TF/1$Us'tMtN?5iF7!'WUu>1mhF%TXl&ctLuRg="1'Vfq3NU9R@WY%Gs0:@qg>Un
%SIIk\5Bo@ddpjONGNF,HWA\ljO,=K0$"NH`q@;1n9[`OS-T8BYmoarH"LWeE0@C\k<ajS'3V'sL8mkdc9B<FV8I%MRI;bb6o(d0B
%`H@B0lird(*cglW%H?uS2f+Jm24?L#lX3Ga`r9h02ut`$_?0[8\_C>aT;6K$hfVho'sAE(Y0l<J^35t,[q+qI1sF\9PsN`D!;cg+
%WpO.BAqW"(Zc'k)b/f`nMA2^]5#]Kcnn+gVFk1B>\Ohj9=ShG*H_79I+55a`YJ_c*Z$=qP#g6a1(,(#gX<pZk@e$a*fFI!L=tF"R
%MXqlFT/2pH\MA,AVctjs%f(G5NtdB@>i86n8*+**JZl]L=sNBWf/CrCX?kOQ>=psrpgBTKfNo;pGN#fo3@umqhIq8=V+d_kG$M:R
%6[oP'n2'IaFZ$ce]-DB_EAg<<"JY^BjGl&Z;]CR3B+[A)mBV[V#4o-BL.B+V]$se[;X'[%*Qk.tFigX;4jNA"3jia?p$7jGTWp@)
%^L]fDZuMBDag'h6@hI>>S1A:DdSkC`Mo=RZTe>B[7`'e:"L>>VODlG>!(J3.!0<dmU4?+HN.fp=O[+MIgJgm]+Wn3L4oB?+Par@s
%M'.Ta[XNU*;T8'q^uaYE'1#67I\c&^!'(YbX>N`djIF`X#/XH\\$%k*3$P:%G"VKg?p&TW1_@`nGcp.Q@$"kLg!7;D_>*LI.TZ_"
%+2L2Ubs^&.I&,5f+K5U'Z!k3?jLRL=GQ:hMR^h[B-Xfakh'1"uGnG0W:7f)S@uqY>EAc\0T70],NO@YQj5d!(7G%T5F>,n.7V",5
%=88S^#ff=EDk(qFVC:L$9/N=.*+$B>0m7tXe'>?X>,?P[j#AmhqCr&&>WHNB]q+?^HT\9K?$?s<9k.&Bo_Kf&5R,6d_Utb6M$sDS
%lc0Bu87Rduk`.-8C`9qbR2V.HDl0GM26tfF'29b7/jIW$HNg%^OuhZ1VYYKR-:5`Ai?NL?(oVli_Sl%YD`io%DY7k+4JLb[rf/1F
%4>h/73M^=6^9+1^.12KS>qdtoq$Ogs"-QKrGL>i7V6DIliGouBM*;Nlai#.'Q_9/pAE&S.00p2jai#.'Q_9/pAE&U0QD&hbj(.//
%r9R"iLuW%*NQg;SNAsZ[hAAli7iWliD^9Uu!>3Ao`#E]?:JeuL1@[iRqn<Z_ai#,QEYT:.N#6IaMURpFh?bYVp:g;RFs&g.kn1/-
%WBE"(MnIL"2m1&q;,X598S&8G[ei"aVTA^dn7s&O>rKG_[nYALc4%/XMGj2<+-+%B9Mto\kj4eXNMXfN5K#Fo7K]E((Futd[u\0b
%Cu%Z5mX3^$Ub9o?AB;FMcc[7TX?Q%Sg0_4BN8*'0460(P&d1U7s.ggOV2'G(g.GeG#jYYLTrSJVU^,O,l)M8)I??;P'4KSaZJ4gP
%Y-&kC=^5lWMh`$5H4`Fk+5/<49V*#(4DN^OIlCi;Yp?J<5#tjjo(liIR=pa0HN0mq's`n>qKnu[;#@l]NN$po:P"#j4)`)<c&?Gk
%/:>QKl+qEl7I%nCq=k!_pR!COqrPgj^X6rL\pqb%YitBAi*s/8?]!7CO&1$XSq>?<O&-c:c/YP],E2+HVSil3s6;hR+8E>7".tY5
%^QQn(9gbh28Y$QUcB"#9EAa*+`_5o"o\Z%Q`X2,5%:Ahe_]L<':L$oZL[j,G-2n8@>b/kC<DVduWZ'L\C-&Q\bkP752m[5A1j)Zm
%kOc-T"/*6%V/s55'.&BJVR)S+`a<2^9ZtCr8iE4tE`Tgj1DD.;>H112e2,U%3iD-2c8$]:f5g@Hae^jnfAM:Dc>%V\DNE=#H&3E-
%RT<gd;CsJe[^:FR[?SqX-*0=Y&'GC10eO;-JF-3GQi^$^bf5BGW+fP(&2o?qQWQ,B.sbAXbrclFY$2%^36Ia@Q0E$9S]a?8#XDEF
%*@:NgSq@LRfqQ\a>DCF<W>_"70RntT6oWOS1S<dtOYT9sRp%]\[>_JilUK[N.VU3$_\+i/OYLEi(gIRJdrKu&]P7ME>6o![&-9k+
%H<NM(`EC8L>8k/I.6rYk4dX_7eW`Z75[[ngjGU;p^lnpi@u6X1Eq(^=(?ii(9+6=tCU3\JR>"S?kMfZ/$g>QDKHXt;_hqA4",cFX
%J6@Zdjc$9?$X1]PL+ZXB-)*V$VWZF*@cdZ&MYF2J)'I&.'PCQT9BWW"oLWX5&<P/SN+n/+<kAKBZuTja=BUl&0LSpiEhXjW_Y_7F
%lnY4Y2:$"LCtVq!9;K*0AI@O4%B);q1^"?k\kRFF=YTS\9U_5)/FoABeLf5MWlYA=^uQ`a5X7dKL2>qX[%UWJK%4[D6#+T@'d.+f
%7&!8bbbeWsH)+?g!XMLf/hmAF,AYU9PT_8`FVEDebVTm/&7(gh,Yk.7UKaIO;ANZdDTOMnq@dE?NFcWt(f7jq5%Vg=GsW$>)<5Hm
%dmd*lquQVD;F?G1@kaNh'=^_lYV3PGM+eWeGM^[lOf;M<@b#LT9FXCl@HF:?(`)b5dtGf,8o0V]b6WmaTMYg1[OB>bBgp,FNKMd$
%'hU$M$fEQs##c0]0/5Lc<@Xcj.&prPPjnZY4Rg^V]n(bca#!m;B4UU#:k+<W>>T)R!,+r5fg_&k*\),o@DIC^/X2Nd+kklYP4kY>
%RS&q[3)PC'M)'tq8D85^#>q9'bhs:&0FlB]Z/A\EG%fQX<KrRTFF7QukU$kb_?J9pYnMqinqe.#BhS]m"G)4K_jl;15nYr3[#+Eh
%QSmk[?q03h/?om39.\29?uQfn39$9l<2NQ1M^=74:b$2/["o,%eWsJ@0Bj6`.(bLWVXrFd?j=D'liJH5XJqASlloh2<QUCbVM,XY
%e^B=`dB41JDfuEs:ks#kr),*KL]M3*=V?]";5+'N)O0;N=UrAg%WRH;bX*74AaE^5%.&Nr?jh8\]$6XF!r>2M)\UP-k!]<'ciAe9
%PsCmT.'YTd$i1H+7Kr<rU@,go<C8';"Thn0ZoeB1Yd+6?(^N)jdnia37>3BE7D97V"sIfFk2=d;SkY6.;b<=5KsYa7O;3Im!2(d:
%/-c6J9UH"+67&?R$ZZ6@d53(\(E`e<I2s]#f0N"s@T?-!E?G=Z&f?[`r;@7lb(+'QCtqlqk&^&YMFMRl<jG?^h4bZ250`+G`%OuB
%BZOCK"&P042$6IdW3_#NeJr$(&^*gD+oj'e8sF(AKJq6Uk6SIgm/H3qX@rfBLdM@C`lauG0nJsKYRa9S-LqNtGp23)'a2pe-(s3K
%%DZU,$dcTpLepEp=c4a;0\',kPKMB+^ng3#\WJca,R.SL>+hrsKi#Ni#'4@-2#t$L#cJ"_T2#E;4ln[;pfc!8FY)%PE\hlqe/9pW
%+mC*OTGGla(jOK5#Cq/p+qKq='m-*6_#C3!WZ_&0Xu):.ZD+ELb)jfR/1G"G%[KZS]n,lD6VPT_H2taZg6-d?AYM?ek$X%@#=?@?
%9#sP3()gI,'MUH'TOsD2%,E,Y\0t9PC(Sfm2'^;C.#7.!goBOXU'-Pfpc!>.XaD&Lh6\,a$G[`K=+S**b!8Zd_dimq:^=P$:Dl!m
%.Y_2_o5&1"j5C6ib;+A&;"I._SnHJ7Oa3Z:C1r;u9MX,,M+guoR8&+VOp4*&-W!J.B:#:1"/F!OWb#`C)AABsOd/Q6m(@Se(q3Bg
%XF]10NXesI>\7P5@l?cDV>to&Z8huHAYQ.2K2T$(1^/V9$11kM9W8dFMeZ/;V5X3[>b[sE[ePZ`bT9j7A$!na@)T$qYn"3=<[`SR
%;24*X*^EXV"*<9$>/_+.s)BGp5:@ZBYlqYd#s&eo1RU6+W\,sIR\U@.^cZm@!F$A`^dTq6VW^9I+M.ZW<)oY+<1B2Q)_s9bi:f![
%fX3OSX<9*/(:F>UA(IB=C0:ludtkD>js5n[]$6Agd?t%d`@aI8%*_uB4^&&KVJ$7:MKGgQqGL9J9J@i9])^a2UC,DF3h1q!'Hp!Z
%L_N;(&l!5;77<9Yb#!HI3UURC`diXR-'uNH5Z6[jl\<Co@cHnj*'k'.YIpVGLal,q[7mql$%<?5;^PDTV)*?^1J24QB3@,_3(&q(
%EM#a9!0]n(EEr<%p`i0pZPg/D&4@k(6nL]e$;/o9$:S5d]EM&#WWc#1;M\!]A\^C-Wlt$hU<q*t)\]/%Vp\]NdnHZL1T\5;6.g%%
%fX9)h1oZ#JjbY!mQe:GYUWbPCc1<^FBX,Y^WDZ#5iY]nPSeWP)KJ-"fQ"p]o!CB;A4c"k0-]b$JVeSu_,F<E+,KcDA!>@A(BTf7?
%FGp2:H!0lT3_W@NccWZ2+O+\fe<!sDlQ3$!kS\JH'I3'F-?KbO'=nEB<asPc3M80Z,>/DMKj(?Y97s2iAB/hR>pAMS;9!a>V?88u
%W?Z*lhOglrd#cPR=fI\rNNIO1Hp[Q9ba@c@$`r$ma&0iuO'QA`*h4S>g2O/<0I1`N9KBWJN`s4KH;<$SU."2d?7+p)_6F@'UO``R
%T_t&`Hb2u@#R1q5k\+t"*@$qZf/jCf%IHg;bf[=Y!c"$3f\7^8Te2NaF.BV5lB5RO,,Vs>0^NdY7b5Z&[;9OCQJCtL_]E%+)0q!G
%YFu&.=AkQQ7@RGbKOJecaE2-_flRNP6)cR),lkG`%ho<aB*lI^!s;]P>&lEBM:<CrZOM7t868NB`<Lm7)tk2kH0.3AAiHYc?nWdL
%@6WFW`8FIt6pR0=`,_/>R4p>5]3]%aJmgX]<0^l28ohL7XU$/,;AOmiC>KXNJ-iNiK)VXGL$K^JhH<1cKd@WH=c,!4OJQn?``*^#
%a<>k(&-tas"r"eXTHu(qA69/`#.WKhQBQ''bbA^s9ML^D:_&])M^Xd.P:&$EIED\q`Ogb6dbIi4)TlgEO4#SC,mr6TM__H(Ta\%[
%NG4Hi1(.&d?752N+?/Ud7"mWu(&",gAS;sM3K(RcP$!6I)0>Fd\->SGY+H29%Eu9GJ=i/_Z&'KW,)sSmF:G,$@\F3>m-87aB8sPP
%H%G]tSq%pE>$tbO+,l&';4sTRX0T4=8B/EI!R^/3B,S.SA6%)]#36-`)V7ge&h<"5Nm3dWR)Jk]G\Vkh>,YL2aj?B9JC-kr;dc#n
%)\+@J_*"H\bZSOhF*(Z4N-Io?+?0ho81FW@VQ+_=NKqV)&'S1?8"u@aY@g/Xjg(?A/D4TtZQtejB*h3>7FQssKI'c$L'EuSd"]b+
%A/U]4<2/*l&if`NMaMGs+JgPCSdgqhiT/Yl,u'\P6nR5j_U*IlTRU3Bct-hrb]kf^ntn)AYf+nR]Ps2''$48hA_^G*eoQ*mD`^9F
%9X8afS0a`E_l]G.#<[7[</%Z385\rr"0nCCWJio3;A!u98;U)ROL[[0\=tLbln%B*<l[J?W27qmFPBqB-,d*qI3f#_kuHJ>Eg/:c
%8X+4%#q&1i2B_aGlj8r),sVga3&7O?9+WB=Pm.PZqaraa8\U?eB)>1u)&'_TCkSs.0*oU1WM]#3$#J7:5bjc93\sQ'.^;,_7iCo_
%ln[<&Zt[JPJI$E-B"9Zm$-/I[=]r;$brX'I)T76V;pr!T[W%%\k?/O^PQO&//5ao]MjP-=hA\$)YJ#cZ=Y'!]A4^<U+NXYr6'!d6
%fMSr_oXk8'SMqNOnhNcIM'B*Xo!j%^a@R9sYH`VR:d]M\XtE81$ng_Q*YKbc&b.Uok.JY7!?PgX-5'lp';5T(3cke;T1'*PAKS(e
%/%R4^!YDc0/4B^\KI4k%;Mr@KdW8fh\]$BB^'YuV;FI74.j@h7'G3!>JF/r8!C]CcW4:D)4F0L8oB<#+lA4KS-YH`EWe22jAlMa_
%Ta0Fb$W_F&>iRP0<11-=$>bK(.^P[i*NUL)`9'5+Ckpk"ZQ4AJ+ssTP>rY`$-QSD.)M/,4BdK"LMU&=e<>QsE-R6dD^OltEQ7=o`
%G'B*2:W?qd:;;=5]CQYW[Q?]5?/2!;E+Z`RN\]bBgLYu??uGO\;\tJ*KHT$?a8)V3YGe:-(u:?s\L=`=H+Qajh$;!c$mciBDE3hN
%;CZ)XBpVXO1:Z4Q;]9O[:eY.A7g#*69h-Lsm_#9/U)d*=PG;)hP9+U$0Ql3`a<jA_ACI9(la<8A$(^$/<HP/b@\ilaZ>qOa//m=*
%e7b1>e0rI!2&[=P0]ZdR]0D,jEE!iZrY2aW/=[O\E&K;ZB8KQ]KJ&`,*G(0Bm4t.DEIP4)0%$5C*Ld[]Wkm'+bI,\s2C,>$.^:GM
%/sE5OE3)bTA\d,`RS(dn8`eo#6.>)ofL6Q.o[E2cX9^ZuaoVYb)NaADdV@i_/"M^tV(>o:^]8L2m7elWb*m>g,6_7?QMBPsble^#
%6!2L38sV\,.2b[N3%Dho1uZ6uNK:)J;+$rM8PL.?O!7poK%mcM+k%]`#O$t]GnYpj<5bjWl+OnG@IMj&nl5+ujLMKV&.2DokY^JX
%mhfFVX+oS8e@!JQ]d"7HH\ZF,r;RZsQX*1G+q6b&]u/O1":H@Mm_5JqN&4F)1L`Vn[T+#99:W.cFhrmC+8^Mn\=C^3@b>dnT83md
%GB7i;r+=@)4AD6$b@V-*20`lBb@_pKX.\(HG1d?QEYpnDG(&UegEpjbZ&?G>_8>-0Xdf)m4E#[4_PF(f@efP@2X2"jI%&mJ\P0nL
%n'l)UIapB#VAV%]%"/0$<8)'T>`c160$%Ji*8'qd*u=60:<g`#\QgO5Y:"L5]J!AHhEkVd*f`0M)4-\p6()TRESS_F%O_\4h1sln
%LWfBOJT)XP\5%&dmb;$6!eMeiYKKqrI,m:`[i7AKEQL8sD?uV"(r6r_+aKVRGPll/\T_S.\G=s"&_rddJ8Ln28oB3n\'?MJr9Ui!
%e(s0"Qi$<.]7%M=GP_Gq]+$MaDqQ.F*[\nU`SI\F3]H98BR"@Xn?tX&aD]jN?<&PXMnAol$[;KdG'BDZ8aN7jOZjQOibk6XBKs<;
%4g$ib;""%P=RPVN+[$WcqgojVp&thJ>;G?WNc:gP[a?_L9&BN6O5h]of*ZY3GIT<IiGcQJ_Vm\__r9H`jRAr_6=26MrG;bmo3@W_
%c7K_/p>[tLl%&eP#mB)pgSU($Ws@ZKRq10;C+!VJRRt51:-q(feD*8Oh)DTp_.7p!l&MisVC90Tpj4i[Y\eA],62/Pd%bgJ!!;u:
%4#8X?&^RMR=N^G<s"mMh3k&Et(4ga#.[a*9KY6Vf)E35Ciaf[]jW:>X+#]72HsW?6M[a]lrU6(+^\P(ZT76S*qj1Z;qsA=Z^]42s
%mlu:#N_@&HV*epDq9A@mI.oR7=4YR0^]*lqe*!'95Q:W%5QCZPLQ=[qFk$]pQ0Wo!_tSZZlrU'f?hs*0c_!G9`hhdt&&3VhbNDM-
%c$K3)044_U:Rhc'gKo@+l,&C%JlSsK"CnIMpNJAX?a05uLH>t&lkM>SX,ol`Mi_-_Bt_::hEaaSX2e4-)Aj!8#TI%5iWc&Y`3u=^
%XW%LS[s$;NGTdCEW<tf0EgYbDhGe3BUmG#eDsn1W9L4"tHFZ*o&lI5m)kaE1'L+GceEJT_eCZfME0je'nlLu@G0/8H#L;V&:mbPF
%fEq%Z#@8JXB@q(a3D@Ic0M%M$a"JmjQ*FZ-,*h/l3d%4Y1,Pp5eXAA"0q%WNCMQ8N*75;Y7G.c=4/)#jq7A!/rgBBg%*%qpNoduS
%'JnL`4P9'PMXi^27CGX$VJ=E$jD_74Hn%3cChRJ<DKPicfaaM6`E%:0E4OGQDSb&+(CYl;R2%W,:AQX\kMl"kfep5dP'Db"8F#qs
%c/DNd<tTNM5lPrnI_j7cW6h(;K8k`I3JM>ParYk1LlHDCNTpeHkKR@?;l6Uk_oVu4hsK#jf&QP/rkjZ:YP/s6R8gn^Af)i=o2^\F
%QqXN=jF!BT:AF4uqq_!+#C:s2Hc^(:HgIde3CuYG.RQ%'R_I9\0&DCtT33;NS<68oVOq]oRT?,g`+Imdk8n/4S6r`>2s,"8'4jU,
%PT[=n]3d6C6ZW?`'t;].bW@1+PWep+$A56snsG^-#YA:urR#,f@"^g?r[UWoib?Xf'9F>I@bTcUO[[6Z9[fI;c.,p*6sUA68`>pG
%c@4nH.:@MTJ\`Dj\*aSp.dHX?,GK'RJ%se8"DT8bAnQW7X7Zl_Dk38qo,2Qd`GsckCmP@e`&8C6YO,)+aZJ?2e/"7_.Lg9-OnJuC
%i'_"JD@:o5Bu0*n]c#lN7!gnf":t^$*jej%7GP.!81Tg][0Meeh+[MFFP:=3JB9V_<?$3Y;/@tNW"U0(J&uu)(!dtoaUg+)TW"Wb
%i+)/:4$1!DiFmi^*WN5SqpgTUW&$Q;`P-uI3Ghb]qDP+m9\d$J4ug/jaTD#09M2Wd,M?4DN?C.qG/L?npLjq?M3!46J,qJ^0m%!F
%.slsV:6eaG=(thN<Jj_ijB95aV$F$X7(6&Tn6X9sF[Vs&LDZboTMYLthMmCUOIVQ<[XHf6`m.SJH,r-X[okW;e=e$C#1AYE(22uI
%`q'Cp#D,r*ZlrOT.o+4O,<&,,`[SI#c/3I"Zl2!J<'l9FBUb!@6@B3(@<9,>mi7P?(3Hs8NhXsS_B8u]<0RmG_A%+&<6t[h[bc<K
%50'UA'aYWP9cI!ZO&'ia,X0,k@XhY-]DS%#h_cbTa5MkdFFk[]bW8dqg6j,GE+3Y+cHaS@M45U_NtA=H!1ICI`^3+n</-<g<1aIn
%%A[\$KKm]G&-YY\Pj0GC/"fb71F1WL_j8#O+/C4o+Ld=,g/U7J(K%`P"Ts.7l=E\i"IX:#W$YgE<AA$aMAn(r8^*?@M>98kAg64I
%9Fuou=TV3&RU7>l]Vp3nl?<m&[k.;ND.WE6=RV2l/fK7=\mRX:p^T2QHUsI<Kq>QOLs,-a6(PKb$m\u+TN98e&..g#VRu42_QeKs
%ASdr;s)tL7L+;]+^$?!u6\eB53Q//oCtqso+QR)_UL0NnoNo2P!_\ltT:_:00V;Q79RJVKSSfO:i9ioo2VB.r%pI?`d?N)EO?Y&h
%Sa(6Sf'[o5e-iWA<HMtcR2[qMF.'kLAoXUkZ78]FolA,cT$!e>YdW2YAiV@I"sO,G9YoG2qj#*FLUl6R)NUGoBg/d1d)U)J15QQ@
%;^QNZDqmp,3jQm"6a0%(AYqh`#u7eJ;@+8aQYU`u3L]a($c@_O(mhsC0]n_HA1qMp5?:n>&"'H'D$X?p:s%'RYAn(e;'TK4Ah!$c
%f@1(:^/q/BRuphCUV!MSfn;d/?9'oj/V+IW\>bpFb.n'?m#f"e6co?fb\NfJCEV.a-^2V!OZAXSqEu(NC'>KQ7jY?qP*2b@c/(B<
%&T%J(?"Fp/4J:+)+iK'_XfbOha?Idk71(LIQ`$5<biE@ChD?ShOL&9'BZRiofBJc#Mun$_h;j#FfTmNsIC_Ed'7bX7c(cJ/,/g/M
%FI,_=dN6<.Df/4ZjX]q+2F)Bm6HIZZA,-`en1__eaK,(h[D@$Z3bW2Y=Wu=Z+rn-0a6^`a1T3j59+#:hi]pfK]#9_)jEKgX\jo&P
%S^qEJco=)5_dA*li[Pr-B'W?@4lILY<mOn9:fC;]50#Q1d^%5"iCu(.OiTtFD4>;V-V/GCPuD\m:G>//i7a(tc+>"_NPiMpf@#(_
%kFu!Xb=,BM/ahq,nWI^tM)s%,5K'O0L!n[4T`ABpBHVpVTI%<'#Jfm>dT)Af>*r@[d&3KYK+qZp%"m$ObhgdW0UP;f+)&"AVu0g!
%C4r57BA]YT[`=dHP3>f<F']*mUuiLcZ@+#hoHl>o%O5'10I/!:FpOZUc:j1ajsB_s\t$sdnZ&]F2^c9#/Js/40/*P/)h#q)2r0^t
%?,2!:*8mDQGHtN23NG&@dlh3E_?Fu_9dV%h-OeeuD&$fkNBgapNr.q(/AcO.X=oDdV^Gp$Yo;,..E6niW'eff>0@tF)=6iu&N!0W
%>9Qp-DDlj1f%/BshJ`J,7t*q]%<037Z2R%jIJ=j3)2"S\\i_!1Q+U&B>p>N/R3FsJLa_;_98p.5A94/nTHf(Pc@f4UAo\9Y'h,@E
%f#ALOL'&<,PB4@`e"Xdh0kp07oW2e3&UL_HQ4;$_U8*@da545Tm)^]/S;`Bii^aciP*=Mg5ORsW2Luj?ENBmUCPo>&;n.O;d8$D0
%FWZaq,FYeqOc;bhJ^7DfY;T2!DY=YcVpln1%6]3`pMIP2$W^d@Vs;fFG@;uj.pd56SL[D*PeFhh<cR^U?C<R7)T-mg8,Ue2%H[N!
%6?mBjdlj@a5SOO@PP=t@+!\_DShlL*@0eb#&8I$4.3V4(/1&LKf=@[E*g3)$*-`TD1,3miQUgX&>fA<fg3[2V9a>_GNsl3!\TQns
%0snuW^+dVm&*n4].+ZA,FPB+3-eS6,"79A]BU[PI(hW3ae.TA;2^Eu]b7g#Y,pl'K`;K"C)t?+DR!6S-Fd^UAV?rkjMPRdQEOi87
%Q,A*P-.E^-oPp/OUU%FcYG"VDPC"\<i^6eR!hG?D&hkhV>Z$?X?6!(ag!:V6JDP'EWbb(<Atg2Q2k+qrX+]Itf^LLi@?e7B/Tcjg
%Zi?&3WZ\A1`7`UCQ2(Mo%V6.IT_KS6__eHP6'e9Q/a5!6S^ZUYc#VG:.TW8-Eka!qCLei2IS\r/i`)L$8'+EN\%NToGooZ.hsFk@
%mu]brC9,T<`pS\SL+TAlS!<O\Rrn5#3l],4!$d$KC,k8=1r7SPH-!SZaEP42K2_.^KZ@LZIm1.7"iJ*m])h6f-<JEE@9Y?!F3Du2
%@W]*"dPdZ%1c)9B[bmsh5%Ese?"aOFnEMd2CGO&5#AM;n)%PAT4J18?=$=jh>mq'<Eoe2t'i\d*_kn/MFk/?`$4q4,,ALCn1?NUH
%9rm8cI@X56gDGU&ehqPQnapj8f*Iq=fGQa3??<jW)*6mRV^QP3kZ$Ai>+ED@3e^J,T8h33c/XbOdRqUVf4WaCk+IJO@8i?r1(*U]
%Rt?HZF:"G.fGTKECEK(.Vq;U44E#WLSKZEkZ(=5DNFg*L5CkG^fPc-=?%]$6(@2pU8:+?_3PZRndU$l`[^kOgp8S7>;FJ8Em0+#1
%Bcd#U=03'tgXBK;=k0qBb^.YobsU<Lor@B5Ra.^qJ?3hiaEjE0RJ-1jbF/%_VbNfV1[F/h&Obp.HI]Sc]%aPtifh0.3jN''AAXsu
%S6'PP=pF@S0@S6j=D[r[H&7"oG3G@dK"7SJiK<bA"hFhd:O3>p0-*Wf$ZmZ(1sAP0j;E+f]nFLWgll%eF41/kU_d8XZNfPLklk'Y
%S<+u[`?[#-s4``D&;eVsman8$kXM[]0Z9rl8>sV_?kS3qO!Eo^.#3/tlggK7dYlfQ.Z-#ZFCJn293@%AE=BCZO9m5HGV,9C1[2m%
%CSXJKM^_Q>Gu&e'L+6\<ZX/U_=@q1l+F-o`33llRgDjA"`tuBq30g!!>dI=#f;mpg2"to^Pt`WQiq^`jJPG-Wd':XGjV?3Id>[k]
%%L+3fKu?:\'4g&:>!:B^\%;V5Y,ppD=^aqIXF4hsc%mZR#?tEU@i7A5+8V(@o(('sE.:5-,GlSO'8gp-9^29=`!GgQgT'[.1,WMu
%nbR]\iGT>I]"L0["]8MPJuQ\BF,S`s&DI5Wp;0R'kHdn"T`gHhWH]kbHsi[Hb[kSCPLS$%'c,`k/fWO^MKk8m;1K(6OP[iLm#b'W
%*Bea4c7qe<h55@?"<h/Wh*nj!-+$N9pGe:`\MbA)3_!Ms?tABP82^_<.l$c<]_YkWR$,JRM(TsoY!ma=[fs^"d7/?-K%8I=JP(9^
%kfZ\=bd!`_$Rt(9h*Dqrir%;dm8JKNk#rCs'/_;J)#G@H"A'ocE.*rD+(rEW/p?)V;i)rk$rH<%F10tDNnr*qaG?h%hR..)pEN&2
%7Y@IH)a[C3[&;V*_S!?NMS'MJceu'th)nU=.^HJlV3B.ef'\KAiZ-)=;ibi&U6h7;;(QGaW^elh2r]+HcU]MOWNOrY0J=fh&7MrA
%qGLEB&ho%l#+^i&$OaD->AH5[0:E_"2OAY]ig-dhK,;%#mkmgB1VfHPi3dOB/e`td?C0J[8$DjDgZ.Ygg<.)=>Y!KqDGcS3@roQ0
%<eqZqOG4Xr#:88U/rsu)g*c\VL$1XMR,Q<O^_@&/-n.>Md9Cjd;lpiaHo[=S+sLNlT7LRW3`d"_5:!E(a<(0/e!:gEj,t3a5(a82
%"jeNJ1faaK]GG3Dhp,MQa7`YT^JujlSml3?dCEcJH3lg8ZN;0r$maV%:BTY&=/O'/b\<A5pm^#CmV!*8_hN31!chF^VT'2$6f'qm
%R8i?T4DmpG!V;k_Sg(<tS]\B!cV`QUS_3%@*nFY[hT8AaO'RS&qg-(2G;!Y"Dimdf\tOB*2TOOVgtpgXXEpWbm8IhNWo#lQBY7fD
%7slbdf>6pC)E;!*H[#qT:!kfF]?b]5?kK'HrsK75&=NH_f_K^C9[Na06'j\5Ds06BY<^.?5/-9!RSaaM6suD*,A42]/6!+,%9%6R
%(LF?b+Vc]mL=D;Bmdqb:!@G1W[l!TM'\c`#BVNZ*q2`$"r2j`;E9OO/P;\7/D"`c\:06tXNh<"R$#\/dYj'd/Y[^4+n<d2<Ya:QS
%0/"-*E-j>p#Eajj_;'a83pB^?O1a-JoBGem**mF%*d8rX]u16BlB_gM=afc-M)QuEe@;Lt.@pT<j@AR)kt,fadl/"1RRZuj\"<tJ
%F-f-R!`]6[Xaq3qahacn`@JO0DG*`JB+d-tl\p?-X0IC7[$Rh^a$TPIkq/Y/7>5uU=6:(Q=/tW#7bMc?88+qtM[3Ys4AOn.6)%?^
%#/q`PZp.<R4p`nYnm)pj-!=<Nm(\iKa`tS'j:gm#n$0%AY]F+M,''itZsFK&LarAJY0/MchOYUjK"(,!<[+<=dhI?9,D<A:\B^D=
%cS)LULS=fM%Njf%c2f!=jmHa(U$@\OfSieY?/5qM&O+8!.\/Duk,`h;k>MfK:)e-?I=_ps;/oYLFAaIG)0F0q_qSo9k5+b"Y6=`&
%QFX<FRV:.(GEk1g&AX8.JuR*kQB(VMp8-C_>E#>g,`AN4L<@Ak/*_$[j_.%D(@;#G'"<tfmMNt])[C1<8';s"a"N^slC!1])T;#8
%27O\1Ge<j%Sn/qkRh%S94WC6uXa;qrQ$MC,dtgJmF72`9]!E98KDMHJ&V!-(a6Mr]?Ai#q<MeR;0^dW9WA;mmLTofso-)86VUddR
%eEL@X;)40sJ=tp.b`"QpYIi\YeEIa^Xj6@50t[oZot)%(G+;9KScSmumOC.a3d/O.D6[l@Qsl]$KF;>8h>:Dr9T+%KQ!Rb\->1fc
%Zc/Cbce\GGWbsgdI[B4/F#SaIadOHHgo0/oMA2b7i[`Q28N:5[1%%M457g8Y,_u8"juokMPUS=pB.AWYnPuG&dS\NkW^D,6!8dDC
%'iQf<+&\r_g`<"%NHn@th2ABQdXDhiV2.K[HA<C_M;GLheY0E@.>2)T^t.lSf*eUe%Efk'I>2/6XbHo[,)X)]OZ#uJRt=IYb*G?;
%;5DK1>dk\W=GIb[999mS\WZmYA*l?KWF#>8RqM0RMoa?]9orX%$safNh0N1%E[+!fXh,HWI<dbO^Oi7F@t&jsA=,=5*--4f>!gd]
%1_efMlChj;@rPeZ_ohj;G1qoT!^"oG]_X:AJdZb4pM8E(/76@+7K*"qT(L[Jn)AI*%dZ<2<#M1C#(43=Dc5.fYfj_5!k2@)A!^%W
%N)-4W,>:;^FjpXSP7%WSgjZL:@l/RS6&g/m(o?S,'\H-"1l6[a0<a\up?Uu1]e(e4bB"3\ng4lWf&>:+]F0M*HI!/cF:NGGfr.@l
%/NO9d;oQX,<1KsEcL@t#*G[d4:o?6<iu_Etq;nHEl?T1e5"JU?Q(C+P8T[t\83GN+/MmW^7rC"V;e'q<-DQH(0N%^8X&7AA:Doa(
%m,$.1B%7:'^oD#YWqUfAEL%O=%WASiM'/Zj3UBWV(0clW]Xq#2?=8):\futKSt0]!*pqhAaM2IUL\N#>E8,)I1Hr#DeTEDjpbY<\
%p,JO]BhGJEV$K.5V<eLs8rj>.fXhCSe,/m$l%$gJ,kuI]hBm%>:FF=0`UK(&6?$q#);)Dh2aJM>'IH8u'^EljI/smDYK1o7h6n\*
%fSSG]AjCFbjZ.?JHtCA,gN)iX9D\(<(68lF';\9fc;;*F1'ZRTM+@3`Q`>fI-g$QSAbE^="@`3q%l4HYO*8?A3=NRgacI.<C#?kc
%0C"kD>gD7sDN!KjP'u/Q!!6S1ie%Qh.4&0DgAE0C$;l]WUJsk/;2M!>WAdso]8.n>:SNTdlPp<q^Q58hMRr6oe=383F[c,,kB4]V
%gZ/8?-];i0,AjHX(@P8,W"7LAGYfkWPWOpTg9PHl&Ql2M%k%5m+Hh)RL<R6@0\6LX=9KO0fpn&fnlL%W8?enu?1L-<%P%^+PpB]c
%Q_TkE%fc5&Ln#F@)/"'_OLFa%R4Gs56#Nt/;Dg7Z>BBID?:BOaM-CC,OQ?o)i4uQR^<slM;<j)DXB9/1Qmr]sMEAtnYY5BI5'cH.
%Kb?Uf;l-8jT=.Th1FM?dJ9^W.gLcbQ[d6V>9!TF"]KGrs,F[&'6mZPBffg^.JPCUs%JJ64c)t=%k,:^<GH&][nkq:>9]eK*'3-aO
%#q&llLXgfaplVHgf2QKY=YoSi8phID=W$>=g;$ohC1PDD28b[R8"4mpcss1<Fk.cO<Q$p'>a*pLB4XF_(I]HH%1&5UBUd<K:WX5_
%Q4"$;NuLAIDWGf3oL\BN5+a+>5tY?*e:pKaDq^+qi>p?%'g8ZhBbmhZVZ56nC5*@$j)&XX&]jhr+ui4D=t"\EElujRrpB5t<A[IY
%+N[b128scFG)YgcHmk*0`dZ?\LH<_P0"++>)Oi#3CA(tX;3[YO$T.eZ<9BPYU3LN)o826JlArD6fiQ<EI(oHNk-5=uSnG'"lSO%K
%7jX2oMVQihFm#YKEj?nLC>'j$@"":#a,u14M<P\Q$NqQtSqdNAA\W!F6P3X]b7ERTnhgp?(%\pR?hTSMRi9d#ZHp!1S><'6F!"Zs
%&qVXO`P;+6-@odslC4[^Vnhs?-aXN6ag;=%*p;,Z6RQn]%Ajqr$Dn]^f]i@!jm2BoEj+]CmG3W8":Bkrc3?LN$:;*$J@61g:FYUr
%'\2InaRoIG%]'>6C$NS[1pEW.#$%g>T3bTa:K2[!A]=I#7r\a5=^rHr'k.,#ScA+0a#_dVGK,C^H2[gYIBu@i&fNY"rBjd7ZYOsg
%`!MNqB&5b'`Q['PV3C\&/GUbISHW\`"TR7MdQ!;+qT;B13L%+<2#jG0QOLb`64+\"rUQR]CrJUrj#(9k[b6ZIA$Ja@f6U3r<W+Gg
%C&;mBgF"I`2DHgC2pCrW+]2W=a>#*)/a?5VDVaqbW2'2VC/83]+oC;)f]$,_bW4!5:(J@Z=6ki+!=D!R5rQ/N%^+rh2V:s']Qbr2
%=I>2m?S@e(l;[\Z#o[5H@?^j^Fl)a'!;<?IXY8Q_U;4r&So*`tF4d4O;Ugk7[>&"$`&[/JF&mVQ49$T'kBEr9n#:VPSW+Vq*-l#s
%UkAs)5D'7$FATJa9Gg;SCR8rb^MiZl4IM*'-rJkpc>mr/Vlo!R?,rbrhOW:_H1uOGS]pnc)mq!!k1UHeH'VI3rtp:X;/mf0nO2cY
%HRR_2MCXTDN'/Dk+EPtR;GW]%8^U6-<7=QKk13:@=48Xcn_I%-k2p*?>0=:?n.3!#=LR"jl_l8`/ur4T]p]1/Oar^$GWG%Y-\nG,
%:Xd>Q%lS"5g#^^Umsir4RX@h9NqFfR2fHV+a.lAHrEK<mlL03"ZbDLsX'`R;k*uDKme[NEq"3AQJ,Aa"h=j-`pQ#h<hu3<p%4OL=
%AH1!!pRaYIr;#BN%kg0Ip#H(&fId!^hgG%-s7j'IrsQ1.H`6~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 299 1125 a Fu(C)8 b(S)51 b(C)8 b Fv(A)g(P)g(S)g(T)e(O)i(N)
g(E)92 b Fu(P)8 b Fv(R)g(O)g(J)g(E)g(C)g(T)51 b Fu(U)8
b Fv(P)g(D)g(A)n(T)g(E)51 b Fu(F)m Fv(A)8 b(L)g(L)51
b Fu(2)8 b(0)g(1)g(8)1525 1425 y Fs(D)t Ft(E)t(C)t(E)t(M)t(B)t(E)d(R)36
b Fs(3)t(,)31 b(2)t(0)t(1)t(8)-2 2025 y Fq(I)10 b Fr(M)g(P)n(A)g(L)g(A)
60 b(P)10 b(E)g(R)g(F)g(O)g(R)g(M)g(A)g(N)g(C)g(E)57
b(T)10 b(U)g(N)g(I)g(N)g(G)61 b(O)10 b(N)61 b Fq(H)10
b(D)g(F)g(S)1617 2350 y Fs(P)t Ft(R)t(E)t(P)m(A)t(R)5
b(E)g(D)36 b(F)t(O)t(R)1046 2700 y Fo(H)10 b Fp(E)g(W)g(L)g(E)g(T)g(T)
59 b Fo(P)-6 b Fp(A)10 b(C)g(K)g(A)g(R)g(D)1006 2954
y Fm(A)c Fn(N)g(D)g(Y)34 b Fm(W)6 b Fn(E)g(I)g(S)g(S)p
1910 2954 1350 4 v 3410 2954 450 4 v 3088 3067 a Fl(Signatur)o(e)520
b(Date)1649 3417 y Fs(P)t Ft(R)t(E)t(P)m(A)t(R)5 b(E)g(D)35
b(B)t(Y)1492 3767 y Fo(G)10 b Fp(R)g(O)g(U)g(P)59 b Fo(3)10
b(8)1613 4117 y(A)g Fp(D)g(D)g(A)g(X)871 4371 y Fm(C)c
Fn(A)g(I)g(T)g(L)m(Y)g(N)34 b Fm(C)6 b Fn(O)g(O)g(K)p
1910 4371 1350 4 v 3410 4371 450 4 v 3088 4484 a Fl(Signatur)o(e)520
b(Date)925 4696 y Fm(I)6 b Fn(L)g(I)g(A)g(N)g(A)33 b
Fm(J)6 b Fn(A)l(V)g(I)g(E)g(R)p 1910 4696 1350 4 v 3410
4696 450 4 v 3088 4809 a Fl(Signatur)o(e)520 b(Date)618
5022 y Fm(N)6 b Fn(I)g(C)g(H)g(O)g(L)g(A)g(S)34 b Fm(S)6
b Fn(K)g(I)g(N)g(N)g(E)g(R)p 1910 5022 1350 4 v 3410
5022 450 4 v 3088 5135 a Fl(Signatur)o(e)520 b(Date)1097
5347 y Fm(A)6 b Fn(M)g(Y)35 b Fm(T)n Fn(A)6 b(N)g(G)p
1910 5347 1350 4 v 3410 5347 450 4 v 3088 5460 a Fl(Signatur)o(e)520
b(Date)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 1815 -144 a Fk(Abstract)127 25
y Fj(The)17 b(Big)h(Data)f(team)f(at)h(He)o(wlett)f(P)m(ac)o(kard)j
(currently)f(uses)g(an)f(Or)o(acle)h(database)g(to)f(store)g(industr)q
(ial)g(IoT)g(data)g(gathered)g(from)g(large)g(pr)q(inting)8
137 y(presses)o(.)28 b(The)o(y)e(are)g(interested)h(in)f(mo)o(ving)g
(from)g(their)g(current)g(centr)o(aliz)o(ed)h(database)g(to)f(a)g
(distr)q(ib)o(uted)g(architecture)o(,)g(and)h(ha)o(v)n(e)f(ask)o(ed)h
(our)8 250 y(team)21 b(to)f(in)o(v)n(estigate)h(the)g(oper)o(ation)h
(of)e(their)h(planned)g(system.)g(This)g(repor)s(t)g(introduces)h(our)g
(project,)e(de\002nes)i(our)g(goals)o(,)f(discusses)i(the)e(w)o(or)q(k)
8 362 y(completed)d(dur)q(ing)h(F)m(all)f(T)-8 b(er)r(m,)17
b(and)i(discusses)h(some)f(challenges)g(encountered)g(dur)q(ing)g(the)f
(ter)r(m.)p eop end
%%Page: 1 3
TeXDict begin 1 2 bop 4018 -296 a Fi(1)-148 -144 y Fg(C)t
Fh(O)t(N)t(T)t(E)t(N)t(T)t(S)-150 80 y Ff(1)178 b(Project)24
b(Description)3243 b Fe(2)68 224 y(1.1)197 b(Backgr)o(ound)61
b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(2)68 368 y(1.2)197 b(Purpose)74 b(.)41 b(.)h(.)f(.)g(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(2)68 512 y(1.3)197
b(Goals)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f
(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)135 b(2)68 657 y(1.4)197 b(Challenges)37
b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)
g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(3)-150 880 y Ff(2)178 b(Fall)24 b(T)-9 b(erm)24 b(W)-6
b(ork)3377 b Fe(3)68 1024 y(2.1)197 b(Review)21 b(of)i(Papers)55
b(.)42 b(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)365 1168 y(2.1.1)196 b(E.)22 b(F)-7 b(.)22 b(Codd)h(-)g(A)e
(Relational)h(Model)g(of)h(Data)f(for)h(Lar)o(ge)e(Shar)o(ed)h(Data)f
(Banks)j(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)365 1313 y(2.1.2)196 b(The)22 b(Oracle)g(Optimizer:)f(Explain)h
(the)g(Explain)g(Plan)45 b(.)d(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h
(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)365 1457 y(2.1.3)196 b(Dr)o(emel:)22 b(Interactive)f(Analysis)f(of)
j(W)-7 b(eb-Scale)22 b(Datasets)52 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135
b(4)365 1601 y(2.1.4)196 b(Impala:)20 b(A)i(Modern,)h(Open-Sour)o(ce)e
(SQL)i(Engine)f(for)h(Hadoop)66 b(.)42 b(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(5)365 1745
y(2.1.5)196 b(Parallel)21 b(Execution)i(with)f(Oracle)g(Database)e(18c)
i(Fundamentals)79 b(.)41 b(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g
(.)g(.)h(.)f(.)g(.)135 b(5)365 1890 y(2.1.6)196 b(The)22
b(Case)f(for)i(Shar)o(ed)e(Nothing)j(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g(.)h
(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)
f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)135 b(6)68 2034 y(2.2)197
b(W)-7 b(eekly)22 b(Pr)o(ogr)o(ess)27 b(.)41 b(.)h(.)f(.)g(.)h(.)f(.)g
(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)
h(.)f(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)g(.)h(.)f(.)g(.)h(.)f(.)g(.)h(.)f
(.)g(.)g(.)h(.)f(.)g(.)135 b(7)-150 2257 y Ff(References)3763
b Fe(8)p eop end
%%Page: 2 4
TeXDict begin 2 3 bop 4018 -296 a Fi(2)-148 -144 y Fg(1)96
b(P)t Fh(R)s(O)t(J)t(E)t(C)t(T)33 b Fg(D)t Fh(E)t(S)t(C)t(R)t(I)t(P)t
(T)t(I)t(O)t(N)-150 26 y Fd(1.1)79 b(Bac)n(kgr)n(ound)-150
197 y Fe(The)31 b(HP)g(BackOf)o(\002ce)g(database)e(stor)o(es)i(data)f
(collected)i(fr)o(om)f(appr)o(oximately)f(300)g(industrial)g(printers,)
h(called)g(web)g(pr)o(esses,)e(in)-150 341 y(operation)23
b(globally)-9 b(.)24 b(The)f(pr)o(esses)e(print)j(on)g(paper)e(up)h(to)
h(110)e(in)i(wide)g(at)f(the)g(lar)o(gest,)f(and)i(ar)o(e)f(capable)f
(of)i(printing)g(at)f(speeds)f(of)-150 485 y(up)g(to)g(1000)e(ft)j(per)
f(minute)g(in)g(full)g(color)-6 b(.)24 b(The)d(pr)o(esses)f(ar)o(e)i
(used)g(to)g(print)g(books,)g(packaging,)f(and)h(mail)g(at)g(an)g
(industrial)g(scale)f(for)-150 629 y(many)h(major)g(companies.)f(For)i
(example,)d(the)j(pr)o(esses)d(ar)o(e)h(a)h(part)g(of)h(how)f(Amazon)g
(is)g(able)f(to)i(print)f(and)g(ship)f(a)h(brand)h(new)f(copy)-150
774 y(of)h(a)f(book)g(within)g(4)g(hours)g(of)h(or)o(dering)g(it)f(on)g
(their)g(website.)-31 918 y(Each)k(pr)o(ess)f(r)o(ecor)o(ds)i(data)f
(that)f(is)h(used)g(to)h(diagnose)f(issues,)f(study)h(pr)o(ess)f
(operation,)h(and)g(guide)h(the)f(development)g(of)h(new)-150
1062 y(featur)o(es.)g(Data)g(is)h(collected)h(on)f(alarms,)f(pen)h
(health,)f(print)h(jobs,)f(and)h(other)h(aspects)d(of)j(operations.)e
(This)h(data)f(is)h(str)o(eamed)f(to)-150 1206 y(HP's)20
b(database,)f(wher)o(e)i(it)g(is)f(pr)o(ocessed)g(and)h(analyzed)f(by)h
(teams)e(of)j(engineers.)e(New)h(data)f(is)h(added)g(to)g(the)g
(database)e(at)h(a)h(rate)f(of)-150 1351 y(appr)o(oximately)g(60)h(-)i
(100)e(GB)i(per)f(day;)g(curr)o(ently)-9 b(,)22 b(the)g(database)e
(holds)j(appr)o(oximately)d(30TB)h(of)i(data.)-31 1495
y(HP's)30 b(curr)o(ent)g(database)f(is)h(a)g(centralized)g(Oracle)h
(12c)f(database)e(which)j(shar)o(es)e(all)h(memory)h(and)g(disk)f(r)o
(esour)o(ces)g(between)-150 1639 y(multiple)38 b(pr)o(ocessors.)f
(While)i(Oracle)g(databases)e(handle)i(transactions)e(extr)o(emely)h
(well,)h(HP)f(doesn't)h(have)f(much)h(need)g(for)-150
1783 y(transactions.)22 b(Their)i(data)f(is)g(static)g(once)h(written;)
f(once)h(the)g(data)f(for)h(a)g(day)f(is)h(collected)g(and)g(stor)o
(ed,)f(it)g(is)h(not)f(further)h(modi\002ed.)-150 1928
y(Instead,)32 b(HP)h(mostly)f(performs)h(analytic)g(pr)o(ocessing)f(on)
h(their)g(data,)g(which)g(suf)o(fers)g(unnecessarily)f(fr)o(om)h(the)g
(over)o(head)g(that)-150 2072 y(makes)d(Oracle)g(so)h(good)g(at)f
(transactions.)f(The)i(monolithic)g(ar)o(chitectur)o(e)e(of)j(their)e
(curr)o(ent)h(database)e(also)h(pr)o(esents)f(dif)o(\002culties)-150
2216 y(with)34 b(scaling.)g(As)g(HP)g(anticipates)e(futur)o(e)i(data)g
(loads,)g(they)g(want)g(a)g(solution)g(that)g(will)g(allow)h(cheaper)f
(and)g(mor)o(e)g(ef)o(\002cient)-150 2360 y(scaling.)19
b(This)g(is)h(their)g(motivation)f(behind)h(our)h(pr)o(oject;)d(we)i
(ar)o(e)g(to)f(investigate)g(the)h(behavior)f(of)i(a)e(distributed)h
(system)f(which)h(will)-150 2505 y(far)o(e)i(better)g(in)g(these)f(key)
h(ar)o(eas.)f(Our)h(r)o(esear)o(ch)f(will)i(r)o(esult)e(in)h
(information)h(that)e(will)h(help)g(ease)f(their)i(transition)e(pr)o
(ocess.)-150 2779 y Fd(1.2)79 b(Purpose)-150 2949 y Fe(HP's)19
b(data)g(team)f(has)h(tasked)g(us)g(with)g(gathering)g(information)i
(about)d(a)h(distributed)g(database)f(system)g(implementation.)h(The)g
(data)-150 3093 y(team)f(is)h(particularly)f(inter)o(ested)h(in)g
(Apache)f(/)h(Cloudera)g(Impala,)e(a)i(SQL)g(engine)h(that)e(r)o(uns)h
(on)g(the)g(popular)f(Hadoop)h(Distributed)-150 3238
y(File)j(System)f(\(HDFS\),)i(and)f(would)g(like)g(us)g(to)g(focus)g
(on)h(r)o(esear)o(ching)e(this)h(engine's)f(mechanisms.)-31
3382 y(Our)34 b(sponsor)f(has)g(a)g(variety)h(of)g(r)o(easons)f(for)h
(being)g(inter)o(ested)f(in)h(distributed)f(database)f(systems.)g(At)h
(the)h(cor)o(e)g(of)g(every)-150 3526 y(business)19 b(and)h
(engineering)h(decision)g(is)f(cost,)g(in)g(terms)g(of)h(both)f(time)g
(and)h(money)-9 b(.)20 b(In)g(terms)g(of)h(time,)f(HP's)g(curr)o(ent)g
(exponentially)-150 3670 y(gr)o(owing)30 b(database)e(is)i(causing)e
(queries)i(to)g(r)o(esult)f(in)h(long)g(r)o(unning)g(times.)f(This)g
(is)h(due)f(simply)g(to)h(the)g(lar)o(ge)f(amount)g(of)i(data)-150
3815 y(tables)20 b(that)g(need)h(to)g(be)g(scanned,)f(r)o(educed,)h(or)
h(joined)f(by)g(the)g(single)f(server)-6 b(.)21 b(In)g(addition,)g
(ther)o(e)f(is)h(signi\002cant)f(slowdown)i(caused)-150
3959 y(by)e(the)g(over)o(head)g(Oracle)h(implements)e(for)i(each)f
(query)-9 b(.)20 b(This)g(work)h(could)f(be)g(eased)g(by)g
(implementing)g(a)f(system)h(that)f(distributes)-150
4103 y(queries)g(acr)o(oss)g(multiple)g(servers.)g(HP)g(has)g(also)g
(spent)g(years)g(understanding)g(and)h(optimizing)f(their)h(SQL)g
(queries)f(to)h(best)f(\002t)g(their)-150 4247 y(data's)26
b(behavior)-6 b(,)26 b(so)h(they)g(would)g(like)g(any)g(new)g(system)f
(they)g(adopt)h(to)g(r)o(un)g(SQL)h(as)e(well.)g(Apache)g(Impala)g
(\002ts)g(these)g(criteria.)-150 4392 y(Monetarily)-9
b(,)29 b(HP)g(is)f(inter)o(ested)h(in)g(moving)g(to)g(an)f(open)h(sour)
o(ce)g(solution)f(to)h(cut)g(the)g(cost)g(of)g(Oracle's)g(softwar)o(e)g
(licensing)f(fees,)-150 4536 y(which)g(gr)o(ow)g(mor)o(e)g(expensive)e
(the)i(mor)o(e)g(data)f(the)g(database)f(houses.)h(Impala,)f(as)h(well)
h(as)f(its)g(underlying)h(Hadoop)g(system,)e(is)-150
4680 y(open)c(sour)o(ce.)f(These)h(criteria)g(make)f(Impala)g(a)h(pr)o
(omising)f(solution)h(for)h(HP's)e(data)h(pr)o(oblems.)-150
4954 y Fd(1.3)79 b(Goals)-150 5125 y Fe(The)29 b(goal)h(of)h(our)f(pr)o
(oject)f(is)g(to)h(pr)o(oduce)g(a)f(document)i(that)e(will)h(guide)g(a)
f(person)h(familiar)f(with)h(shar)o(ed-everything)g(database)-150
5269 y(ar)o(chitectur)o(es)17 b(thr)o(ough)i(the)g(setup)e(and)i(use)f
(of)i(a)e(shar)o(ed-nothing)h(ar)o(chitectur)o(e.)e(W)-7
b(e)19 b(will)g(focus)g(on)g(multiple)f(aspects)f(of)j(the)e(system)
-150 5413 y(and)k(pr)o(ovide)g(an)g(explanation)g(of)h(their)f
(function)h(which)g(will)f(allow)g(the)g(r)o(eader)h(to)f(examine)g
(and)g(impr)o(ove)g(the)g(performance)g(of)h(a)p eop
end
%%Page: 3 5
TeXDict begin 3 4 bop 4018 -296 a Fi(3)-150 -144 y Fe(distributed)20
b(system.)f(In)h(particular)-6 b(,)19 b(this)h(document)h(will)f
(examine)g(the)g(tools)g(available)f(for)i(diagnosing)f(and)h(tuning)f
(performance)-150 0 y(pr)o(oblems,)f(the)h(metadata)f(stor)o(e)h(of)h
(the)f(database,)e(the)i(generation)g(of)h(query)g(plans)e(and)i(how)f
(parallelization)f(acr)o(oss)g(nodes)i(af)o(fects)-150
145 y(these)g(plans.)g(W)-7 b(e)22 b(will)h(accomplish)e(this)h(thr)o
(ough)g(a)f(combination)h(of)h(experimentation)e(and)i(r)o(eading)f
(existing)f(documentation.)-150 419 y Fd(1.4)79 b(Challeng)q(es)-150
589 y Fe(This)19 b(pr)o(oject)f(was)h(very)g(unique)g(in)h(comparison)f
(to)g(traditional)g(capstone)g(pr)o(ojects.)f(Our)h(gr)o(oup)g(found)h
(ourselves)f(in)g(the)g(middle)h(of)-150 733 y(a)k(transitionary)f
(period,)h(wher)o(e)g(our)g(instr)o(uctors)g(decided)h(to)f(allow)g
(mor)o(e)g(\003exibility)g(in)g(assignments)e(for)j(gr)o(oups)e(with)h
(r)o(esear)o(ch)-150 878 y(pr)o(ojects.)k(The)i(documentation)g(needed)
g(to)g(de\002ne)g(a)g(r)o(esear)o(ch)f(pr)o(oject)g(is)g(very)h(dif)o
(fer)o(ent)g(than)g(the)g(curr)o(ent)f(class)g(assignments,)-150
1022 y(which)21 b(cater)e(exclusively)h(to)g(pr)o(oduct-pr)o(oducing)g
(pr)o(ojects.)f(In)h(the)g(past)e(when)j(HP)f(has)f(conducted)i(r)o
(esear)o(ch-based)e(pr)o(ojects,)f(they)-150 1166 y(have)30
b(cr)o(eated)h(documents)f(without)h(much)f(practical)g(use.)g(They)h
(wer)o(e)f(not)h(applicable)e(to)i(the)g(pr)o(oject,)f(but)g(wer)o(e)g
(r)o(equir)o(ed)h(for)-150 1310 y(the)e(Capstone)g(class,)f(which)i(r)o
(esulted)f(in)h(much)f(dif)o(\002culty)h(for)g(the)g(team)f(attempting)
f(to)i(write)f(them.)g(However)-6 b(,)30 b(we)g(wer)o(e)f(not)-150
1455 y(informed)f(about)d(this)h(detour)h(fr)o(om)g(the)f(assigned)g
(documents)g(until)h(week)f(5)g(of)h(the)f(class,)g(once)h(our)f(gr)o
(oup's)g(planning)g(for)h(the)-150 1599 y(assigned)21
b(documents)h(had)g(alr)o(eady)g(begun.)-31 1743 y(W)-7
b(e)24 b(wer)o(e)h(tasked)f(with)h(the)g(challenging)f(pr)o(ospect)g
(of)h(cr)o(eating)g(our)g(own)g(assignments)e(for)j(the)e(entir)o(e)h
(term.)f(This)g(was)g(made)-150 1887 y(mor)o(e)17 b(challenging)h
(because)e(our)h(sponsor)-6 b(,)17 b(instr)o(uctor)-6
b(,)17 b(and)h(T)-6 b(A)16 b(wer)o(e)h(not)h(sur)o(e)e(what)h(kind)h
(of)g(documentation)f(we)g(should)g(pr)o(oduce.)-150
2032 y(As)27 b(the)h(term)f(went)h(on,)g(it)g(became)f(appar)o(ent)f
(that)h(our)h(sponsor)f(and)h(our)g(instr)o(uctors)g(had)g(dif)o(fer)o
(ent)g(ideas)g(for)g(what)g(our)g(team)-150 2176 y(should)22
b(accomplish)g(fr)o(om)h(this)f(pr)o(oject.)f(Our)i(instr)o(uctors)f
(pr)o(eferr)o(ed)h(multiple)e(physical)h(deliverables)f(and)i(set)e
(timelines,)h(but)g(our)-150 2320 y(sponsors)e(pr)o(eferr)o(ed)h(us)g
(to)g(do)h(as)e(little)h(documentation)g(as)f(possible)g(and)h
(focusing)g(on)h(r)o(eading)f(papers)e(and)j(gaining)f
(\224hands-on\224)-150 2464 y(knowledge.)31 b(W)-7 b(e)31
b(attempted)e(to)i(combine)g(these)f(two)g(inter)o(ests)g(to)g(the)h
(best)f(of)h(our)g(ability;)f(however)-6 b(,)31 b(the)f(main)h(r)o
(esult)e(of)j(this)-150 2609 y(attempt)21 b(was)g(delayed)h(papers)f
(due)h(to)g(fr)o(equently)h(changing)f(r)o(equir)o(ements.)-31
2753 y(W)-7 b(e)29 b(solved)h(this)g(pr)o(oblem)f(by)h(having)f(the)h
(instr)o(uctors)f(and)h(sponsors)f(speak)g(dir)o(ectly)h(to)g(each)g
(other)-6 b(,)30 b(instead)f(of)i(our)f(team)-150 2897
y(r)o(elaying)d(information)g(indir)o(ectly)h(between)e(the)h(two)g
(parties,)f(so)h(they)g(could)h(r)o(esolve)e(their)h(dif)o(fer)o(ences)
g(in)h(expectations.)d(Much)-150 3041 y(time)e(was)g(lost)g(de\002ning)
h(these)f(speci\002cs,)f(with)i(the)f(length)h(and)g(quality)f(of)h
(our)g(work)g(feeling)g(the)f(br)o(unt)h(of)g(this)f(loss.)g(One)h(of)g
(the)-150 3186 y(most)j(disappointing)f(losses)g(that)g(was)h(caused)f
(due)h(to)g(this)g(lack)g(of)h(dir)o(ect)f(communications)g(was)f(the)h
(one)g(assignment)f(we)h(did)-150 3330 y(r)o(eceive)21
b(guidance)g(on)g(and)g(completed)g(a)g(signi\002cant)f(portion)h(of)h
(the)f(work)h(for:)f(our)h(Resear)o(ch)e(Pr)o(oposal.)f(This)i
(assignment)e(ended)-150 3474 y(up)j(not)i(being)e(used)h(this)g(term.)
f(Our)i(instr)o(uctor)f(would)g(like)g(us)g(to)g(turn)g(this)f(in)i(at)
e(an)h(unspeci\002ed)f(futur)o(e)g(date.)h(In)g(the)g(futur)o(e)f(we)
-150 3618 y(would)g(like)h(to)f(have)f(our)h(stakeholders')g
(expectations)e(mor)o(e)i(clearly)g(de\002ned)h(and)f(agr)o(eed)g(upon)
f(much)h(earlier)g(in)g(the)g(term.)g(That)-150 3763
y(way)-9 b(,)25 b(our)g(time)g(in)g(upcoming)g(terms)g(can)g(be)g
(spent)f(pr)o(oductively)h(on)g(deliverables)f(and)i(not)f(spent)f
(almost)g(entir)o(ely)h(on)h(de\002ning)-150 3907 y(the)c(possible)f
(assignments)f(and)i(facilitating)g(communication.)-148
4206 y Fg(2)96 b(F)m Fh(A)t(L)t(L)32 b Fg(T)t Fh(E)t(R)t(M)f
Fg(W)r Fh(O)t(R)t(K)-150 4376 y Fe(Once)19 b(assignments)e(wer)o(e)h
(de\002ned,)h(we)g(begun)f(work)h(by)f(r)o(eviewing)h(a)f(selection)g
(of)h(r)o(elevant)f(papers)f(suggested)h(by)g(our)h(client.)f(The)-150
4520 y(\002rst)i(four)h(of)f(the)h(papers)d(discussed)i(below)g(wer)o
(e)g(the)g(subject)f(of)i(a)f(mor)o(e)g(detailed)g(analysis)f(and)h
(write-up,)g(while)g(the)g(others)g(wer)o(e)-150 4664
y(used)29 b(as)f(supplementary)g(sour)o(ces)g(for)i(an)f(additional)g
(assignment.)f(All)h(papers)f(discussed)g(can)h(be)g(found)h(in)g(the)f
(bibliography)-150 4809 y(at)24 b(the)h(end)g(of)h(the)e(r)o(eport.)h
(Below)g(the)g(r)o(eview)f(of)i(this)e(r)o(eading)h(is)f(a)h
(week-by-week)g(summary)f(of)h(our)g(pr)o(ogr)o(ess)f(thr)o(oughout)g
(the)-150 4953 y(term.)p eop end
%%Page: 4 6
TeXDict begin 4 5 bop 4018 -296 a Fi(4)-150 -144 y Fd(2.1)79
b(Re)o(vie)o(w)22 b(of)g(P)n(aper)o(s)-150 26 y Fc(2.1.1)79
b(E.)22 b(F)-12 b(.)23 b(Codd)f(-)g(A)g(Relational)f(Model)h(of)g(Data)
g(f)n(or)g(Large)g(Shared)g(Data)h(Banks)-150 189 y Fe(T)-7
b(o)26 b(begin)h(our)g(r)o(eading,)f(our)h(client)g(suggested)f(\224A)g
(Relational)g(Model)h(of)g(Data)f(for)i(Lar)o(ge)e(Shar)o(ed)g(Data)g
(Banks\224)g(by)h(E.)g(F)-7 b(.)26 b(Codd.)-150 333 y(Published)d(in)h
(June)g(of)h(1970)d(in)i(the)f(Communications)h(of)g(the)g(ACM,)f(the)h
(paper)e(forms)j(the)e(foundation)i(for)f(r)o(elational)f(databases)
-150 478 y(that)k(ar)o(e)h(in)g(use)f(nearly)h(everywher)o(e)g(today)-9
b(.)28 b(Codd)h(was)e(concerned)i(with)f(insulating)g(the)f(user)h(fr)o
(om)g(changes)g(in)g(the)g(str)o(uctur)o(e)-150 622 y(of)35
b(data)e(storage,)h(which)g(he)h(felt)f(that)g(the)g(user)f(should)i
(not)f(need)h(to)f(be)g(awar)o(e)f(of.)i(T)-7 b(o)33
b(accomplish)h(this,)f(Codd)j(outlines)d(an)-150 766
y(application)23 b(of)i(set)f(and)g(r)o(elation)g(theory)g(to)h
(databases.)d(The)h(concept)i(of)g(normalization)e(is)h(intr)o(oduced,)
h(including)g(normal)f(form)-150 910 y(and)h(associated)f(concepts)g
(such)g(as)g(primary)h(and)g(for)o(eign)g(keys.)g(Once)g(he)g(has)f
(established)f(the)i(concept)g(of)g(normal)g(form,)h(Codd)-150
1055 y(discusses)21 b(operations)g(and)h(interactions)g(with)g(the)g
(table)f(that)h(form)h(the)f(basis)e(for)j(database)e(languages,)f
(including)j(SQL.)-150 1291 y Fc(2.1.2)79 b(The)23 b(Or)o(acle)e
(Optimiz)o(er)r(:)g(Explain)f(the)j(Explain)d(Plan)-150
1454 y Fe(T)-7 b(o)21 b(r)o(ecommend)g(changes,)f(our)i(team)e(needs)h
(knowledge)h(of)f(the)g(curr)o(ent)g(system.)f(Our)h(team)g(will)g(be)g
(r)o(esear)o(ching)f(and)h(comparing)-150 1598 y(two)26
b(dif)o(fer)o(ent)h(systems,)d(but)i(to)g(begin,)g(we)h(r)o(equir)o(e)f
(a)f(point)i(of)f(r)o(efer)o(ence.)g(T)-7 b(o)26 b(understand)g(the)g
(Oracle)h(12c)f(system)f(curr)o(ently)h(in)-150 1743
y(use,)c(HP)h(has)f(r)o(ecommended)i(r)o(eading)e(\224The)h(Oracle)g
(Optimizer:)f(Explain)g(the)h(Explain)g(Plan\224)f(guide.)h(The)f
(Oracle)h(Optimizer)g(is)f(a)-150 1887 y(tool)f(that)f(attempts)e(to)j
(r)o(esolve)f(the)g(most)g(ef)o(\002cient)h(execution)f(plan)g(for)h(a)
f(given)h(query)g(using)f(histogram)g(information)h(in)f(addition)-150
2031 y(to)i(data)g(pr)o(ojection)f(based)g(on)i(indices)f(and)g
(dependencies.)g(The)g(optimizer)f(aims)g(to)h(r)o(educe)g(the)g(time)g
(and)g(CPU)g(usage)f(to)h(r)o(esolve)-150 2175 y(the)27
b(query)-9 b(.)27 b(T)-7 b(o)26 b(aid)h(the)g(user)f(in)h
(understanding)g(its)g(actions,)f(the)h(Oracle)g(Optimizer)f(can)h
(generate)f(a)h(log)g(of)g(the)g(execution)g(plan)-150
2320 y(of)i(a)g(query)g(to)f(display)g(to)h(the)f(user)-6
b(.)29 b(Logs)g(generated)f(by)h(the)f(optimizer)g(also)g(include)h
(information)h(on)f(the)f(r)o(esour)o(ces)g(used)g(to)-150
2464 y(accomplish)23 b(the)h(task.)f(An)h(execution)f(plan)h(is)f(r)o
(eferr)o(ed)i(to)f(as)f(an)g(Explain)h(Plan.)f(An)h(Explain)f(Plan)h
(fr)o(om)g(the)g(Query)g(Coor)o(dinator)-150 2608 y(takes)34
b(r)o(elevant)f(information)j(about)e(the)g(table)g(str)o(uctur)o(e)g
(and)h(dependencies)f(fr)o(om)h(an)g(executable)e(query)i(and)g
(compiles)f(the)-150 2752 y(metadata)23 b(needed)j(to)e(generate)h(an)f
(ef)o(\002cient)g(plan)g(to)h(execute)f(the)h(operation.)f(The)g(Query)
h(Coor)o(dinator)h(takes)d(in)i(\(1\))g(how)g(much)-150
2897 y(CPU)19 b(is)h(available,)e(\(2\))i(the)g(pr)o(ojected)f(time)h
(to)g(dispatch)f(and)h(complete)g(individual)g(operations,)f(\(3\))h
(the)g(composition)f(of)i(the)f(query)-150 3041 y(and)32
b(\(4\))g(external)f(dependencies)h(on)g(the)g(involved)g(tables.)e(W)l
(ith)i(these)f(inputs,)f(the)i(Query)g(Coor)o(dinator)g(forms)h(an)e
(educated)-150 3185 y(estimation)21 b(of)i(what)f(methods)g(and)g(what)
f(or)o(der)i(it)f(should)g(execute)g(the)g(query)-9 b(.)-31
3329 y(The)22 b(\224Explain)g(the)g(Explain)g(Plan\224)g(paper)g(is)g
(a)g(thor)o(ough,)h(yet)f(concise)h(r)o(esour)o(ce)f(on)h(Oracle's)g
(Query)f(Coor)o(dinator)-6 b(.)24 b(The)e(paper)-150
3474 y(goes)g(thr)o(ough)g(detailed)h(information)g(on)f(query)h
(planning)f(and)g(coor)o(dinating,)h(measuring)e(the)i(weights)e(of)i
(dif)o(fer)o(ent)g(actions)f(and)-150 3618 y(comparing)i(them)f
(against)f(the)i(curr)o(ent)f(value)g(of)h(available)e(r)o(esour)o
(ces.)h(Car)o(dinality)-9 b(,)23 b(access)f(methods,)i(join)f(methods,)
h(join)f(types,)-150 3762 y(join)e(or)o(ders,)h(partition)f(pr)o(uning)
g(and)h(parallel)e(execution)h(ar)o(e)g(all)g(vital)g(components)g(to)g
(query)h(optimization)f(that)f(will)i(change)f(the)-150
3906 y(cost)h(of)h(a)e(query)i(plan.)-150 4143 y Fc(2.1.3)79
b(Dremel:)22 b(Inter)o(activ)n(e)g(Analysis)d(of)k(W)n(eb-Scale)d
(Datasets)-150 4306 y Fe(This)e(paper)f(pr)o(ovides)h(fundamental)g
(concepts)g(of)h(Dr)o(emel,)f(fr)o(om)h(its)f(ar)o(chitectur)o(e)g(to)g
(implementation,)f(and)i(explains)e(how)i(Dr)o(emel)-150
4450 y(makes)32 b(mor)o(e)h(ef)o(\002cient)g(performance)g(than)g
(MapReduce)f(computing)h(does.)g(Data)f(in)h(Dr)o(emel)g(is)g(or)o
(ganized)g(in)g(a)g(\224columnar\224)-150 4595 y(format,)22
b(which)h(contributes)e(to)h(very)g(fast)g(query)g(speed.)-31
4739 y(Dr)o(emel)d(is)f(a)h(distributed)f(system)g(for)i(interactive)e
(analysis)g(of)h(lar)o(ge)f(datasets.)f(It)i(is)f(also)h(a)f(custom,)g
(scalable)g(data)g(management)-150 4883 y(solution)28
b(built)f(fr)o(om)i(simpler)e(components.)g(Dr)o(emel)h(complements)f
(the)h(MapReduce)f(paradigm,)g(and)h(pr)o(ovides)g(fault)f(tolerant)
-150 5027 y(execution)g(just)g(like)g(MapReduce)g(does.)h(It)f(also)g
(includes)h(a)f(\003exible)g(data)g(model)i(and)e(in)h(situ)f(data)g
(pr)o(ocessing)g(capabilities.)e(In)-150 5172 y(situ)c(r)o(efers)h(to)h
(the)f(ability)f(to)h(access)f(data)h('in)g(place'.)-31
5316 y(Importantly)-9 b(,)24 b(Dr)o(emel)h(uses)f(a)h(columnar)g
(nested)g(storage.)f(The)h(ar)o(chitectur)o(e)f(of)h(Dr)o(emel)g(has)g
(the)g(same)f(concept)h(of)h(a)e(serving)-150 5460 y(tr)o(ee)h(used)g
(in)h(distributed)g(sear)o(ch)e(engines.)i(The)f(query)h(gets)f(pushed)
g(down)h(the)f(tr)o(ee)h(and)f(is)h(r)o(ewritten)f(at)g(each)h(step.)e
(The)h(r)o(esult)p eop end
%%Page: 5 7
TeXDict begin 5 6 bop 4018 -296 a Fi(5)-150 -144 y Fe(of)23
b(the)g(query)g(is)f(assembled)f(by)h(aggr)o(egating)g(the)g(r)o
(eplies)g(r)o(eceived)g(fr)o(om)h(lower)g(levels)f(of)h(the)g(tr)o(ee.)
f(Dr)o(emel)g(supports)f(a)h(SQL-like)-150 0 y(syntax,)h(but)h(does)h
(not)g(support)f(update)f(or)i(cr)o(eate)f(functions.)h(In)f(contrast)h
(to)f(layers)h(such)f(as)g(Pig)g(and)h(Hive,)f(it)h(executes)e(queries)
-150 145 y(natively)g(without)g(translating)g(them)g(into)h(MapReduce)f
(jobs.)g(Besides,)g(Dr)o(emel)g(uses)g(a)g(column-striped)h(storage)f
(r)o(epr)o(esentation.)-150 289 y(The)34 b(data)f(is)h(r)o(epr)o
(esented)e(as)i(a)f(set)h(of)g(columns.)g(The)f(advantage)g(this)h
(brings)f(is)h(that)f(it)h(allows)g(users)f(to)h(r)o(ead)g(less)f(data)
g(by)-150 433 y(r)o(etrieving)22 b(only)g(columns)g(they)g(need,)g
(which)h(r)o(educes)f(CPU)f(cost.)-31 577 y(Based)j(on)h(the)f(major)h
(idea)f(of)h(the)g(pr)o(oject)e(is)h(focusing)h(on)g(switching)g(to)f
(distributed)g(system,)g(this)g(paper)f(helps)h(us)g(to)h(have)e(a)-150
722 y(compr)o(ehensive)17 b(understanding)h(of)g(distributed)g(system)f
(that)g(uses)g(columnar)g(nested)h(storage,)f(and)h(clari\002es)g(dif)o
(fer)o(ences)g(between)-150 866 y(r)o(ow)k(storage)g(and)g(columnar)g
(storage.)-150 1103 y Fc(2.1.4)79 b(Impala:)22 b(A)g(Moder)r(n,)g
(Open-Source)g(SQL)f(Engine)h(f)n(or)g(Hadoop)-150 1266
y Fe(This)k(paper)h(served)g(as)f(an)h(intr)o(oduction)g(to)h(the)f(r)o
(est)f(of)i(our)f(r)o(esear)o(ch)f(going)i(forwar)o(d.)g(Impala)d(is)i
(an)g(open)g(sour)o(ce)g(SQL)g(engine)-150 1410 y(designed)20
b(to)g(r)o(un)g(with)f(high)h(concurr)o(ency)g(and)g(low)g(latency)f
(on)h(distributed)f(frameworks)h(such)f(as)g(Hadoop.)h(This)e(paper)h
(detailed)-150 1554 y(Impala's)i(SQL)h(engine,)h(while)f(also)g
(detailing)h(how)g(it)f(works)h(as)e(a)i(distributed)f(framework-)h
(speci\002cally)f(how)h(it)f(distributes)g(data)-150
1699 y(and)k(queries)g(over)h(the)f(Hadoop)g(Distributed)g(File)h
(System.)d(This)i(paper)f(gave)h(some)g(explanation)f(fr)o(om)i(a)f
(user)6 b('s)25 b(point)h(of)h(view)-7 b(,)-150 1843
y(such)32 b(as)f(how)h(to)g(cr)o(eate)f(a)h(table)f(and)h(wher)o(e)g
(in)g(the)g(\002le)f(system)g(that)g(data)h(would)g(be)g(stor)o(ed.)f
(However)-6 b(,)32 b(most)g(of)g(the)g(paper)-150 1987
y(detailed)e(Impala's)d(ar)o(chitectur)o(e:)h(its)h(fr)o(ontend)h
(code,)g(backend)f(code,)h(and)g(data)f(storage.)f(The)h(Impala)f(fr)o
(ont)i(end)g(is)f(wher)o(e)g(the)-150 2131 y(SQL)f(is)e(translated)h
(into)g(execution)g(plans,)f(and)i(the)f(backend)g(is)g(wher)o(e)g
(these)g(plans)f(ar)o(e)h(actually)f(carried)i(out.)f(Query)h(plans)e
(in)-150 2276 y(Impala's)e(fr)o(ont)j(end)g(have)e(two)i(stages:)d
(single)i(node)h(planning,)f(and)g(plan)g(parallelization)e(and)j
(fragmentation\226)e(to)i(pr)o(epar)o(e)d(the)-150 2420
y(query)g(for)i(distribution)e(acr)o(oss)f(all)h(of)g(the)g(system's)f
(nodes.)h(When)g(the)h(query)f(plan)f(is)h(optimized,)g(\224cost)f
(estimation)g(is)h(based)g(on)-150 2564 y(table/partition)f(car)o
(dinalities)g(plus)g(distinct)h(value)g(counts)f(for)j(each)e
(column\224.)f(The)h(second)h(part)e(of)i(the)f(fr)o(ontend)h(planning)
f(has)-150 2708 y(two)f(goals)f(for)i(plan)e(distribution:)g(to)h
(minimize)g(the)f(amount)h(of)g(data)f(movement)h(and)g(to)f(maximize)g
(\224scan)g(locality\224.)g(These)g(two)-150 2853 y(terms)27
b(which)h(ar)o(e)f(r)o(elated,)g(and)h(ar)o(e)f(placed)g(at)g(such)g
(high)h(importance)f(due)h(to)f(the)h(Hadoop)f(File)h(System)e(r)o
(emote)h(r)o(eads)g(\(r)o(eads)-150 2997 y(not)e(fr)o(om)g(the)g(curr)o
(ent)g(node\))h(being)e(much)h(slower)g(than)g(local)g(\(all)g(data)f
(found)i(within)f(the)f(node\))i(ones.)f(Impala's)e(backend,)h(the)-150
3141 y(query)i(executor)-6 b(,)26 b(r)o(uns)g(on)g(each)g(node)g(in)g
(the)g(system)f(independently)-9 b(.)26 b(This)f(backend)h(also)f
(manages)f(I/O)i(and)g(storage)f(formats.)-150 3285 y(The)30
b(paper)g(also)g(pointed)h(out)f(the)h(r)o(oadmap)e(for)j(wher)o(e)e
(the)h(Impala)e(developers)h(wanted)h(it)f(to)h(be)f(in)h(the)g(futur)o
(e,)f(which)h(also)-150 3430 y(conveniently)22 b(highlighted)h(certain)
f(standar)o(d)f(SQL)i(and)f(database)e(featur)o(es)h(that)g(Impala)g
(is)h(curr)o(ently)g(missing.)-31 3574 y(This)h(paper)f(served)i(as)f
(a)g(starting)g(point)g(for)i(wher)o(e)f(our)f(r)o(esear)o(ch)g(for)i
(the)e(r)o(est)g(of)h(the)g(term)g(will)f(go.)h(The)f(questions)g
(posed)h(in)-150 3718 y(our)j(pr)o(oject)f(goals)g(wer)o(e)h(touched)g
(on)g(brie\003y)g(in)g(this)g(paper)-6 b(,)25 b(but)h(none)i(wer)o(e)e
(discussed)g(in)h(the)g(amount)f(of)i(depth)e(r)o(equir)o(ed)h(for)-150
3862 y(our)g(sponsors)e(needs.)i(However)-6 b(,)26 b(this)g(paper)g
(did)h(give)f(us)g(indications)h(for)g(wher)o(e)g(we)f(can)h(go)f(to)h
(\002nd)g(the)f(information)h(needed)-150 4007 y(to)c(answer)f(our)h
(questions,)f(such)g(as)g(how)h(we)g(can)g(investigate)e(Impalas)g(fr)o
(ontend)i(mor)o(e)g(to)g(learn)g(about)f(its)g(query)h(planning,)f(and)
-150 4151 y(how)g(we)h(can)f(r)o(ead)f(mor)o(e)i(about)e(the)h(backend)
g(to)g(learn)g(mor)o(e)g(about)f(how)i(it)f(handles)g(distributions.)
-150 4388 y Fc(2.1.5)79 b(P)m(ar)o(allel)21 b(Ex)n(ecution)f(with)i(Or)
o(acle)g(Database)f(18c)h(Fundamentals)-150 4551 y Fe(Oracle)k(is)e(an)
h(example)g(of)h(a)e(database)g(system)g(that)h(implements)f(shar)o
(ed-everything)h(ar)o(chitectur)o(e.)f(The)h(data)f(contained)i(within)
-150 4695 y(the)34 b(Oracle)g(system)e(is)i(accessible)e(to)i(all)f(pr)
o(ocessing)g(units)g(without)h(limitations.)e(The)i(parallelism)e
(implemented)h(within)h(the)-150 4839 y(Oracle)27 b(system)e(is)h(not)g
(limited)h(to)f(the)h(data)e(access)h(that)g(an)g(individual)g(node)h
(would)g(possess.)d(Rather)-6 b(,)26 b(all)g(dispatchable)f(agents)-150
4983 y(associated)c(with)h(the)g(database)e(ar)o(e)i(capable)f(of)h
(accessing)g(all)g(the)f(data)h(contents.)-31 5128 y(Oracle's)27
b(shar)o(ed-everything)g(ar)o(chitectur)o(e)f(does)i(not)f(r)o(equir)o
(e)g(data)g(partitioning)g(to)h(enable)e(parallelism)g(by)i(default;)f
(data)f(is)-150 5272 y(accessible)f(fr)o(om)h(all)g(pr)o(ocessing)f
(units)h(without)f(limitations.)h(Parallelism)e(within)j(the)f(Oracle)g
(system)f(is)h(implemented)f(thr)o(ough)-150 5416 y(dividing)d(a)e
(query)h(into)g(smaller)f(components)h(called)f(granules.)g(Granules)h
(r)o(epr)o(esent)e(a)h(fraction)i(of)f(a)g(query)-9 b(,)21
b(and)g(can)f(be)h(assigned)p eop end
%%Page: 6 8
TeXDict begin 6 7 bop 4018 -296 a Fi(6)-150 -144 y Fe(a)24
b(speci\002c)f(block)i(range)f(in)g(memory)-9 b(.)24
b(These)g(block-based)g(granules)f(ar)o(e)h(assigned)f(a)h(position)f
(within)i(the)f(memory)g(or)h(storage)e(of)-150 0 y(the)f(Oracle)h
(system,)f(and)g(will)h(do)g(all)g(actions)f(within)g(their)h(block)g
(range.)f(Upon)h(r)o(esolving)f(a)g(task,)f(a)i(granule)f(will)h(need)g
(to)f(r)o(eport)-150 145 y(its)j(r)o(esult)f(set)g(to)h(another)g
(agent.)g(The)f(action)h(it)g(will)h(take)e(to)h(complete)g(this)g
(task)f(is)h(known)g(as)f('data)h(r)o(edistribution',)f(and)i(it)f(is)f
(a)-150 289 y(key)f(component)g(to)h(many)e(non-trivial)i(parallel)e
(operations,)g(including)i(parallel)e(aggr)o(egations,)g(joins)h(and)g
(sorts.)f(The)h(individual)-150 433 y(granule)h(does)h(not)g(know)f
(the)h(br)o(oader)f(context)h(of)g(the)f(operation)h(the)f(r)o
(etrieved)g(data)g(will)h(be)f(used)h(within,)f(so)g(it)h(must)e(pass)g
(the)-150 577 y(r)o(esult)f(set)g(to)g(a)h(subsequent)e(operation)h(on)
h(the)g(r)o(esult)f(set)g(contents.)g(The)g(query)h(coor)o(dinator)h
(will)f(dispatch)e(an)i(agent)f(to)h(grab)f(the)-150
722 y(r)o(esult)28 b(set)g(fr)o(om)h(the)g(pr)o(evious)f(granule,)g
(and)h(assign)f(the)h(new)g(agent)f(a)g(granule)h(of)h(work)f(to)g(pr)o
(ocess.)f(This)g(series)g(of)h(events)f(is)-150 866 y(r)o(ecursively)21
b(performed)i(until)f(the)g(end)h(query)f(r)o(esult)f(is)h(r)o(eached.)
-31 1010 y(The)35 b(manual)g(is)h(an)f(additional)h(r)o(esour)o(ce)f
(that)g(will)h(be)g(used)g(going)g(into)g(the)g(team's)e(r)o(esear)o
(ch.)h(The)g(manual)g(pr)o(esents)f(a)-150 1154 y(fundamental)27
b(explanation)g(of)h(Oracle's)g(implementation)e(of)j(the)e(shar)o(ed)h
(everything)f(ar)o(chitectur)o(e.)g(The)g(manual)g(covers)g(basics)-150
1299 y(of)41 b(how)g(memory)g(and)g(pr)o(ocessing)f(ar)o(e)g(shar)o(ed)
g(between)g(agents)g(thr)o(ough)h(to)g(the)f(extensions)g(of)h(the)g
(Oracle)g(pr)o(ogram)f(to)-150 1443 y(accommodate)32
b(shar)o(ed-nothing)g(methodologies.)g(It)g(also)f(contains)h
(information)h(r)o(egar)o(ding)e(Oracle's)h(attempt)f(to)h(addr)o(ess)f
(the)-150 1587 y(bene\002ts)21 b(within)h(the)g(shar)o(ed)g(nothing)g
(ar)o(chitectur)o(e.)f(Partition)h(based)f(granules)h(ar)o(e)f(an)h
(example)f(of)h(appr)o(oaching)f(the)h(distributed)-150
1731 y(nodes)g(with)g(dedicated)h(agents)e(within)h(oracle.)-150
1968 y Fc(2.1.6)79 b(The)23 b(Case)e(f)n(or)h(Shared)h(Nothing)-150
2131 y Fe(\224The)k(Case)h(for)h(Shar)o(ed)e(Nothing\224)h(by)g
(Michael)g(Stonebraker)g(is)f(a)h(short)g(paper)f(that)h(vaguely)f
(describes)h(the)g(merits)g(of)g(shar)o(ed-)-150 2276
y(nothing)d(ar)o(chitectur)o(es.)e(He)h(pr)o(ovides)g(a)h(simple)e
(table)h(which)h(ranks)g(shar)o(ed-nothing,)f(shar)o(ed-memory)-9
b(,)25 b(and)g(shar)o(ed-disk)f(ar)o(chi-)-150 2420 y(tectur)o(es)e
(based)h(on)h(performance)g(in)f(terms)g(of)h(\224dif)o(\002culty)f(of)
h(concurr)o(ency)h(contr)o(ol\224,)e(\224number)g(of)h(messages\224,)d
(and)i(other)h(vague)-150 2564 y(criteria.)f(Several)f(of)i(these)f
(criteria)g(ar)o(e)g(not)g(well)h(de\002ned,)f(and)g(none)h(de\002ne)f
(clearly)h(how)f(Stonebraker)g(came)g(to)g(his)g(conclusions)-150
2708 y(r)o(egar)o(ding)33 b(the)h(rankings)f(the)h(assigned.)e
(Although)i(this)f(paper)f(was)h(quite)h(vague,)e(it)i(intr)o(oduced)g
(us)f(to)h(criteria)g(we)f(can)h(use)-150 2853 y(to)29
b(compar)o(e)e(shar)o(ed-nothing)i(and)g(shar)o(ed-everything)f(ar)o
(chitectur)o(es,)f(which)i(our)f(sponsor)g(is)h(very)f(inter)o(ested)g
(in)h(learning)f(the)-150 2997 y(bene\002ts)21 b(and)h(faults)g(of.)p
eop end
%%Page: 7 9
TeXDict begin 7 8 bop 4018 -296 a Fi(7)-150 -144 y Fd(2.2)79
b(W)m(eekl)o(y)22 b(Pr)n(ogress)-100 0 y Fe(W)-7 b(eek)p
241 44 4 145 v 201 w(Details)p 1522 44 V 1035 w(Pr)o(oblem)22
b(&)g(Solution)p 3039 44 V 821 w(Assignment)f(Due)p -150
47 4472 4 v -100 148 a(W)-7 b(eek)22 b(3)p 241 1057 4
1010 v 139 w(W)-7 b(e)29 b(wer)o(e)h(assigned)e(to)i(gr)o(oups.)f(W)-7
b(e)293 292 y(set)56 b(up)h(the)g(Slack)g(channel)h(and)293
436 y(Github)50 b(r)o(epo.)f(W)-7 b(e)50 b(had)h(our)f(\002rst)293
581 y(meeting)23 b(with)i(the)f(client)g(to)g(get)g(de-)293
725 y(tails)i(for)i(pr)o(oblem)f(statements,)f(and)293
869 y(scheduled)42 b(futur)o(e)h(meetings)f(with)293
1013 y(our)22 b(client)g(and)g(T)-6 b(A.)p 1522 1057
V 3039 1057 V 3090 148 a(Pr)o(oblem)22 b(statement)e(-)j(individual)
-100 1158 y(W)-7 b(eek)22 b(4)p 241 1489 4 433 v 139
w(W)-7 b(e)19 b(had)h(another)g(meeting)g(with)f(our)293
1302 y(client)49 b(to)h(discuss)f(the)h(pr)o(oject)f(in)293
1446 y(mor)o(e)22 b(detail.)p 1522 1489 V 3039 1489 V
3090 1158 a(Pr)o(oblem)g(statement)e(-)j(gr)o(oup)f(\002nal)-100
1590 y(W)-7 b(eek)22 b(5)p 241 2499 4 1010 v 139 w(W)-7
b(e)32 b(decided)h(on)g(choosing)f(the)g(Re-)293 1735
y(sear)o(ch)20 b(Pr)o(oposal)g(over)h(the)g(Requir)o(e-)293
1879 y(ments)46 b(Document,)h(and)f(assigned)293 2023
y(sections)21 b(to)h(complete.)p 1522 2499 V 1573 1590
a(Pr)o(oblem:)31 b(W)-7 b(e)31 b(had)g(dif)o(\002culty)g(brainstorm-)
1573 1735 y(ing)21 b(on)g(how)h(to)f(write)g(a)f(paper)g(that)g(is)h
(help-)1573 1879 y(ful)29 b(to)g(our)g(pr)o(oject,)f(and)h(needed)g
(mor)o(e)g(di-)1573 2023 y(r)o(ection.)e(Solution:)g(W)-7
b(e)26 b(met)h(with)g(Dr)-6 b(.)27 b(W)l(in-)1573 2167
y(ter)-6 b(,)43 b(who)h(modeled)g(our)g(writing)f(assign-)1573
2312 y(ments.)28 b(W)-7 b(e)28 b(also)g(set)g(up)g(weekly)g(meetings)
1573 2456 y(with)22 b(her)-6 b(.)p 3039 2499 V -100 2600
a(W)f(eek)22 b(6)p 241 2643 4 145 v 1522 2643 V 3039
2643 V -100 2744 a(W)-7 b(eek)22 b(7)p 241 3220 4 577
v 139 w(Dr)-6 b(.)22 b(W)l(inters)g(gave)f(feedback)i(on)f(our)293
2889 y(draft)33 b(Resear)o(ch)e(Pr)o(oposal,)h(and)h(we)293
3033 y(planned)24 b(the)i(small-scale)e(literatur)o(e)293
3177 y(r)o(eview)-7 b(.)p 1522 3220 V 3039 3220 V 3090
2744 a(Resear)o(ch)21 b(Pr)o(oposal)-100 3321 y(W)-7
b(eek)22 b(8)p 241 3797 V 139 w(W)-7 b(e)40 b(met)g(and)g(discussed)g
(the)g(con-)293 3466 y(tents)24 b(of)i(the)f(chosen)h(4)f(papers)f
(with)293 3610 y(our)39 b(clients,)f(and)h(began)g(work)g(on)293
3754 y(the)21 b(r)o(eview)h(paper)-6 b(.)p 1522 3797
V 3039 3797 V -100 3898 a(W)f(eek)22 b(9)p 241 4663 4
866 v 139 w(Dr)-6 b(.)23 b(W)l(inters)f(and)h(our)h(clients)e(spoke)293
4043 y(dir)o(ectly)-9 b(,)31 b(and)h(clari\002ed)g(the)f(assign-)293
4187 y(ments)h(for)j(the)e(term.)g(W)-7 b(e)34 b(r)o(eceived)293
4331 y(permission)c(to)i(stop)f(meeting)h(with)293 4475
y(our)18 b(T)-6 b(A)17 b(and)i(meet)e(with)h(Dr)-6 b(.)19
b(W)l(inters)293 4620 y(instead.)p 1522 4663 V 3039 4663
V 3090 3898 a(Review)j(paper)-100 4764 y(W)-7 b(eek)22
b(10)p 241 4951 4 289 v 99 w(W)-7 b(e)29 b(dividied)h(sections)f(for)i
(the)e(sys-)293 4908 y(tems)21 b(comparison)h(paper)-6
b(.)p 1522 4951 V 3039 4951 V -100 5052 a(W)f(eek)22
b(11)p 241 5240 V 99 w(Finals)f(week)p 1522 5240 V 3039
5240 V 2380 w(Gr)o(oup)26 b(system)e(comparison)h(paper)-6
b(,)3090 5197 y(Pr)o(ogr)o(ess)21 b(update)g(video)h(and)g(r)o(eport)p
eop end
%%Page: 8 10
TeXDict begin 8 9 bop 4018 -296 a Fi(8)-148 -144 y Fg(R)t
Fh(E)t(F)t(E)t(R)t(E)t(N)t(C)t(E)t(S)-150 28 y Fb([1])40
b Fa(The)19 b(Oracle)f(Optimizer)f(-)i(Explain)f(the)h(Explain)f(Plan)p
Fb(,)f(Oracle,)i(April)h(2017.)-150 141 y([2])40 b Fa(Parallel)16
b(Execution)j(with)g(Oracle)e(Database)g(18c)j(Fundamentals)p
Fb(,)d(Oracle,)j(Febr)o(uary)g(2018.)-150 253 y([3])40
b(S.)53 b(Melnik,)f(A.)h(Gubar)o(ev)-7 b(,)51 b(J.)i(J.)f(Long,)h(G.)f
(Romer)-5 b(,)52 b(S.)g(Shivakumar)-5 b(,)54 b(M.)e(T)-6
b(olton,)53 b(and)f(T)-5 b(.)52 b(V)-6 b(assilakis,)55
b(\223Dr)o(emel:)e(Interactive)f(analysis)-33 366 y(of)k(web-scale)g
(datasets,\224)g(in)f Fa(Pr)o(oc.)g(of)f(the)i(36th)h(Int'l)e(Conf)g
(on)g(V)-6 b(ery)56 b(Lar)o(ge)f(Data)g(Bases)p Fb(,)f(2010,)i(pp.)g
(330\226339.)h([Online].)f(A)-6 b(vailable:)-33 478 y(http://www)g
(.vldb2010.or)o(g/accept.htm)-150 591 y([4])40 b(M.)17
b(Kornacker)-5 b(,)18 b(A.)f(Behm,)f(V)-9 b(.)17 b(Bittorf,)g(T)-5
b(.)17 b(Bobr)o(ovytsk,)g(C.)g(Ching,)g(A.)f(Choi,)i(J.)f(Erickson,)g
(M.)g(Gr)o(und,)g(D.)f(Hecht,)h(M.)g(Jacobs,)g(I.)g(Joshi,)h(L.)e(Kuf)o
(f,)i(D.)e(Kumar)-5 b(,)-33 703 y(A.)17 b(Leblang,)g(N.)h(Li,)f(I.)h
(Pandis,)g(H.)f(Robinson,)h(D.)e(R.)h(S.)g(Rus,)g(J.)g(Russell,)h(D.)f
(T)-6 b(sir)o(ogiannis,)19 b(S.)e(W)-6 b(anderman-Milne,)18
b(and)f(M.)g(Y)-6 b(oder)h(,)18 b(\223Impala:)h(A)e(modern,)-33
816 y(open-sour)o(ce)j(sql)g(engine)e(for)i(hadoop.\224)-150
928 y([5])40 b(E.)18 b(F)-6 b(.)19 b(Codd,)f(\223A)h(r)o(elational)i
(model)e(of)g(data)g(for)g(lar)o(ge)h(shar)o(ed)f(data)f(banks,\224)h
Fa(Communications)f(of)f(the)i(ACM)p Fb(,)g(vol.)g(13,)g(no.)g(6,)f
(pp.)h(377\226387,)h(1970.)-150 1041 y([6])40 b(M.)19
b(Stonebraker)-5 b(,)19 b(\223The)f(case)h(for)h(shar)o(ed)f
(nothing,\224)f Fa(IEEE)g(Database)g(Eng.)g(Bull.)p Fb(,)f(vol.)i(9,)f
(no.)h(1,)g(pp.)f(4\2269,)h(1986.)-150 1153 y([7])40
b(A.)19 b(W)-6 b(eiss)19 b(and)f(N.)h(Whitlock,)f(private)h
(communication,)g(November)g(2018.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
